using System;

// namespace Storage.Vss
namespace Win32
{
	extension Win32
	{
		// --- Constants ---
		
		public const int32 VSS_ASSOC_NO_MAX_SPACE = -1;
		public const uint32 VSS_ASSOC_REMOVE = 0;
		public const HRESULT VSS_E_BAD_STATE = -2147212543;
		public const HRESULT VSS_E_UNEXPECTED = -2147212542;
		public const HRESULT VSS_E_PROVIDER_ALREADY_REGISTERED = -2147212541;
		public const HRESULT VSS_E_PROVIDER_NOT_REGISTERED = -2147212540;
		public const HRESULT VSS_E_PROVIDER_VETO = -2147212538;
		public const HRESULT VSS_E_PROVIDER_IN_USE = -2147212537;
		public const HRESULT VSS_E_OBJECT_NOT_FOUND = -2147212536;
		public const HRESULT VSS_S_ASYNC_PENDING = 271113;
		public const HRESULT VSS_S_ASYNC_FINISHED = 271114;
		public const HRESULT VSS_S_ASYNC_CANCELLED = 271115;
		public const HRESULT VSS_E_VOLUME_NOT_SUPPORTED = -2147212532;
		public const HRESULT VSS_E_VOLUME_NOT_SUPPORTED_BY_PROVIDER = -2147212530;
		public const HRESULT VSS_E_OBJECT_ALREADY_EXISTS = -2147212531;
		public const HRESULT VSS_E_UNEXPECTED_PROVIDER_ERROR = -2147212529;
		public const HRESULT VSS_E_CORRUPT_XML_DOCUMENT = -2147212528;
		public const HRESULT VSS_E_INVALID_XML_DOCUMENT = -2147212527;
		public const HRESULT VSS_E_MAXIMUM_NUMBER_OF_VOLUMES_REACHED = -2147212526;
		public const HRESULT VSS_E_FLUSH_WRITES_TIMEOUT = -2147212525;
		public const HRESULT VSS_E_HOLD_WRITES_TIMEOUT = -2147212524;
		public const HRESULT VSS_E_UNEXPECTED_WRITER_ERROR = -2147212523;
		public const HRESULT VSS_E_SNAPSHOT_SET_IN_PROGRESS = -2147212522;
		public const HRESULT VSS_E_MAXIMUM_NUMBER_OF_SNAPSHOTS_REACHED = -2147212521;
		public const HRESULT VSS_E_WRITER_INFRASTRUCTURE = -2147212520;
		public const HRESULT VSS_E_WRITER_NOT_RESPONDING = -2147212519;
		public const HRESULT VSS_E_WRITER_ALREADY_SUBSCRIBED = -2147212518;
		public const HRESULT VSS_E_UNSUPPORTED_CONTEXT = -2147212517;
		public const HRESULT VSS_E_VOLUME_IN_USE = -2147212515;
		public const HRESULT VSS_E_MAXIMUM_DIFFAREA_ASSOCIATIONS_REACHED = -2147212514;
		public const HRESULT VSS_E_INSUFFICIENT_STORAGE = -2147212513;
		public const HRESULT VSS_E_NO_SNAPSHOTS_IMPORTED = -2147212512;
		public const HRESULT VSS_S_SOME_SNAPSHOTS_NOT_IMPORTED = 271137;
		public const HRESULT VSS_E_SOME_SNAPSHOTS_NOT_IMPORTED = -2147212511;
		public const HRESULT VSS_E_MAXIMUM_NUMBER_OF_REMOTE_MACHINES_REACHED = -2147212510;
		public const HRESULT VSS_E_REMOTE_SERVER_UNAVAILABLE = -2147212509;
		public const HRESULT VSS_E_REMOTE_SERVER_UNSUPPORTED = -2147212508;
		public const HRESULT VSS_E_REVERT_IN_PROGRESS = -2147212507;
		public const HRESULT VSS_E_REVERT_VOLUME_LOST = -2147212506;
		public const HRESULT VSS_E_REBOOT_REQUIRED = -2147212505;
		public const HRESULT VSS_E_TRANSACTION_FREEZE_TIMEOUT = -2147212504;
		public const HRESULT VSS_E_TRANSACTION_THAW_TIMEOUT = -2147212503;
		public const HRESULT VSS_E_VOLUME_NOT_LOCAL = -2147212499;
		public const HRESULT VSS_E_CLUSTER_TIMEOUT = -2147212498;
		public const HRESULT VSS_E_WRITERERROR_INCONSISTENTSNAPSHOT = -2147212304;
		public const HRESULT VSS_E_WRITERERROR_OUTOFRESOURCES = -2147212303;
		public const HRESULT VSS_E_WRITERERROR_TIMEOUT = -2147212302;
		public const HRESULT VSS_E_WRITERERROR_RETRYABLE = -2147212301;
		public const HRESULT VSS_E_WRITERERROR_NONRETRYABLE = -2147212300;
		public const HRESULT VSS_E_WRITERERROR_RECOVERY_FAILED = -2147212299;
		public const HRESULT VSS_E_BREAK_REVERT_ID_FAILED = -2147212298;
		public const HRESULT VSS_E_LEGACY_PROVIDER = -2147212297;
		public const HRESULT VSS_E_MISSING_DISK = -2147212296;
		public const HRESULT VSS_E_MISSING_HIDDEN_VOLUME = -2147212295;
		public const HRESULT VSS_E_MISSING_VOLUME = -2147212294;
		public const HRESULT VSS_E_AUTORECOVERY_FAILED = -2147212293;
		public const HRESULT VSS_E_DYNAMIC_DISK_ERROR = -2147212292;
		public const HRESULT VSS_E_NONTRANSPORTABLE_BCD = -2147212291;
		public const HRESULT VSS_E_CANNOT_REVERT_DISKID = -2147212290;
		public const HRESULT VSS_E_RESYNC_IN_PROGRESS = -2147212289;
		public const HRESULT VSS_E_CLUSTER_ERROR = -2147212288;
		public const HRESULT VSS_E_UNSELECTED_VOLUME = -2147212502;
		public const HRESULT VSS_E_SNAPSHOT_NOT_IN_SET = -2147212501;
		public const HRESULT VSS_E_NESTED_VOLUME_LIMIT = -2147212500;
		public const HRESULT VSS_E_NOT_SUPPORTED = -2147212497;
		public const HRESULT VSS_E_WRITERERROR_PARTIAL_FAILURE = -2147212490;
		public const HRESULT VSS_E_ASRERROR_DISK_ASSIGNMENT_FAILED = -2147212287;
		public const HRESULT VSS_E_ASRERROR_DISK_RECREATION_FAILED = -2147212286;
		public const HRESULT VSS_E_ASRERROR_NO_ARCPATH = -2147212285;
		public const HRESULT VSS_E_ASRERROR_MISSING_DYNDISK = -2147212284;
		public const HRESULT VSS_E_ASRERROR_SHARED_CRIDISK = -2147212283;
		public const HRESULT VSS_E_ASRERROR_DATADISK_RDISK0 = -2147212282;
		public const HRESULT VSS_E_ASRERROR_RDISK0_TOOSMALL = -2147212281;
		public const HRESULT VSS_E_ASRERROR_CRITICAL_DISKS_TOO_SMALL = -2147212280;
		public const HRESULT VSS_E_WRITER_STATUS_NOT_AVAILABLE = -2147212279;
		public const HRESULT VSS_E_ASRERROR_DYNAMIC_VHD_NOT_SUPPORTED = -2147212278;
		public const HRESULT VSS_E_CRITICAL_VOLUME_ON_INVALID_DISK = -2147212271;
		public const HRESULT VSS_E_ASRERROR_RDISK_FOR_SYSTEM_DISK_NOT_FOUND = -2147212270;
		public const HRESULT VSS_E_ASRERROR_NO_PHYSICAL_DISK_AVAILABLE = -2147212269;
		public const HRESULT VSS_E_ASRERROR_FIXED_PHYSICAL_DISK_AVAILABLE_AFTER_DISK_EXCLUSION = -2147212268;
		public const HRESULT VSS_E_ASRERROR_CRITICAL_DISK_CANNOT_BE_EXCLUDED = -2147212267;
		public const HRESULT VSS_E_ASRERROR_SYSTEM_PARTITION_HIDDEN = -2147212266;
		public const HRESULT VSS_E_FSS_TIMEOUT = -2147212265;
		
		// --- Enums ---
		
		[AllowDuplicates]
		public enum VSS_OBJECT_TYPE : int32
		{
			VSS_OBJECT_UNKNOWN = 0,
			VSS_OBJECT_NONE = 1,
			VSS_OBJECT_SNAPSHOT_SET = 2,
			VSS_OBJECT_SNAPSHOT = 3,
			VSS_OBJECT_PROVIDER = 4,
			VSS_OBJECT_TYPE_COUNT = 5,
		}
		[AllowDuplicates]
		public enum VSS_SNAPSHOT_STATE : int32
		{
			VSS_SS_UNKNOWN = 0,
			VSS_SS_PREPARING = 1,
			VSS_SS_PROCESSING_PREPARE = 2,
			VSS_SS_PREPARED = 3,
			VSS_SS_PROCESSING_PRECOMMIT = 4,
			VSS_SS_PRECOMMITTED = 5,
			VSS_SS_PROCESSING_COMMIT = 6,
			VSS_SS_COMMITTED = 7,
			VSS_SS_PROCESSING_POSTCOMMIT = 8,
			VSS_SS_PROCESSING_PREFINALCOMMIT = 9,
			VSS_SS_PREFINALCOMMITTED = 10,
			VSS_SS_PROCESSING_POSTFINALCOMMIT = 11,
			VSS_SS_CREATED = 12,
			VSS_SS_ABORTED = 13,
			VSS_SS_DELETED = 14,
			VSS_SS_POSTCOMMITTED = 15,
			VSS_SS_COUNT = 16,
		}
		[AllowDuplicates]
		public enum VSS_VOLUME_SNAPSHOT_ATTRIBUTES : int32
		{
			VSS_VOLSNAP_ATTR_PERSISTENT = 1,
			VSS_VOLSNAP_ATTR_NO_AUTORECOVERY = 2,
			VSS_VOLSNAP_ATTR_CLIENT_ACCESSIBLE = 4,
			VSS_VOLSNAP_ATTR_NO_AUTO_RELEASE = 8,
			VSS_VOLSNAP_ATTR_NO_WRITERS = 16,
			VSS_VOLSNAP_ATTR_TRANSPORTABLE = 32,
			VSS_VOLSNAP_ATTR_NOT_SURFACED = 64,
			VSS_VOLSNAP_ATTR_NOT_TRANSACTED = 128,
			VSS_VOLSNAP_ATTR_HARDWARE_ASSISTED = 65536,
			VSS_VOLSNAP_ATTR_DIFFERENTIAL = 131072,
			VSS_VOLSNAP_ATTR_PLEX = 262144,
			VSS_VOLSNAP_ATTR_IMPORTED = 524288,
			VSS_VOLSNAP_ATTR_EXPOSED_LOCALLY = 1048576,
			VSS_VOLSNAP_ATTR_EXPOSED_REMOTELY = 2097152,
			VSS_VOLSNAP_ATTR_AUTORECOVER = 4194304,
			VSS_VOLSNAP_ATTR_ROLLBACK_RECOVERY = 8388608,
			VSS_VOLSNAP_ATTR_DELAYED_POSTSNAPSHOT = 16777216,
			VSS_VOLSNAP_ATTR_TXF_RECOVERY = 33554432,
			VSS_VOLSNAP_ATTR_FILE_SHARE = 67108864,
		}
		[AllowDuplicates]
		public enum VSS_SNAPSHOT_CONTEXT : int32
		{
			VSS_CTX_BACKUP = 0,
			VSS_CTX_FILE_SHARE_BACKUP = 16,
			VSS_CTX_NAS_ROLLBACK = 25,
			VSS_CTX_APP_ROLLBACK = 9,
			VSS_CTX_CLIENT_ACCESSIBLE = 29,
			VSS_CTX_CLIENT_ACCESSIBLE_WRITERS = 13,
			VSS_CTX_ALL = -1,
		}
		[AllowDuplicates]
		public enum VSS_PROVIDER_CAPABILITIES : int32
		{
			VSS_PRV_CAPABILITY_LEGACY = 1,
			VSS_PRV_CAPABILITY_COMPLIANT = 2,
			VSS_PRV_CAPABILITY_LUN_REPOINT = 4,
			VSS_PRV_CAPABILITY_LUN_RESYNC = 8,
			VSS_PRV_CAPABILITY_OFFLINE_CREATION = 16,
			VSS_PRV_CAPABILITY_MULTIPLE_IMPORT = 32,
			VSS_PRV_CAPABILITY_RECYCLING = 64,
			VSS_PRV_CAPABILITY_PLEX = 128,
			VSS_PRV_CAPABILITY_DIFFERENTIAL = 256,
			VSS_PRV_CAPABILITY_CLUSTERED = 512,
		}
		[AllowDuplicates]
		public enum VSS_HARDWARE_OPTIONS : int32
		{
			VSS_BREAKEX_FLAG_MASK_LUNS = 1,
			VSS_BREAKEX_FLAG_MAKE_READ_WRITE = 2,
			VSS_BREAKEX_FLAG_REVERT_IDENTITY_ALL = 4,
			VSS_BREAKEX_FLAG_REVERT_IDENTITY_NONE = 8,
			VSS_ONLUNSTATECHANGE_NOTIFY_READ_WRITE = 256,
			VSS_ONLUNSTATECHANGE_NOTIFY_LUN_PRE_RECOVERY = 512,
			VSS_ONLUNSTATECHANGE_NOTIFY_LUN_POST_RECOVERY = 1024,
			VSS_ONLUNSTATECHANGE_DO_MASK_LUNS = 2048,
		}
		[AllowDuplicates]
		public enum VSS_RECOVERY_OPTIONS : int32
		{
			VSS_RECOVERY_REVERT_IDENTITY_ALL = 256,
			VSS_RECOVERY_NO_VOLUME_CHECK = 512,
		}
		[AllowDuplicates]
		public enum VSS_WRITER_STATE : int32
		{
			VSS_WS_UNKNOWN = 0,
			VSS_WS_STABLE = 1,
			VSS_WS_WAITING_FOR_FREEZE = 2,
			VSS_WS_WAITING_FOR_THAW = 3,
			VSS_WS_WAITING_FOR_POST_SNAPSHOT = 4,
			VSS_WS_WAITING_FOR_BACKUP_COMPLETE = 5,
			VSS_WS_FAILED_AT_IDENTIFY = 6,
			VSS_WS_FAILED_AT_PREPARE_BACKUP = 7,
			VSS_WS_FAILED_AT_PREPARE_SNAPSHOT = 8,
			VSS_WS_FAILED_AT_FREEZE = 9,
			VSS_WS_FAILED_AT_THAW = 10,
			VSS_WS_FAILED_AT_POST_SNAPSHOT = 11,
			VSS_WS_FAILED_AT_BACKUP_COMPLETE = 12,
			VSS_WS_FAILED_AT_PRE_RESTORE = 13,
			VSS_WS_FAILED_AT_POST_RESTORE = 14,
			VSS_WS_FAILED_AT_BACKUPSHUTDOWN = 15,
			VSS_WS_COUNT = 16,
		}
		[AllowDuplicates]
		public enum VSS_BACKUP_TYPE : int32
		{
			VSS_BT_UNDEFINED = 0,
			VSS_BT_FULL = 1,
			VSS_BT_INCREMENTAL = 2,
			VSS_BT_DIFFERENTIAL = 3,
			VSS_BT_LOG = 4,
			VSS_BT_COPY = 5,
			VSS_BT_OTHER = 6,
		}
		[AllowDuplicates]
		public enum VSS_RESTORE_TYPE : int32
		{
			VSS_RTYPE_UNDEFINED = 0,
			VSS_RTYPE_BY_COPY = 1,
			VSS_RTYPE_IMPORT = 2,
			VSS_RTYPE_OTHER = 3,
		}
		[AllowDuplicates]
		public enum VSS_ROLLFORWARD_TYPE : int32
		{
			VSS_RF_UNDEFINED = 0,
			VSS_RF_NONE = 1,
			VSS_RF_ALL = 2,
			VSS_RF_PARTIAL = 3,
		}
		[AllowDuplicates]
		public enum VSS_PROVIDER_TYPE : int32
		{
			VSS_PROV_UNKNOWN = 0,
			VSS_PROV_SYSTEM = 1,
			VSS_PROV_SOFTWARE = 2,
			VSS_PROV_HARDWARE = 3,
			VSS_PROV_FILESHARE = 4,
		}
		[AllowDuplicates]
		public enum VSS_APPLICATION_LEVEL : int32
		{
			VSS_APP_UNKNOWN = 0,
			VSS_APP_SYSTEM = 1,
			VSS_APP_BACK_END = 2,
			VSS_APP_FRONT_END = 3,
			VSS_APP_SYSTEM_RM = 4,
			VSS_APP_AUTO = -1,
		}
		[AllowDuplicates]
		public enum VSS_SNAPSHOT_COMPATIBILITY : int32
		{
			VSS_SC_DISABLE_DEFRAG = 1,
			VSS_SC_DISABLE_CONTENTINDEX = 2,
		}
		[AllowDuplicates]
		public enum VSS_SNAPSHOT_PROPERTY_ID : int32
		{
			VSS_SPROPID_UNKNOWN = 0,
			VSS_SPROPID_SNAPSHOT_ID = 1,
			VSS_SPROPID_SNAPSHOT_SET_ID = 2,
			VSS_SPROPID_SNAPSHOTS_COUNT = 3,
			VSS_SPROPID_SNAPSHOT_DEVICE = 4,
			VSS_SPROPID_ORIGINAL_VOLUME = 5,
			VSS_SPROPID_ORIGINATING_MACHINE = 6,
			VSS_SPROPID_SERVICE_MACHINE = 7,
			VSS_SPROPID_EXPOSED_NAME = 8,
			VSS_SPROPID_EXPOSED_PATH = 9,
			VSS_SPROPID_PROVIDER_ID = 10,
			VSS_SPROPID_SNAPSHOT_ATTRIBUTES = 11,
			VSS_SPROPID_CREATION_TIMESTAMP = 12,
			VSS_SPROPID_STATUS = 13,
		}
		[AllowDuplicates]
		public enum VSS_FILE_SPEC_BACKUP_TYPE : int32
		{
			VSS_FSBT_FULL_BACKUP_REQUIRED = 1,
			VSS_FSBT_DIFFERENTIAL_BACKUP_REQUIRED = 2,
			VSS_FSBT_INCREMENTAL_BACKUP_REQUIRED = 4,
			VSS_FSBT_LOG_BACKUP_REQUIRED = 8,
			VSS_FSBT_FULL_SNAPSHOT_REQUIRED = 256,
			VSS_FSBT_DIFFERENTIAL_SNAPSHOT_REQUIRED = 512,
			VSS_FSBT_INCREMENTAL_SNAPSHOT_REQUIRED = 1024,
			VSS_FSBT_LOG_SNAPSHOT_REQUIRED = 2048,
			VSS_FSBT_CREATED_DURING_BACKUP = 65536,
			VSS_FSBT_ALL_BACKUP_REQUIRED = 15,
			VSS_FSBT_ALL_SNAPSHOT_REQUIRED = 3840,
		}
		[AllowDuplicates]
		public enum VSS_BACKUP_SCHEMA : int32
		{
			VSS_BS_UNDEFINED = 0,
			VSS_BS_DIFFERENTIAL = 1,
			VSS_BS_INCREMENTAL = 2,
			VSS_BS_EXCLUSIVE_INCREMENTAL_DIFFERENTIAL = 4,
			VSS_BS_LOG = 8,
			VSS_BS_COPY = 16,
			VSS_BS_TIMESTAMPED = 32,
			VSS_BS_LAST_MODIFY = 64,
			VSS_BS_LSN = 128,
			VSS_BS_WRITER_SUPPORTS_NEW_TARGET = 256,
			VSS_BS_WRITER_SUPPORTS_RESTORE_WITH_MOVE = 512,
			VSS_BS_INDEPENDENT_SYSTEM_STATE = 1024,
			VSS_BS_ROLLFORWARD_RESTORE = 4096,
			VSS_BS_RESTORE_RENAME = 8192,
			VSS_BS_AUTHORITATIVE_RESTORE = 16384,
			VSS_BS_WRITER_SUPPORTS_PARALLEL_RESTORES = 32768,
		}
		[AllowDuplicates]
		public enum VSS_USAGE_TYPE : int32
		{
			VSS_UT_UNDEFINED = 0,
			VSS_UT_BOOTABLESYSTEMSTATE = 1,
			VSS_UT_SYSTEMSERVICE = 2,
			VSS_UT_USERDATA = 3,
			VSS_UT_OTHER = 4,
		}
		[AllowDuplicates]
		public enum VSS_SOURCE_TYPE : int32
		{
			VSS_ST_UNDEFINED = 0,
			VSS_ST_TRANSACTEDDB = 1,
			VSS_ST_NONTRANSACTEDDB = 2,
			VSS_ST_OTHER = 3,
		}
		[AllowDuplicates]
		public enum VSS_RESTOREMETHOD_ENUM : int32
		{
			VSS_RME_UNDEFINED = 0,
			VSS_RME_RESTORE_IF_NOT_THERE = 1,
			VSS_RME_RESTORE_IF_CAN_REPLACE = 2,
			VSS_RME_STOP_RESTORE_START = 3,
			VSS_RME_RESTORE_TO_ALTERNATE_LOCATION = 4,
			VSS_RME_RESTORE_AT_REBOOT = 5,
			VSS_RME_RESTORE_AT_REBOOT_IF_CANNOT_REPLACE = 6,
			VSS_RME_CUSTOM = 7,
			VSS_RME_RESTORE_STOP_START = 8,
		}
		[AllowDuplicates]
		public enum VSS_WRITERRESTORE_ENUM : int32
		{
			VSS_WRE_UNDEFINED = 0,
			VSS_WRE_NEVER = 1,
			VSS_WRE_IF_REPLACE_FAILS = 2,
			VSS_WRE_ALWAYS = 3,
		}
		[AllowDuplicates]
		public enum VSS_COMPONENT_TYPE : int32
		{
			VSS_CT_UNDEFINED = 0,
			VSS_CT_DATABASE = 1,
			VSS_CT_FILEGROUP = 2,
		}
		[AllowDuplicates]
		public enum VSS_ALTERNATE_WRITER_STATE : int32
		{
			VSS_AWS_UNDEFINED = 0,
			VSS_AWS_NO_ALTERNATE_WRITER = 1,
			VSS_AWS_ALTERNATE_WRITER_EXISTS = 2,
			VSS_AWS_THIS_IS_ALTERNATE_WRITER = 3,
		}
		[AllowDuplicates]
		public enum VSS_SUBSCRIBE_MASK : int32
		{
			VSS_SM_POST_SNAPSHOT_FLAG = 1,
			VSS_SM_BACKUP_EVENTS_FLAG = 2,
			VSS_SM_RESTORE_EVENTS_FLAG = 4,
			VSS_SM_IO_THROTTLING_FLAG = 8,
			VSS_SM_ALL_FLAGS = -1,
		}
		[AllowDuplicates]
		public enum VSS_RESTORE_TARGET : int32
		{
			VSS_RT_UNDEFINED = 0,
			VSS_RT_ORIGINAL = 1,
			VSS_RT_ALTERNATE = 2,
			VSS_RT_DIRECTED = 3,
			VSS_RT_ORIGINAL_LOCATION = 4,
		}
		[AllowDuplicates]
		public enum VSS_FILE_RESTORE_STATUS : int32
		{
			VSS_RS_UNDEFINED = 0,
			VSS_RS_NONE = 1,
			VSS_RS_ALL = 2,
			VSS_RS_FAILED = 3,
		}
		[AllowDuplicates]
		public enum VSS_COMPONENT_FLAGS : int32
		{
			VSS_CF_BACKUP_RECOVERY = 1,
			VSS_CF_APP_ROLLBACK_RECOVERY = 2,
			VSS_CF_NOT_SYSTEM_STATE = 4,
		}
		[AllowDuplicates]
		public enum VSS_MGMT_OBJECT_TYPE : int32
		{
			VSS_MGMT_OBJECT_UNKNOWN = 0,
			VSS_MGMT_OBJECT_VOLUME = 1,
			VSS_MGMT_OBJECT_DIFF_VOLUME = 2,
			VSS_MGMT_OBJECT_DIFF_AREA = 3,
		}
		[AllowDuplicates]
		public enum VSS_PROTECTION_LEVEL : int32
		{
			VSS_PROTECTION_LEVEL_ORIGINAL_VOLUME = 0,
			VSS_PROTECTION_LEVEL_SNAPSHOT = 1,
		}
		[AllowDuplicates]
		public enum VSS_PROTECTION_FAULT : int32
		{
			VSS_PROTECTION_FAULT_NONE = 0,
			VSS_PROTECTION_FAULT_DIFF_AREA_MISSING = 1,
			VSS_PROTECTION_FAULT_IO_FAILURE_DURING_ONLINE = 2,
			VSS_PROTECTION_FAULT_META_DATA_CORRUPTION = 3,
			VSS_PROTECTION_FAULT_MEMORY_ALLOCATION_FAILURE = 4,
			VSS_PROTECTION_FAULT_MAPPED_MEMORY_FAILURE = 5,
			VSS_PROTECTION_FAULT_COW_READ_FAILURE = 6,
			VSS_PROTECTION_FAULT_COW_WRITE_FAILURE = 7,
			VSS_PROTECTION_FAULT_DIFF_AREA_FULL = 8,
			VSS_PROTECTION_FAULT_GROW_TOO_SLOW = 9,
			VSS_PROTECTION_FAULT_GROW_FAILED = 10,
			VSS_PROTECTION_FAULT_DESTROY_ALL_SNAPSHOTS = 11,
			VSS_PROTECTION_FAULT_FILE_SYSTEM_FAILURE = 12,
			VSS_PROTECTION_FAULT_IO_FAILURE = 13,
			VSS_PROTECTION_FAULT_DIFF_AREA_REMOVED = 14,
			VSS_PROTECTION_FAULT_EXTERNAL_WRITER_TO_DIFF_AREA = 15,
			VSS_PROTECTION_FAULT_MOUNT_DURING_CLUSTER_OFFLINE = 16,
		}
		
		// --- Structs ---
		
		[CRepr]
		public struct VSS_SNAPSHOT_PROP
		{
			public Guid m_SnapshotId;
			public Guid m_SnapshotSetId;
			public int32 m_lSnapshotsCount;
			public uint16* m_pwszSnapshotDeviceObject;
			public uint16* m_pwszOriginalVolumeName;
			public uint16* m_pwszOriginatingMachine;
			public uint16* m_pwszServiceMachine;
			public uint16* m_pwszExposedName;
			public uint16* m_pwszExposedPath;
			public Guid m_ProviderId;
			public int32 m_lSnapshotAttributes;
			public int64 m_tsCreationTimestamp;
			public VSS_SNAPSHOT_STATE m_eStatus;
		}
		[CRepr]
		public struct VSS_PROVIDER_PROP
		{
			public Guid m_ProviderId;
			public uint16* m_pwszProviderName;
			public VSS_PROVIDER_TYPE m_eProviderType;
			public uint16* m_pwszProviderVersion;
			public Guid m_ProviderVersionId;
			public Guid m_ClassId;
		}
		[CRepr, Union]
		public struct VSS_OBJECT_UNION
		{
			public VSS_SNAPSHOT_PROP Snap;
			public VSS_PROVIDER_PROP Prov;
		}
		[CRepr]
		public struct VSS_OBJECT_PROP
		{
			public VSS_OBJECT_TYPE Type;
			public VSS_OBJECT_UNION Obj;
		}
		[CRepr]
		public struct IVssExamineWriterMetadata
		{
		}
		[CRepr]
		public struct VSS_VOLUME_PROP
		{
			public uint16* m_pwszVolumeName;
			public uint16* m_pwszVolumeDisplayName;
		}
		[CRepr]
		public struct VSS_DIFF_VOLUME_PROP
		{
			public uint16* m_pwszVolumeName;
			public uint16* m_pwszVolumeDisplayName;
			public int64 m_llVolumeFreeSpace;
			public int64 m_llVolumeTotalSpace;
		}
		[CRepr]
		public struct VSS_DIFF_AREA_PROP
		{
			public uint16* m_pwszVolumeName;
			public uint16* m_pwszDiffAreaVolumeName;
			public int64 m_llMaximumDiffSpace;
			public int64 m_llAllocatedDiffSpace;
			public int64 m_llUsedDiffSpace;
		}
		[CRepr, Union]
		public struct VSS_MGMT_OBJECT_UNION
		{
			public VSS_VOLUME_PROP Vol;
			public VSS_DIFF_VOLUME_PROP DiffVol;
			public VSS_DIFF_AREA_PROP DiffArea;
		}
		[CRepr]
		public struct VSS_MGMT_OBJECT_PROP
		{
			public VSS_MGMT_OBJECT_TYPE Type;
			public VSS_MGMT_OBJECT_UNION Obj;
		}
		[CRepr]
		public struct VSS_VOLUME_PROTECTION_INFO
		{
			public VSS_PROTECTION_LEVEL m_protectionLevel;
			public BOOL m_volumeIsOfflineForProtection;
			public VSS_PROTECTION_FAULT m_protectionFault;
			public int32 m_failureStatus;
			public BOOL m_volumeHasUnusedDiffArea;
			public uint32 m_reserved;
		}
		
		// --- COM Class IDs ---
		
		public const Guid CLSID_VssSnapshotMgmt = .(0x0b5a2c52, 0x3eb9, 0x470a, 0x96, 0xe2, 0x6c, 0x6d, 0x45, 0x70, 0xe4, 0x0f);
		public const Guid CLSID_VSSCoordinator = .(0xe579ab5f, 0x1cc4, 0x44b4, 0xbe, 0xd9, 0xde, 0x09, 0x91, 0xff, 0x06, 0x23);
		
		// --- COM Interfaces ---
		
		public struct IVssEnumObject {}
		public struct IVssAsync {}
		public struct IVssWMFiledesc {}
		public struct IVssWMDependency {}
		public struct IVssComponent {}
		public struct IVssWriterComponents {}
		public struct IVssComponentEx {}
		public struct IVssComponentEx2 {}
		public struct IVssCreateWriterMetadata {}
		public struct IVssWriterImpl {}
		public struct IVssCreateExpressWriterMetadata {}
		public struct IVssExpressWriter {}
		public struct IVssSnapshotMgmt {}
		public struct IVssSnapshotMgmt2 {}
		public struct IVssDifferentialSoftwareSnapshotMgmt {}
		public struct IVssDifferentialSoftwareSnapshotMgmt2 {}
		public struct IVssDifferentialSoftwareSnapshotMgmt3 {}
		public struct IVssEnumMgmtObject {}
		public struct IVssAdmin {}
		public struct IVssAdminEx {}
		public struct IVssSoftwareSnapshotProvider {}
		public struct IVssProviderCreateSnapshotSet {}
		public struct IVssProviderNotifications {}
		public struct IVssHardwareSnapshotProvider {}
		public struct IVssHardwareSnapshotProviderEx {}
		public struct IVssFileShareSnapshotProvider {}
		
		// --- Functions ---
		
		[Import("vssapi.dll"), CLink, CallingConvention(.Stdcall)]
		public static extern HRESULT CreateVssExpressWriterInternal(IVssExpressWriter* ppWriter);
		
	}
}

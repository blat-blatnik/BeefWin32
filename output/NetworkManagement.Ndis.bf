using System;

// namespace NetworkManagement.Ndis
namespace Win32
{
	extension Win32
	{
		// --- Constants ---
		
		public const uint32 IOCTL_NDIS_RESERVED5 = 1507380;
		public const uint32 IOCTL_NDIS_RESERVED6 = 1540152;
		public const uint32 NDIS_OBJECT_TYPE_DEFAULT = 128;
		public const uint32 NDIS_OBJECT_TYPE_MINIPORT_INIT_PARAMETERS = 129;
		public const uint32 NDIS_OBJECT_TYPE_SG_DMA_DESCRIPTION = 131;
		public const uint32 NDIS_OBJECT_TYPE_MINIPORT_INTERRUPT = 132;
		public const uint32 NDIS_OBJECT_TYPE_DEVICE_OBJECT_ATTRIBUTES = 133;
		public const uint32 NDIS_OBJECT_TYPE_BIND_PARAMETERS = 134;
		public const uint32 NDIS_OBJECT_TYPE_OPEN_PARAMETERS = 135;
		public const uint32 NDIS_OBJECT_TYPE_RSS_CAPABILITIES = 136;
		public const uint32 NDIS_OBJECT_TYPE_RSS_PARAMETERS = 137;
		public const uint32 NDIS_OBJECT_TYPE_MINIPORT_DRIVER_CHARACTERISTICS = 138;
		public const uint32 NDIS_OBJECT_TYPE_FILTER_DRIVER_CHARACTERISTICS = 139;
		public const uint32 NDIS_OBJECT_TYPE_FILTER_PARTIAL_CHARACTERISTICS = 140;
		public const uint32 NDIS_OBJECT_TYPE_FILTER_ATTRIBUTES = 141;
		public const uint32 NDIS_OBJECT_TYPE_CLIENT_CHIMNEY_OFFLOAD_GENERIC_CHARACTERISTICS = 142;
		public const uint32 NDIS_OBJECT_TYPE_PROVIDER_CHIMNEY_OFFLOAD_GENERIC_CHARACTERISTICS = 143;
		public const uint32 NDIS_OBJECT_TYPE_CO_PROTOCOL_CHARACTERISTICS = 144;
		public const uint32 NDIS_OBJECT_TYPE_CO_MINIPORT_CHARACTERISTICS = 145;
		public const uint32 NDIS_OBJECT_TYPE_MINIPORT_PNP_CHARACTERISTICS = 146;
		public const uint32 NDIS_OBJECT_TYPE_CLIENT_CHIMNEY_OFFLOAD_CHARACTERISTICS = 147;
		public const uint32 NDIS_OBJECT_TYPE_PROVIDER_CHIMNEY_OFFLOAD_CHARACTERISTICS = 148;
		public const uint32 NDIS_OBJECT_TYPE_PROTOCOL_DRIVER_CHARACTERISTICS = 149;
		public const uint32 NDIS_OBJECT_TYPE_REQUEST_EX = 150;
		public const uint32 NDIS_OBJECT_TYPE_TIMER_CHARACTERISTICS = 151;
		public const uint32 NDIS_OBJECT_TYPE_STATUS_INDICATION = 152;
		public const uint32 NDIS_OBJECT_TYPE_FILTER_ATTACH_PARAMETERS = 153;
		public const uint32 NDIS_OBJECT_TYPE_FILTER_PAUSE_PARAMETERS = 154;
		public const uint32 NDIS_OBJECT_TYPE_FILTER_RESTART_PARAMETERS = 155;
		public const uint32 NDIS_OBJECT_TYPE_PORT_CHARACTERISTICS = 156;
		public const uint32 NDIS_OBJECT_TYPE_PORT_STATE = 157;
		public const uint32 NDIS_OBJECT_TYPE_MINIPORT_ADAPTER_REGISTRATION_ATTRIBUTES = 158;
		public const uint32 NDIS_OBJECT_TYPE_MINIPORT_ADAPTER_GENERAL_ATTRIBUTES = 159;
		public const uint32 NDIS_OBJECT_TYPE_MINIPORT_ADAPTER_OFFLOAD_ATTRIBUTES = 160;
		public const uint32 NDIS_OBJECT_TYPE_MINIPORT_ADAPTER_NATIVE_802_11_ATTRIBUTES = 161;
		public const uint32 NDIS_OBJECT_TYPE_RESTART_GENERAL_ATTRIBUTES = 162;
		public const uint32 NDIS_OBJECT_TYPE_PROTOCOL_RESTART_PARAMETERS = 163;
		public const uint32 NDIS_OBJECT_TYPE_MINIPORT_ADD_DEVICE_REGISTRATION_ATTRIBUTES = 164;
		public const uint32 NDIS_OBJECT_TYPE_CO_CALL_MANAGER_OPTIONAL_HANDLERS = 165;
		public const uint32 NDIS_OBJECT_TYPE_CO_CLIENT_OPTIONAL_HANDLERS = 166;
		public const uint32 NDIS_OBJECT_TYPE_OFFLOAD = 167;
		public const uint32 NDIS_OBJECT_TYPE_OFFLOAD_ENCAPSULATION = 168;
		public const uint32 NDIS_OBJECT_TYPE_CONFIGURATION_OBJECT = 169;
		public const uint32 NDIS_OBJECT_TYPE_DRIVER_WRAPPER_OBJECT = 170;
		public const uint32 NDIS_OBJECT_TYPE_HD_SPLIT_ATTRIBUTES = 171;
		public const uint32 NDIS_OBJECT_TYPE_NSI_NETWORK_RW_STRUCT = 172;
		public const uint32 NDIS_OBJECT_TYPE_NSI_COMPARTMENT_RW_STRUCT = 173;
		public const uint32 NDIS_OBJECT_TYPE_NSI_INTERFACE_PERSIST_RW_STRUCT = 174;
		public const uint32 NDIS_OBJECT_TYPE_MINIPORT_ADAPTER_HARDWARE_ASSIST_ATTRIBUTES = 175;
		public const uint32 NDIS_OBJECT_TYPE_SHARED_MEMORY_PROVIDER_CHARACTERISTICS = 176;
		public const uint32 NDIS_OBJECT_TYPE_RSS_PROCESSOR_INFO = 177;
		public const uint32 NDIS_OBJECT_TYPE_NDK_PROVIDER_CHARACTERISTICS = 178;
		public const uint32 NDIS_OBJECT_TYPE_MINIPORT_ADAPTER_NDK_ATTRIBUTES = 179;
		public const uint32 NDIS_OBJECT_TYPE_MINIPORT_SS_CHARACTERISTICS = 180;
		public const uint32 NDIS_OBJECT_TYPE_QOS_CAPABILITIES = 181;
		public const uint32 NDIS_OBJECT_TYPE_QOS_PARAMETERS = 182;
		public const uint32 NDIS_OBJECT_TYPE_QOS_CLASSIFICATION_ELEMENT = 183;
		public const uint32 NDIS_OBJECT_TYPE_SWITCH_OPTIONAL_HANDLERS = 184;
		public const uint32 NDIS_OBJECT_TYPE_PD_TRANSMIT_QUEUE = 190;
		public const uint32 NDIS_OBJECT_TYPE_PD_RECEIVE_QUEUE = 191;
		public const uint32 NDIS_OBJECT_TYPE_MINIPORT_ADAPTER_PACKET_DIRECT_ATTRIBUTES = 197;
		public const uint32 NDIS_OBJECT_TYPE_MINIPORT_DEVICE_POWER_NOTIFICATION = 198;
		public const uint32 NDIS_OBJECT_TYPE_RSS_PARAMETERS_V2 = 200;
		public const uint32 NDIS_OBJECT_TYPE_RSS_SET_INDIRECTION_ENTRIES = 201;
		public const uint32 NDIS_STATISTICS_FLAGS_VALID_DIRECTED_FRAMES_RCV = 1;
		public const uint32 NDIS_STATISTICS_FLAGS_VALID_MULTICAST_FRAMES_RCV = 2;
		public const uint32 NDIS_STATISTICS_FLAGS_VALID_BROADCAST_FRAMES_RCV = 4;
		public const uint32 NDIS_STATISTICS_FLAGS_VALID_BYTES_RCV = 8;
		public const uint32 NDIS_STATISTICS_FLAGS_VALID_RCV_DISCARDS = 16;
		public const uint32 NDIS_STATISTICS_FLAGS_VALID_RCV_ERROR = 32;
		public const uint32 NDIS_STATISTICS_FLAGS_VALID_DIRECTED_FRAMES_XMIT = 64;
		public const uint32 NDIS_STATISTICS_FLAGS_VALID_MULTICAST_FRAMES_XMIT = 128;
		public const uint32 NDIS_STATISTICS_FLAGS_VALID_BROADCAST_FRAMES_XMIT = 256;
		public const uint32 NDIS_STATISTICS_FLAGS_VALID_BYTES_XMIT = 512;
		public const uint32 NDIS_STATISTICS_FLAGS_VALID_XMIT_ERROR = 1024;
		public const uint32 NDIS_STATISTICS_FLAGS_VALID_XMIT_DISCARDS = 32768;
		public const uint32 NDIS_STATISTICS_FLAGS_VALID_DIRECTED_BYTES_RCV = 65536;
		public const uint32 NDIS_STATISTICS_FLAGS_VALID_MULTICAST_BYTES_RCV = 131072;
		public const uint32 NDIS_STATISTICS_FLAGS_VALID_BROADCAST_BYTES_RCV = 262144;
		public const uint32 NDIS_STATISTICS_FLAGS_VALID_DIRECTED_BYTES_XMIT = 524288;
		public const uint32 NDIS_STATISTICS_FLAGS_VALID_MULTICAST_BYTES_XMIT = 1048576;
		public const uint32 NDIS_STATISTICS_FLAGS_VALID_BROADCAST_BYTES_XMIT = 2097152;
		public const uint32 NDIS_STATISTICS_INFO_REVISION_1 = 1;
		public const uint32 NDIS_RSC_STATISTICS_REVISION_1 = 1;
		public const uint32 NDIS_INTERRUPT_MODERATION_CHANGE_NEEDS_RESET = 1;
		public const uint32 NDIS_INTERRUPT_MODERATION_CHANGE_NEEDS_REINITIALIZE = 2;
		public const uint32 NDIS_INTERRUPT_MODERATION_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_TIMEOUT_DPC_REQUEST_CAPABILITIES_REVISION_1 = 1;
		public const uint32 NDIS_OBJECT_TYPE_PCI_DEVICE_CUSTOM_PROPERTIES_REVISION_1 = 1;
		public const uint32 NDIS_OBJECT_TYPE_PCI_DEVICE_CUSTOM_PROPERTIES_REVISION_2 = 2;
		public const uint32 OID_GEN_SUPPORTED_LIST = 65793;
		public const uint32 OID_GEN_HARDWARE_STATUS = 65794;
		public const uint32 OID_GEN_MEDIA_SUPPORTED = 65795;
		public const uint32 OID_GEN_MEDIA_IN_USE = 65796;
		public const uint32 OID_GEN_MAXIMUM_LOOKAHEAD = 65797;
		public const uint32 OID_GEN_MAXIMUM_FRAME_SIZE = 65798;
		public const uint32 OID_GEN_LINK_SPEED = 65799;
		public const uint32 OID_GEN_TRANSMIT_BUFFER_SPACE = 65800;
		public const uint32 OID_GEN_RECEIVE_BUFFER_SPACE = 65801;
		public const uint32 OID_GEN_TRANSMIT_BLOCK_SIZE = 65802;
		public const uint32 OID_GEN_RECEIVE_BLOCK_SIZE = 65803;
		public const uint32 OID_GEN_VENDOR_ID = 65804;
		public const uint32 OID_GEN_VENDOR_DESCRIPTION = 65805;
		public const uint32 OID_GEN_CURRENT_PACKET_FILTER = 65806;
		public const uint32 OID_GEN_CURRENT_LOOKAHEAD = 65807;
		public const uint32 OID_GEN_DRIVER_VERSION = 65808;
		public const uint32 OID_GEN_MAXIMUM_TOTAL_SIZE = 65809;
		public const uint32 OID_GEN_PROTOCOL_OPTIONS = 65810;
		public const uint32 OID_GEN_MAC_OPTIONS = 65811;
		public const uint32 OID_GEN_MEDIA_CONNECT_STATUS = 65812;
		public const uint32 OID_GEN_MAXIMUM_SEND_PACKETS = 65813;
		public const uint32 OID_GEN_VENDOR_DRIVER_VERSION = 65814;
		public const uint32 OID_GEN_SUPPORTED_GUIDS = 65815;
		public const uint32 OID_GEN_NETWORK_LAYER_ADDRESSES = 65816;
		public const uint32 OID_GEN_TRANSPORT_HEADER_OFFSET = 65817;
		public const uint32 OID_GEN_MEDIA_CAPABILITIES = 66049;
		public const uint32 OID_GEN_PHYSICAL_MEDIUM = 66050;
		public const uint32 OID_GEN_RECEIVE_SCALE_CAPABILITIES = 66051;
		public const uint32 OID_GEN_RECEIVE_SCALE_PARAMETERS = 66052;
		public const uint32 OID_GEN_MAC_ADDRESS = 66053;
		public const uint32 OID_GEN_MAX_LINK_SPEED = 66054;
		public const uint32 OID_GEN_LINK_STATE = 66055;
		public const uint32 OID_GEN_LINK_PARAMETERS = 66056;
		public const uint32 OID_GEN_INTERRUPT_MODERATION = 66057;
		public const uint32 OID_GEN_NDIS_RESERVED_3 = 66058;
		public const uint32 OID_GEN_NDIS_RESERVED_4 = 66059;
		public const uint32 OID_GEN_NDIS_RESERVED_5 = 66060;
		public const uint32 OID_GEN_ENUMERATE_PORTS = 66061;
		public const uint32 OID_GEN_PORT_STATE = 66062;
		public const uint32 OID_GEN_PORT_AUTHENTICATION_PARAMETERS = 66063;
		public const uint32 OID_GEN_TIMEOUT_DPC_REQUEST_CAPABILITIES = 66064;
		public const uint32 OID_GEN_PCI_DEVICE_CUSTOM_PROPERTIES = 66065;
		public const uint32 OID_GEN_NDIS_RESERVED_6 = 66066;
		public const uint32 OID_GEN_PHYSICAL_MEDIUM_EX = 66067;
		public const uint32 OID_GEN_RECEIVE_SCALE_PARAMETERS_V2 = 66068;
		public const uint32 OID_GEN_MACHINE_NAME = 66074;
		public const uint32 OID_GEN_RNDIS_CONFIG_PARAMETER = 66075;
		public const uint32 OID_GEN_VLAN_ID = 66076;
		public const uint32 OID_GEN_RECEIVE_HASH = 66079;
		public const uint32 OID_GEN_MINIPORT_RESTART_ATTRIBUTES = 66077;
		public const uint32 OID_GEN_HD_SPLIT_PARAMETERS = 66078;
		public const uint32 OID_GEN_HD_SPLIT_CURRENT_CONFIG = 66080;
		public const uint32 OID_GEN_PROMISCUOUS_MODE = 66176;
		public const uint32 OID_GEN_LAST_CHANGE = 66177;
		public const uint32 OID_GEN_DISCONTINUITY_TIME = 66178;
		public const uint32 OID_GEN_OPERATIONAL_STATUS = 66179;
		public const uint32 OID_GEN_XMIT_LINK_SPEED = 66180;
		public const uint32 OID_GEN_RCV_LINK_SPEED = 66181;
		public const uint32 OID_GEN_UNKNOWN_PROTOS = 66182;
		public const uint32 OID_GEN_INTERFACE_INFO = 66183;
		public const uint32 OID_GEN_ADMIN_STATUS = 66184;
		public const uint32 OID_GEN_ALIAS = 66185;
		public const uint32 OID_GEN_MEDIA_CONNECT_STATUS_EX = 66186;
		public const uint32 OID_GEN_LINK_SPEED_EX = 66187;
		public const uint32 OID_GEN_MEDIA_DUPLEX_STATE = 66188;
		public const uint32 OID_GEN_IP_OPER_STATUS = 66189;
		public const uint32 OID_WWAN_DRIVER_CAPS = 234946816;
		public const uint32 OID_WWAN_DEVICE_CAPS = 234946817;
		public const uint32 OID_WWAN_READY_INFO = 234946818;
		public const uint32 OID_WWAN_RADIO_STATE = 234946819;
		public const uint32 OID_WWAN_PIN = 234946820;
		public const uint32 OID_WWAN_PIN_LIST = 234946821;
		public const uint32 OID_WWAN_HOME_PROVIDER = 234946822;
		public const uint32 OID_WWAN_PREFERRED_PROVIDERS = 234946823;
		public const uint32 OID_WWAN_VISIBLE_PROVIDERS = 234946824;
		public const uint32 OID_WWAN_REGISTER_STATE = 234946825;
		public const uint32 OID_WWAN_PACKET_SERVICE = 234946826;
		public const uint32 OID_WWAN_SIGNAL_STATE = 234946827;
		public const uint32 OID_WWAN_CONNECT = 234946828;
		public const uint32 OID_WWAN_PROVISIONED_CONTEXTS = 234946829;
		public const uint32 OID_WWAN_SERVICE_ACTIVATION = 234946830;
		public const uint32 OID_WWAN_SMS_CONFIGURATION = 234946831;
		public const uint32 OID_WWAN_SMS_READ = 234946832;
		public const uint32 OID_WWAN_SMS_SEND = 234946833;
		public const uint32 OID_WWAN_SMS_DELETE = 234946834;
		public const uint32 OID_WWAN_SMS_STATUS = 234946835;
		public const uint32 OID_WWAN_VENDOR_SPECIFIC = 234946836;
		public const uint32 OID_WWAN_AUTH_CHALLENGE = 234946837;
		public const uint32 OID_WWAN_ENUMERATE_DEVICE_SERVICES = 234946838;
		public const uint32 OID_WWAN_SUBSCRIBE_DEVICE_SERVICE_EVENTS = 234946839;
		public const uint32 OID_WWAN_DEVICE_SERVICE_COMMAND = 234946840;
		public const uint32 OID_WWAN_USSD = 234946841;
		public const uint32 OID_WWAN_PIN_EX = 234946849;
		public const uint32 OID_WWAN_ENUMERATE_DEVICE_SERVICE_COMMANDS = 234946850;
		public const uint32 OID_WWAN_DEVICE_SERVICE_SESSION = 234946851;
		public const uint32 OID_WWAN_DEVICE_SERVICE_SESSION_WRITE = 234946852;
		public const uint32 OID_WWAN_PREFERRED_MULTICARRIER_PROVIDERS = 234946853;
		public const uint32 OID_WWAN_CREATE_MAC = 234946854;
		public const uint32 OID_WWAN_DELETE_MAC = 234946855;
		public const uint32 OID_WWAN_UICC_FILE_STATUS = 234946856;
		public const uint32 OID_WWAN_UICC_ACCESS_BINARY = 234946857;
		public const uint32 OID_WWAN_UICC_ACCESS_RECORD = 234946858;
		public const uint32 OID_WWAN_PIN_EX2 = 234946859;
		public const uint32 OID_WWAN_MBIM_VERSION = 234946860;
		public const uint32 OID_WWAN_SYS_CAPS = 234946861;
		public const uint32 OID_WWAN_DEVICE_CAPS_EX = 234946862;
		public const uint32 OID_WWAN_SYS_SLOTMAPPINGS = 234946863;
		public const uint32 OID_WWAN_SLOT_INFO_STATUS = 234946864;
		public const uint32 OID_WWAN_DEVICE_BINDINGS = 234946865;
		public const uint32 OID_WWAN_REGISTER_STATE_EX = 234946866;
		public const uint32 OID_WWAN_IMS_VOICE_STATE = 234946867;
		public const uint32 OID_WWAN_SIGNAL_STATE_EX = 234946868;
		public const uint32 OID_WWAN_LOCATION_STATE = 234946869;
		public const uint32 OID_WWAN_NITZ = 234946870;
		public const uint32 OID_WWAN_NETWORK_IDLE_HINT = 234946871;
		public const uint32 OID_WWAN_PRESHUTDOWN = 234946872;
		public const uint32 OID_WWAN_UICC_ATR = 234946873;
		public const uint32 OID_WWAN_UICC_OPEN_CHANNEL = 234946874;
		public const uint32 OID_WWAN_UICC_CLOSE_CHANNEL = 234946875;
		public const uint32 OID_WWAN_UICC_APDU = 234946876;
		public const uint32 OID_WWAN_UICC_TERMINAL_CAPABILITY = 234946877;
		public const uint32 OID_WWAN_PS_MEDIA_CONFIG = 234946878;
		public const uint32 OID_WWAN_SAR_CONFIG = 234946879;
		public const uint32 OID_WWAN_SAR_TRANSMISSION_STATUS = 234946880;
		public const uint32 OID_WWAN_NETWORK_BLACKLIST = 234946881;
		public const uint32 OID_WWAN_LTE_ATTACH_CONFIG = 234946882;
		public const uint32 OID_WWAN_LTE_ATTACH_STATUS = 234946883;
		public const uint32 OID_WWAN_MODEM_CONFIG_INFO = 234946884;
		public const uint32 OID_WWAN_PCO = 234946885;
		public const uint32 OID_WWAN_UICC_RESET = 234946886;
		public const uint32 OID_WWAN_DEVICE_RESET = 234946887;
		public const uint32 OID_WWAN_BASE_STATIONS_INFO = 234946888;
		public const uint32 OID_WWAN_MPDP = 234946889;
		public const uint32 OID_WWAN_UICC_APP_LIST = 234946890;
		public const uint32 OID_WWAN_MODEM_LOGGING_CONFIG = 234946891;
		public const uint32 OID_WWAN_REGISTER_PARAMS = 234946892;
		public const uint32 OID_WWAN_NETWORK_PARAMS = 234946893;
		public const uint32 OID_GEN_XMIT_OK = 131329;
		public const uint32 OID_GEN_RCV_OK = 131330;
		public const uint32 OID_GEN_XMIT_ERROR = 131331;
		public const uint32 OID_GEN_RCV_ERROR = 131332;
		public const uint32 OID_GEN_RCV_NO_BUFFER = 131333;
		public const uint32 OID_GEN_STATISTICS = 131334;
		public const uint32 OID_GEN_DIRECTED_BYTES_XMIT = 131585;
		public const uint32 OID_GEN_DIRECTED_FRAMES_XMIT = 131586;
		public const uint32 OID_GEN_MULTICAST_BYTES_XMIT = 131587;
		public const uint32 OID_GEN_MULTICAST_FRAMES_XMIT = 131588;
		public const uint32 OID_GEN_BROADCAST_BYTES_XMIT = 131589;
		public const uint32 OID_GEN_BROADCAST_FRAMES_XMIT = 131590;
		public const uint32 OID_GEN_DIRECTED_BYTES_RCV = 131591;
		public const uint32 OID_GEN_DIRECTED_FRAMES_RCV = 131592;
		public const uint32 OID_GEN_MULTICAST_BYTES_RCV = 131593;
		public const uint32 OID_GEN_MULTICAST_FRAMES_RCV = 131594;
		public const uint32 OID_GEN_BROADCAST_BYTES_RCV = 131595;
		public const uint32 OID_GEN_BROADCAST_FRAMES_RCV = 131596;
		public const uint32 OID_GEN_RCV_CRC_ERROR = 131597;
		public const uint32 OID_GEN_TRANSMIT_QUEUE_LENGTH = 131598;
		public const uint32 OID_GEN_GET_TIME_CAPS = 131599;
		public const uint32 OID_GEN_GET_NETCARD_TIME = 131600;
		public const uint32 OID_GEN_NETCARD_LOAD = 131601;
		public const uint32 OID_GEN_DEVICE_PROFILE = 131602;
		public const uint32 OID_GEN_INIT_TIME_MS = 131603;
		public const uint32 OID_GEN_RESET_COUNTS = 131604;
		public const uint32 OID_GEN_MEDIA_SENSE_COUNTS = 131605;
		public const uint32 OID_GEN_FRIENDLY_NAME = 131606;
		public const uint32 OID_GEN_NDIS_RESERVED_1 = 131607;
		public const uint32 OID_GEN_NDIS_RESERVED_2 = 131608;
		public const uint32 OID_GEN_BYTES_RCV = 131609;
		public const uint32 OID_GEN_BYTES_XMIT = 131610;
		public const uint32 OID_GEN_RCV_DISCARDS = 131611;
		public const uint32 OID_GEN_XMIT_DISCARDS = 131612;
		public const uint32 OID_TCP_RSC_STATISTICS = 131613;
		public const uint32 OID_GEN_NDIS_RESERVED_7 = 131614;
		public const uint32 OID_GEN_CO_SUPPORTED_LIST = 65793;
		public const uint32 OID_GEN_CO_HARDWARE_STATUS = 65794;
		public const uint32 OID_GEN_CO_MEDIA_SUPPORTED = 65795;
		public const uint32 OID_GEN_CO_MEDIA_IN_USE = 65796;
		public const uint32 OID_GEN_CO_LINK_SPEED = 65799;
		public const uint32 OID_GEN_CO_VENDOR_ID = 65804;
		public const uint32 OID_GEN_CO_VENDOR_DESCRIPTION = 65805;
		public const uint32 OID_GEN_CO_DRIVER_VERSION = 65808;
		public const uint32 OID_GEN_CO_PROTOCOL_OPTIONS = 65810;
		public const uint32 OID_GEN_CO_MAC_OPTIONS = 65811;
		public const uint32 OID_GEN_CO_MEDIA_CONNECT_STATUS = 65812;
		public const uint32 OID_GEN_CO_VENDOR_DRIVER_VERSION = 65814;
		public const uint32 OID_GEN_CO_SUPPORTED_GUIDS = 65815;
		public const uint32 OID_GEN_CO_GET_TIME_CAPS = 131599;
		public const uint32 OID_GEN_CO_GET_NETCARD_TIME = 131600;
		public const uint32 OID_GEN_CO_MINIMUM_LINK_SPEED = 131360;
		public const uint32 OID_GEN_CO_XMIT_PDUS_OK = 131329;
		public const uint32 OID_GEN_CO_RCV_PDUS_OK = 131330;
		public const uint32 OID_GEN_CO_XMIT_PDUS_ERROR = 131331;
		public const uint32 OID_GEN_CO_RCV_PDUS_ERROR = 131332;
		public const uint32 OID_GEN_CO_RCV_PDUS_NO_BUFFER = 131333;
		public const uint32 OID_GEN_CO_RCV_CRC_ERROR = 131597;
		public const uint32 OID_GEN_CO_TRANSMIT_QUEUE_LENGTH = 131598;
		public const uint32 OID_GEN_CO_BYTES_XMIT = 131585;
		public const uint32 OID_GEN_CO_BYTES_RCV = 131591;
		public const uint32 OID_GEN_CO_NETCARD_LOAD = 131601;
		public const uint32 OID_GEN_CO_DEVICE_PROFILE = 131602;
		public const uint32 OID_GEN_CO_BYTES_XMIT_OUTSTANDING = 131617;
		public const uint32 OID_KDNET_ENUMERATE_PFS = 131618;
		public const uint32 OID_KDNET_ADD_PF = 131619;
		public const uint32 OID_KDNET_REMOVE_PF = 131620;
		public const uint32 OID_KDNET_QUERY_PF_INFORMATION = 131621;
		public const uint32 OID_802_3_PERMANENT_ADDRESS = 16843009;
		public const uint32 OID_802_3_CURRENT_ADDRESS = 16843010;
		public const uint32 OID_802_3_MULTICAST_LIST = 16843011;
		public const uint32 OID_802_3_MAXIMUM_LIST_SIZE = 16843012;
		public const uint32 OID_802_3_MAC_OPTIONS = 16843013;
		public const uint32 NDIS_802_3_MAC_OPTION_PRIORITY = 1;
		public const uint32 OID_802_3_RCV_ERROR_ALIGNMENT = 16908545;
		public const uint32 OID_802_3_XMIT_ONE_COLLISION = 16908546;
		public const uint32 OID_802_3_XMIT_MORE_COLLISIONS = 16908547;
		public const uint32 OID_802_3_XMIT_DEFERRED = 16908801;
		public const uint32 OID_802_3_XMIT_MAX_COLLISIONS = 16908802;
		public const uint32 OID_802_3_RCV_OVERRUN = 16908803;
		public const uint32 OID_802_3_XMIT_UNDERRUN = 16908804;
		public const uint32 OID_802_3_XMIT_HEARTBEAT_FAILURE = 16908805;
		public const uint32 OID_802_3_XMIT_TIMES_CRS_LOST = 16908806;
		public const uint32 OID_802_3_XMIT_LATE_COLLISIONS = 16908807;
		public const uint32 OID_802_3_ADD_MULTICAST_ADDRESS = 16843272;
		public const uint32 OID_802_3_DELETE_MULTICAST_ADDRESS = 16843273;
		public const uint32 OID_802_5_PERMANENT_ADDRESS = 33620225;
		public const uint32 OID_802_5_CURRENT_ADDRESS = 33620226;
		public const uint32 OID_802_5_CURRENT_FUNCTIONAL = 33620227;
		public const uint32 OID_802_5_CURRENT_GROUP = 33620228;
		public const uint32 OID_802_5_LAST_OPEN_STATUS = 33620229;
		public const uint32 OID_802_5_CURRENT_RING_STATUS = 33620230;
		public const uint32 OID_802_5_CURRENT_RING_STATE = 33620231;
		public const uint32 OID_802_5_LINE_ERRORS = 33685761;
		public const uint32 OID_802_5_LOST_FRAMES = 33685762;
		public const uint32 OID_802_5_BURST_ERRORS = 33686017;
		public const uint32 OID_802_5_AC_ERRORS = 33686018;
		public const uint32 OID_802_5_ABORT_DELIMETERS = 33686019;
		public const uint32 OID_802_5_FRAME_COPIED_ERRORS = 33686020;
		public const uint32 OID_802_5_FREQUENCY_ERRORS = 33686021;
		public const uint32 OID_802_5_TOKEN_ERRORS = 33686022;
		public const uint32 OID_802_5_INTERNAL_ERRORS = 33686023;
		public const uint32 OID_FDDI_LONG_PERMANENT_ADDR = 50397441;
		public const uint32 OID_FDDI_LONG_CURRENT_ADDR = 50397442;
		public const uint32 OID_FDDI_LONG_MULTICAST_LIST = 50397443;
		public const uint32 OID_FDDI_LONG_MAX_LIST_SIZE = 50397444;
		public const uint32 OID_FDDI_SHORT_PERMANENT_ADDR = 50397445;
		public const uint32 OID_FDDI_SHORT_CURRENT_ADDR = 50397446;
		public const uint32 OID_FDDI_SHORT_MULTICAST_LIST = 50397447;
		public const uint32 OID_FDDI_SHORT_MAX_LIST_SIZE = 50397448;
		public const uint32 OID_FDDI_ATTACHMENT_TYPE = 50462977;
		public const uint32 OID_FDDI_UPSTREAM_NODE_LONG = 50462978;
		public const uint32 OID_FDDI_DOWNSTREAM_NODE_LONG = 50462979;
		public const uint32 OID_FDDI_FRAME_ERRORS = 50462980;
		public const uint32 OID_FDDI_FRAMES_LOST = 50462981;
		public const uint32 OID_FDDI_RING_MGT_STATE = 50462982;
		public const uint32 OID_FDDI_LCT_FAILURES = 50462983;
		public const uint32 OID_FDDI_LEM_REJECTS = 50462984;
		public const uint32 OID_FDDI_LCONNECTION_STATE = 50462985;
		public const uint32 OID_FDDI_SMT_STATION_ID = 50528769;
		public const uint32 OID_FDDI_SMT_OP_VERSION_ID = 50528770;
		public const uint32 OID_FDDI_SMT_HI_VERSION_ID = 50528771;
		public const uint32 OID_FDDI_SMT_LO_VERSION_ID = 50528772;
		public const uint32 OID_FDDI_SMT_MANUFACTURER_DATA = 50528773;
		public const uint32 OID_FDDI_SMT_USER_DATA = 50528774;
		public const uint32 OID_FDDI_SMT_MIB_VERSION_ID = 50528775;
		public const uint32 OID_FDDI_SMT_MAC_CT = 50528776;
		public const uint32 OID_FDDI_SMT_NON_MASTER_CT = 50528777;
		public const uint32 OID_FDDI_SMT_MASTER_CT = 50528778;
		public const uint32 OID_FDDI_SMT_AVAILABLE_PATHS = 50528779;
		public const uint32 OID_FDDI_SMT_CONFIG_CAPABILITIES = 50528780;
		public const uint32 OID_FDDI_SMT_CONFIG_POLICY = 50528781;
		public const uint32 OID_FDDI_SMT_CONNECTION_POLICY = 50528782;
		public const uint32 OID_FDDI_SMT_T_NOTIFY = 50528783;
		public const uint32 OID_FDDI_SMT_STAT_RPT_POLICY = 50528784;
		public const uint32 OID_FDDI_SMT_TRACE_MAX_EXPIRATION = 50528785;
		public const uint32 OID_FDDI_SMT_PORT_INDEXES = 50528786;
		public const uint32 OID_FDDI_SMT_MAC_INDEXES = 50528787;
		public const uint32 OID_FDDI_SMT_BYPASS_PRESENT = 50528788;
		public const uint32 OID_FDDI_SMT_ECM_STATE = 50528789;
		public const uint32 OID_FDDI_SMT_CF_STATE = 50528790;
		public const uint32 OID_FDDI_SMT_HOLD_STATE = 50528791;
		public const uint32 OID_FDDI_SMT_REMOTE_DISCONNECT_FLAG = 50528792;
		public const uint32 OID_FDDI_SMT_STATION_STATUS = 50528793;
		public const uint32 OID_FDDI_SMT_PEER_WRAP_FLAG = 50528794;
		public const uint32 OID_FDDI_SMT_MSG_TIME_STAMP = 50528795;
		public const uint32 OID_FDDI_SMT_TRANSITION_TIME_STAMP = 50528796;
		public const uint32 OID_FDDI_SMT_SET_COUNT = 50528797;
		public const uint32 OID_FDDI_SMT_LAST_SET_STATION_ID = 50528798;
		public const uint32 OID_FDDI_MAC_FRAME_STATUS_FUNCTIONS = 50528799;
		public const uint32 OID_FDDI_MAC_BRIDGE_FUNCTIONS = 50528800;
		public const uint32 OID_FDDI_MAC_T_MAX_CAPABILITY = 50528801;
		public const uint32 OID_FDDI_MAC_TVX_CAPABILITY = 50528802;
		public const uint32 OID_FDDI_MAC_AVAILABLE_PATHS = 50528803;
		public const uint32 OID_FDDI_MAC_CURRENT_PATH = 50528804;
		public const uint32 OID_FDDI_MAC_UPSTREAM_NBR = 50528805;
		public const uint32 OID_FDDI_MAC_DOWNSTREAM_NBR = 50528806;
		public const uint32 OID_FDDI_MAC_OLD_UPSTREAM_NBR = 50528807;
		public const uint32 OID_FDDI_MAC_OLD_DOWNSTREAM_NBR = 50528808;
		public const uint32 OID_FDDI_MAC_DUP_ADDRESS_TEST = 50528809;
		public const uint32 OID_FDDI_MAC_REQUESTED_PATHS = 50528810;
		public const uint32 OID_FDDI_MAC_DOWNSTREAM_PORT_TYPE = 50528811;
		public const uint32 OID_FDDI_MAC_INDEX = 50528812;
		public const uint32 OID_FDDI_MAC_SMT_ADDRESS = 50528813;
		public const uint32 OID_FDDI_MAC_LONG_GRP_ADDRESS = 50528814;
		public const uint32 OID_FDDI_MAC_SHORT_GRP_ADDRESS = 50528815;
		public const uint32 OID_FDDI_MAC_T_REQ = 50528816;
		public const uint32 OID_FDDI_MAC_T_NEG = 50528817;
		public const uint32 OID_FDDI_MAC_T_MAX = 50528818;
		public const uint32 OID_FDDI_MAC_TVX_VALUE = 50528819;
		public const uint32 OID_FDDI_MAC_T_PRI0 = 50528820;
		public const uint32 OID_FDDI_MAC_T_PRI1 = 50528821;
		public const uint32 OID_FDDI_MAC_T_PRI2 = 50528822;
		public const uint32 OID_FDDI_MAC_T_PRI3 = 50528823;
		public const uint32 OID_FDDI_MAC_T_PRI4 = 50528824;
		public const uint32 OID_FDDI_MAC_T_PRI5 = 50528825;
		public const uint32 OID_FDDI_MAC_T_PRI6 = 50528826;
		public const uint32 OID_FDDI_MAC_FRAME_CT = 50528827;
		public const uint32 OID_FDDI_MAC_COPIED_CT = 50528828;
		public const uint32 OID_FDDI_MAC_TRANSMIT_CT = 50528829;
		public const uint32 OID_FDDI_MAC_TOKEN_CT = 50528830;
		public const uint32 OID_FDDI_MAC_ERROR_CT = 50528831;
		public const uint32 OID_FDDI_MAC_LOST_CT = 50528832;
		public const uint32 OID_FDDI_MAC_TVX_EXPIRED_CT = 50528833;
		public const uint32 OID_FDDI_MAC_NOT_COPIED_CT = 50528834;
		public const uint32 OID_FDDI_MAC_LATE_CT = 50528835;
		public const uint32 OID_FDDI_MAC_RING_OP_CT = 50528836;
		public const uint32 OID_FDDI_MAC_FRAME_ERROR_THRESHOLD = 50528837;
		public const uint32 OID_FDDI_MAC_FRAME_ERROR_RATIO = 50528838;
		public const uint32 OID_FDDI_MAC_NOT_COPIED_THRESHOLD = 50528839;
		public const uint32 OID_FDDI_MAC_NOT_COPIED_RATIO = 50528840;
		public const uint32 OID_FDDI_MAC_RMT_STATE = 50528841;
		public const uint32 OID_FDDI_MAC_DA_FLAG = 50528842;
		public const uint32 OID_FDDI_MAC_UNDA_FLAG = 50528843;
		public const uint32 OID_FDDI_MAC_FRAME_ERROR_FLAG = 50528844;
		public const uint32 OID_FDDI_MAC_NOT_COPIED_FLAG = 50528845;
		public const uint32 OID_FDDI_MAC_MA_UNITDATA_AVAILABLE = 50528846;
		public const uint32 OID_FDDI_MAC_HARDWARE_PRESENT = 50528847;
		public const uint32 OID_FDDI_MAC_MA_UNITDATA_ENABLE = 50528848;
		public const uint32 OID_FDDI_PATH_INDEX = 50528849;
		public const uint32 OID_FDDI_PATH_RING_LATENCY = 50528850;
		public const uint32 OID_FDDI_PATH_TRACE_STATUS = 50528851;
		public const uint32 OID_FDDI_PATH_SBA_PAYLOAD = 50528852;
		public const uint32 OID_FDDI_PATH_SBA_OVERHEAD = 50528853;
		public const uint32 OID_FDDI_PATH_CONFIGURATION = 50528854;
		public const uint32 OID_FDDI_PATH_T_R_MODE = 50528855;
		public const uint32 OID_FDDI_PATH_SBA_AVAILABLE = 50528856;
		public const uint32 OID_FDDI_PATH_TVX_LOWER_BOUND = 50528857;
		public const uint32 OID_FDDI_PATH_T_MAX_LOWER_BOUND = 50528858;
		public const uint32 OID_FDDI_PATH_MAX_T_REQ = 50528859;
		public const uint32 OID_FDDI_PORT_MY_TYPE = 50528860;
		public const uint32 OID_FDDI_PORT_NEIGHBOR_TYPE = 50528861;
		public const uint32 OID_FDDI_PORT_CONNECTION_POLICIES = 50528862;
		public const uint32 OID_FDDI_PORT_MAC_INDICATED = 50528863;
		public const uint32 OID_FDDI_PORT_CURRENT_PATH = 50528864;
		public const uint32 OID_FDDI_PORT_REQUESTED_PATHS = 50528865;
		public const uint32 OID_FDDI_PORT_MAC_PLACEMENT = 50528866;
		public const uint32 OID_FDDI_PORT_AVAILABLE_PATHS = 50528867;
		public const uint32 OID_FDDI_PORT_MAC_LOOP_TIME = 50528868;
		public const uint32 OID_FDDI_PORT_PMD_CLASS = 50528869;
		public const uint32 OID_FDDI_PORT_CONNECTION_CAPABILITIES = 50528870;
		public const uint32 OID_FDDI_PORT_INDEX = 50528871;
		public const uint32 OID_FDDI_PORT_MAINT_LS = 50528872;
		public const uint32 OID_FDDI_PORT_BS_FLAG = 50528873;
		public const uint32 OID_FDDI_PORT_PC_LS = 50528874;
		public const uint32 OID_FDDI_PORT_EB_ERROR_CT = 50528875;
		public const uint32 OID_FDDI_PORT_LCT_FAIL_CT = 50528876;
		public const uint32 OID_FDDI_PORT_LER_ESTIMATE = 50528877;
		public const uint32 OID_FDDI_PORT_LEM_REJECT_CT = 50528878;
		public const uint32 OID_FDDI_PORT_LEM_CT = 50528879;
		public const uint32 OID_FDDI_PORT_LER_CUTOFF = 50528880;
		public const uint32 OID_FDDI_PORT_LER_ALARM = 50528881;
		public const uint32 OID_FDDI_PORT_CONNNECT_STATE = 50528882;
		public const uint32 OID_FDDI_PORT_PCM_STATE = 50528883;
		public const uint32 OID_FDDI_PORT_PC_WITHHOLD = 50528884;
		public const uint32 OID_FDDI_PORT_LER_FLAG = 50528885;
		public const uint32 OID_FDDI_PORT_HARDWARE_PRESENT = 50528886;
		public const uint32 OID_FDDI_SMT_STATION_ACTION = 50528887;
		public const uint32 OID_FDDI_PORT_ACTION = 50528888;
		public const uint32 OID_FDDI_IF_DESCR = 50528889;
		public const uint32 OID_FDDI_IF_TYPE = 50528890;
		public const uint32 OID_FDDI_IF_MTU = 50528891;
		public const uint32 OID_FDDI_IF_SPEED = 50528892;
		public const uint32 OID_FDDI_IF_PHYS_ADDRESS = 50528893;
		public const uint32 OID_FDDI_IF_ADMIN_STATUS = 50528894;
		public const uint32 OID_FDDI_IF_OPER_STATUS = 50528895;
		public const uint32 OID_FDDI_IF_LAST_CHANGE = 50528896;
		public const uint32 OID_FDDI_IF_IN_OCTETS = 50528897;
		public const uint32 OID_FDDI_IF_IN_UCAST_PKTS = 50528898;
		public const uint32 OID_FDDI_IF_IN_NUCAST_PKTS = 50528899;
		public const uint32 OID_FDDI_IF_IN_DISCARDS = 50528900;
		public const uint32 OID_FDDI_IF_IN_ERRORS = 50528901;
		public const uint32 OID_FDDI_IF_IN_UNKNOWN_PROTOS = 50528902;
		public const uint32 OID_FDDI_IF_OUT_OCTETS = 50528903;
		public const uint32 OID_FDDI_IF_OUT_UCAST_PKTS = 50528904;
		public const uint32 OID_FDDI_IF_OUT_NUCAST_PKTS = 50528905;
		public const uint32 OID_FDDI_IF_OUT_DISCARDS = 50528906;
		public const uint32 OID_FDDI_IF_OUT_ERRORS = 50528907;
		public const uint32 OID_FDDI_IF_OUT_QLEN = 50528908;
		public const uint32 OID_FDDI_IF_SPECIFIC = 50528909;
		public const uint32 OID_WAN_PERMANENT_ADDRESS = 67174657;
		public const uint32 OID_WAN_CURRENT_ADDRESS = 67174658;
		public const uint32 OID_WAN_QUALITY_OF_SERVICE = 67174659;
		public const uint32 OID_WAN_PROTOCOL_TYPE = 67174660;
		public const uint32 OID_WAN_MEDIUM_SUBTYPE = 67174661;
		public const uint32 OID_WAN_HEADER_FORMAT = 67174662;
		public const uint32 OID_WAN_GET_INFO = 67174663;
		public const uint32 OID_WAN_SET_LINK_INFO = 67174664;
		public const uint32 OID_WAN_GET_LINK_INFO = 67174665;
		public const uint32 OID_WAN_LINE_COUNT = 67174666;
		public const uint32 OID_WAN_PROTOCOL_CAPS = 67174667;
		public const uint32 OID_WAN_GET_BRIDGE_INFO = 67174922;
		public const uint32 OID_WAN_SET_BRIDGE_INFO = 67174923;
		public const uint32 OID_WAN_GET_COMP_INFO = 67174924;
		public const uint32 OID_WAN_SET_COMP_INFO = 67174925;
		public const uint32 OID_WAN_GET_STATS_INFO = 67174926;
		public const uint32 OID_WAN_CO_GET_INFO = 67174784;
		public const uint32 OID_WAN_CO_SET_LINK_INFO = 67174785;
		public const uint32 OID_WAN_CO_GET_LINK_INFO = 67174786;
		public const uint32 OID_WAN_CO_GET_COMP_INFO = 67175040;
		public const uint32 OID_WAN_CO_SET_COMP_INFO = 67175041;
		public const uint32 OID_WAN_CO_GET_STATS_INFO = 67175042;
		public const uint32 OID_LTALK_CURRENT_NODE_ID = 83951874;
		public const uint32 OID_LTALK_IN_BROADCASTS = 84017409;
		public const uint32 OID_LTALK_IN_LENGTH_ERRORS = 84017410;
		public const uint32 OID_LTALK_OUT_NO_HANDLERS = 84017665;
		public const uint32 OID_LTALK_COLLISIONS = 84017666;
		public const uint32 OID_LTALK_DEFERS = 84017667;
		public const uint32 OID_LTALK_NO_DATA_ERRORS = 84017668;
		public const uint32 OID_LTALK_RANDOM_CTS_ERRORS = 84017669;
		public const uint32 OID_LTALK_FCS_ERRORS = 84017670;
		public const uint32 OID_ARCNET_PERMANENT_ADDRESS = 100729089;
		public const uint32 OID_ARCNET_CURRENT_ADDRESS = 100729090;
		public const uint32 OID_ARCNET_RECONFIGURATIONS = 100794881;
		public const uint32 OID_TAPI_ACCEPT = 117637377;
		public const uint32 OID_TAPI_ANSWER = 117637378;
		public const uint32 OID_TAPI_CLOSE = 117637379;
		public const uint32 OID_TAPI_CLOSE_CALL = 117637380;
		public const uint32 OID_TAPI_CONDITIONAL_MEDIA_DETECTION = 117637381;
		public const uint32 OID_TAPI_CONFIG_DIALOG = 117637382;
		public const uint32 OID_TAPI_DEV_SPECIFIC = 117637383;
		public const uint32 OID_TAPI_DIAL = 117637384;
		public const uint32 OID_TAPI_DROP = 117637385;
		public const uint32 OID_TAPI_GET_ADDRESS_CAPS = 117637386;
		public const uint32 OID_TAPI_GET_ADDRESS_ID = 117637387;
		public const uint32 OID_TAPI_GET_ADDRESS_STATUS = 117637388;
		public const uint32 OID_TAPI_GET_CALL_ADDRESS_ID = 117637389;
		public const uint32 OID_TAPI_GET_CALL_INFO = 117637390;
		public const uint32 OID_TAPI_GET_CALL_STATUS = 117637391;
		public const uint32 OID_TAPI_GET_DEV_CAPS = 117637392;
		public const uint32 OID_TAPI_GET_DEV_CONFIG = 117637393;
		public const uint32 OID_TAPI_GET_EXTENSION_ID = 117637394;
		public const uint32 OID_TAPI_GET_ID = 117637395;
		public const uint32 OID_TAPI_GET_LINE_DEV_STATUS = 117637396;
		public const uint32 OID_TAPI_MAKE_CALL = 117637397;
		public const uint32 OID_TAPI_NEGOTIATE_EXT_VERSION = 117637398;
		public const uint32 OID_TAPI_OPEN = 117637399;
		public const uint32 OID_TAPI_PROVIDER_INITIALIZE = 117637400;
		public const uint32 OID_TAPI_PROVIDER_SHUTDOWN = 117637401;
		public const uint32 OID_TAPI_SECURE_CALL = 117637402;
		public const uint32 OID_TAPI_SELECT_EXT_VERSION = 117637403;
		public const uint32 OID_TAPI_SEND_USER_USER_INFO = 117637404;
		public const uint32 OID_TAPI_SET_APP_SPECIFIC = 117637405;
		public const uint32 OID_TAPI_SET_CALL_PARAMS = 117637406;
		public const uint32 OID_TAPI_SET_DEFAULT_MEDIA_DETECTION = 117637407;
		public const uint32 OID_TAPI_SET_DEV_CONFIG = 117637408;
		public const uint32 OID_TAPI_SET_MEDIA_MODE = 117637409;
		public const uint32 OID_TAPI_SET_STATUS_MESSAGES = 117637410;
		public const uint32 OID_TAPI_GATHER_DIGITS = 117637411;
		public const uint32 OID_TAPI_MONITOR_DIGITS = 117637412;
		public const uint32 OID_ATM_SUPPORTED_VC_RATES = 134283521;
		public const uint32 OID_ATM_SUPPORTED_SERVICE_CATEGORY = 134283522;
		public const uint32 OID_ATM_SUPPORTED_AAL_TYPES = 134283523;
		public const uint32 OID_ATM_HW_CURRENT_ADDRESS = 134283524;
		public const uint32 OID_ATM_MAX_ACTIVE_VCS = 134283525;
		public const uint32 OID_ATM_MAX_ACTIVE_VCI_BITS = 134283526;
		public const uint32 OID_ATM_MAX_ACTIVE_VPI_BITS = 134283527;
		public const uint32 OID_ATM_MAX_AAL0_PACKET_SIZE = 134283528;
		public const uint32 OID_ATM_MAX_AAL1_PACKET_SIZE = 134283529;
		public const uint32 OID_ATM_MAX_AAL34_PACKET_SIZE = 134283530;
		public const uint32 OID_ATM_MAX_AAL5_PACKET_SIZE = 134283531;
		public const uint32 OID_ATM_SIGNALING_VPIVCI = 134283777;
		public const uint32 OID_ATM_ASSIGNED_VPI = 134283778;
		public const uint32 OID_ATM_ACQUIRE_ACCESS_NET_RESOURCES = 134283779;
		public const uint32 OID_ATM_RELEASE_ACCESS_NET_RESOURCES = 134283780;
		public const uint32 OID_ATM_ILMI_VPIVCI = 134283781;
		public const uint32 OID_ATM_DIGITAL_BROADCAST_VPIVCI = 134283782;
		public const uint32 OID_ATM_GET_NEAREST_FLOW = 134283783;
		public const uint32 OID_ATM_ALIGNMENT_REQUIRED = 134283784;
		public const uint32 OID_ATM_LECS_ADDRESS = 134283785;
		public const uint32 OID_ATM_SERVICE_ADDRESS = 134283786;
		public const uint32 OID_ATM_CALL_PROCEEDING = 134283787;
		public const uint32 OID_ATM_CALL_ALERTING = 134283788;
		public const uint32 OID_ATM_PARTY_ALERTING = 134283789;
		public const uint32 OID_ATM_CALL_NOTIFY = 134283790;
		public const uint32 OID_ATM_MY_IP_NM_ADDRESS = 134283791;
		public const uint32 OID_ATM_RCV_CELLS_OK = 134349057;
		public const uint32 OID_ATM_XMIT_CELLS_OK = 134349058;
		public const uint32 OID_ATM_RCV_CELLS_DROPPED = 134349059;
		public const uint32 OID_ATM_RCV_INVALID_VPI_VCI = 134349313;
		public const uint32 OID_ATM_CELLS_HEC_ERROR = 134349314;
		public const uint32 OID_ATM_RCV_REASSEMBLY_ERROR = 134349315;
		public const uint32 OID_802_11_BSSID = 218169601;
		public const uint32 OID_802_11_SSID = 218169602;
		public const uint32 OID_802_11_NETWORK_TYPES_SUPPORTED = 218169859;
		public const uint32 OID_802_11_NETWORK_TYPE_IN_USE = 218169860;
		public const uint32 OID_802_11_TX_POWER_LEVEL = 218169861;
		public const uint32 OID_802_11_RSSI = 218169862;
		public const uint32 OID_802_11_RSSI_TRIGGER = 218169863;
		public const uint32 OID_802_11_INFRASTRUCTURE_MODE = 218169608;
		public const uint32 OID_802_11_FRAGMENTATION_THRESHOLD = 218169865;
		public const uint32 OID_802_11_RTS_THRESHOLD = 218169866;
		public const uint32 OID_802_11_NUMBER_OF_ANTENNAS = 218169867;
		public const uint32 OID_802_11_RX_ANTENNA_SELECTED = 218169868;
		public const uint32 OID_802_11_TX_ANTENNA_SELECTED = 218169869;
		public const uint32 OID_802_11_SUPPORTED_RATES = 218169870;
		public const uint32 OID_802_11_DESIRED_RATES = 218169872;
		public const uint32 OID_802_11_CONFIGURATION = 218169873;
		public const uint32 OID_802_11_STATISTICS = 218235410;
		public const uint32 OID_802_11_ADD_WEP = 218169619;
		public const uint32 OID_802_11_REMOVE_WEP = 218169620;
		public const uint32 OID_802_11_DISASSOCIATE = 218169621;
		public const uint32 OID_802_11_POWER_MODE = 218169878;
		public const uint32 OID_802_11_BSSID_LIST = 218169879;
		public const uint32 OID_802_11_AUTHENTICATION_MODE = 218169624;
		public const uint32 OID_802_11_PRIVACY_FILTER = 218169625;
		public const uint32 OID_802_11_BSSID_LIST_SCAN = 218169626;
		public const uint32 OID_802_11_WEP_STATUS = 218169627;
		public const uint32 OID_802_11_ENCRYPTION_STATUS = 218169627;
		public const uint32 OID_802_11_RELOAD_DEFAULTS = 218169628;
		public const uint32 OID_802_11_ADD_KEY = 218169629;
		public const uint32 OID_802_11_REMOVE_KEY = 218169630;
		public const uint32 OID_802_11_ASSOCIATION_INFORMATION = 218169631;
		public const uint32 OID_802_11_TEST = 218169632;
		public const uint32 OID_802_11_MEDIA_STREAM_MODE = 218169633;
		public const uint32 OID_802_11_CAPABILITY = 218169634;
		public const uint32 OID_802_11_PMKID = 218169635;
		public const uint32 OID_802_11_NON_BCAST_SSID_LIST = 218169636;
		public const uint32 OID_802_11_RADIO_STATUS = 218169637;
		public const uint32 NDIS_ETH_TYPE_IPV4 = 2048;
		public const uint32 NDIS_ETH_TYPE_ARP = 2054;
		public const uint32 NDIS_ETH_TYPE_IPV6 = 34525;
		public const uint32 NDIS_ETH_TYPE_802_1X = 34958;
		public const uint32 NDIS_ETH_TYPE_802_1Q = 33024;
		public const uint32 NDIS_ETH_TYPE_SLOW_PROTOCOL = 34825;
		public const uint32 NDIS_802_11_LENGTH_SSID = 32;
		public const uint32 NDIS_802_11_LENGTH_RATES = 8;
		public const uint32 NDIS_802_11_LENGTH_RATES_EX = 16;
		public const uint32 NDIS_802_11_AUTH_REQUEST_AUTH_FIELDS = 15;
		public const uint32 NDIS_802_11_AUTH_REQUEST_REAUTH = 1;
		public const uint32 NDIS_802_11_AUTH_REQUEST_KEYUPDATE = 2;
		public const uint32 NDIS_802_11_AUTH_REQUEST_PAIRWISE_ERROR = 6;
		public const uint32 NDIS_802_11_AUTH_REQUEST_GROUP_ERROR = 14;
		public const uint32 NDIS_802_11_PMKID_CANDIDATE_PREAUTH_ENABLED = 1;
		public const uint32 NDIS_802_11_AI_REQFI_CAPABILITIES = 1;
		public const uint32 NDIS_802_11_AI_REQFI_LISTENINTERVAL = 2;
		public const uint32 NDIS_802_11_AI_REQFI_CURRENTAPADDRESS = 4;
		public const uint32 NDIS_802_11_AI_RESFI_CAPABILITIES = 1;
		public const uint32 NDIS_802_11_AI_RESFI_STATUSCODE = 2;
		public const uint32 NDIS_802_11_AI_RESFI_ASSOCIATIONID = 4;
		public const uint32 OID_IRDA_RECEIVING = 167837952;
		public const uint32 OID_IRDA_TURNAROUND_TIME = 167837953;
		public const uint32 OID_IRDA_SUPPORTED_SPEEDS = 167837954;
		public const uint32 OID_IRDA_LINK_SPEED = 167837955;
		public const uint32 OID_IRDA_MEDIA_BUSY = 167837956;
		public const uint32 OID_IRDA_EXTRA_RCV_BOFS = 167838208;
		public const uint32 OID_IRDA_RATE_SNIFF = 167838209;
		public const uint32 OID_IRDA_UNICAST_LIST = 167838210;
		public const uint32 OID_IRDA_MAX_UNICAST_LIST_SIZE = 167838211;
		public const uint32 OID_IRDA_MAX_RECEIVE_WINDOW_SIZE = 167838212;
		public const uint32 OID_IRDA_MAX_SEND_WINDOW_SIZE = 167838213;
		public const uint32 OID_IRDA_RESERVED1 = 167838218;
		public const uint32 OID_IRDA_RESERVED2 = 167838223;
		public const uint32 OID_1394_LOCAL_NODE_INFO = 201392385;
		public const uint32 OID_1394_VC_INFO = 201392386;
		public const uint32 OID_CO_ADD_PVC = 4261412865;
		public const uint32 OID_CO_DELETE_PVC = 4261412866;
		public const uint32 OID_CO_GET_CALL_INFORMATION = 4261412867;
		public const uint32 OID_CO_ADD_ADDRESS = 4261412868;
		public const uint32 OID_CO_DELETE_ADDRESS = 4261412869;
		public const uint32 OID_CO_GET_ADDRESSES = 4261412870;
		public const uint32 OID_CO_ADDRESS_CHANGE = 4261412871;
		public const uint32 OID_CO_SIGNALING_ENABLED = 4261412872;
		public const uint32 OID_CO_SIGNALING_DISABLED = 4261412873;
		public const uint32 OID_CO_AF_CLOSE = 4261412874;
		public const uint32 OID_CO_TAPI_CM_CAPS = 4261416961;
		public const uint32 OID_CO_TAPI_LINE_CAPS = 4261416962;
		public const uint32 OID_CO_TAPI_ADDRESS_CAPS = 4261416963;
		public const uint32 OID_CO_TAPI_TRANSLATE_TAPI_CALLPARAMS = 4261416964;
		public const uint32 OID_CO_TAPI_TRANSLATE_NDIS_CALLPARAMS = 4261416965;
		public const uint32 OID_CO_TAPI_TRANSLATE_TAPI_SAP = 4261416966;
		public const uint32 OID_CO_TAPI_GET_CALL_DIAGNOSTICS = 4261416967;
		public const uint32 OID_CO_TAPI_REPORT_DIGITS = 4261416968;
		public const uint32 OID_CO_TAPI_DONT_REPORT_DIGITS = 4261416969;
		public const uint32 OID_PNP_CAPABILITIES = 4244701440;
		public const uint32 OID_PNP_SET_POWER = 4244701441;
		public const uint32 OID_PNP_QUERY_POWER = 4244701442;
		public const uint32 OID_PNP_ADD_WAKE_UP_PATTERN = 4244701443;
		public const uint32 OID_PNP_REMOVE_WAKE_UP_PATTERN = 4244701444;
		public const uint32 OID_PNP_WAKE_UP_PATTERN_LIST = 4244701445;
		public const uint32 OID_PNP_ENABLE_WAKE_UP = 4244701446;
		public const uint32 OID_PNP_WAKE_UP_OK = 4244767232;
		public const uint32 OID_PNP_WAKE_UP_ERROR = 4244767233;
		public const uint32 OID_PM_CURRENT_CAPABILITIES = 4244701447;
		public const uint32 OID_PM_HARDWARE_CAPABILITIES = 4244701448;
		public const uint32 OID_PM_PARAMETERS = 4244701449;
		public const uint32 OID_PM_ADD_WOL_PATTERN = 4244701450;
		public const uint32 OID_PM_REMOVE_WOL_PATTERN = 4244701451;
		public const uint32 OID_PM_WOL_PATTERN_LIST = 4244701452;
		public const uint32 OID_PM_ADD_PROTOCOL_OFFLOAD = 4244701453;
		public const uint32 OID_PM_GET_PROTOCOL_OFFLOAD = 4244701454;
		public const uint32 OID_PM_REMOVE_PROTOCOL_OFFLOAD = 4244701455;
		public const uint32 OID_PM_PROTOCOL_OFFLOAD_LIST = 4244701456;
		public const uint32 OID_PM_RESERVED_1 = 4244701457;
		public const uint32 OID_RECEIVE_FILTER_HARDWARE_CAPABILITIES = 66081;
		public const uint32 OID_RECEIVE_FILTER_GLOBAL_PARAMETERS = 66082;
		public const uint32 OID_RECEIVE_FILTER_ALLOCATE_QUEUE = 66083;
		public const uint32 OID_RECEIVE_FILTER_FREE_QUEUE = 66084;
		public const uint32 OID_RECEIVE_FILTER_ENUM_QUEUES = 66085;
		public const uint32 OID_RECEIVE_FILTER_QUEUE_PARAMETERS = 66086;
		public const uint32 OID_RECEIVE_FILTER_SET_FILTER = 66087;
		public const uint32 OID_RECEIVE_FILTER_CLEAR_FILTER = 66088;
		public const uint32 OID_RECEIVE_FILTER_ENUM_FILTERS = 66089;
		public const uint32 OID_RECEIVE_FILTER_PARAMETERS = 66090;
		public const uint32 OID_RECEIVE_FILTER_QUEUE_ALLOCATION_COMPLETE = 66091;
		public const uint32 OID_RECEIVE_FILTER_CURRENT_CAPABILITIES = 66093;
		public const uint32 OID_NIC_SWITCH_HARDWARE_CAPABILITIES = 66094;
		public const uint32 OID_NIC_SWITCH_CURRENT_CAPABILITIES = 66095;
		public const uint32 OID_RECEIVE_FILTER_MOVE_FILTER = 66096;
		public const uint32 OID_VLAN_RESERVED1 = 66097;
		public const uint32 OID_VLAN_RESERVED2 = 66098;
		public const uint32 OID_VLAN_RESERVED3 = 66099;
		public const uint32 OID_VLAN_RESERVED4 = 66100;
		public const uint32 OID_PACKET_COALESCING_FILTER_MATCH_COUNT = 66101;
		public const uint32 OID_NIC_SWITCH_CREATE_SWITCH = 66103;
		public const uint32 OID_NIC_SWITCH_PARAMETERS = 66104;
		public const uint32 OID_NIC_SWITCH_DELETE_SWITCH = 66105;
		public const uint32 OID_NIC_SWITCH_ENUM_SWITCHES = 66112;
		public const uint32 OID_NIC_SWITCH_CREATE_VPORT = 66113;
		public const uint32 OID_NIC_SWITCH_VPORT_PARAMETERS = 66114;
		public const uint32 OID_NIC_SWITCH_ENUM_VPORTS = 66115;
		public const uint32 OID_NIC_SWITCH_DELETE_VPORT = 66116;
		public const uint32 OID_NIC_SWITCH_ALLOCATE_VF = 66117;
		public const uint32 OID_NIC_SWITCH_FREE_VF = 66118;
		public const uint32 OID_NIC_SWITCH_VF_PARAMETERS = 66119;
		public const uint32 OID_NIC_SWITCH_ENUM_VFS = 66120;
		public const uint32 OID_SRIOV_HARDWARE_CAPABILITIES = 66121;
		public const uint32 OID_SRIOV_CURRENT_CAPABILITIES = 66128;
		public const uint32 OID_SRIOV_READ_VF_CONFIG_SPACE = 66129;
		public const uint32 OID_SRIOV_WRITE_VF_CONFIG_SPACE = 66130;
		public const uint32 OID_SRIOV_READ_VF_CONFIG_BLOCK = 66131;
		public const uint32 OID_SRIOV_WRITE_VF_CONFIG_BLOCK = 66132;
		public const uint32 OID_SRIOV_RESET_VF = 66133;
		public const uint32 OID_SRIOV_SET_VF_POWER_STATE = 66134;
		public const uint32 OID_SRIOV_VF_VENDOR_DEVICE_ID = 66135;
		public const uint32 OID_SRIOV_PROBED_BARS = 66136;
		public const uint32 OID_SRIOV_BAR_RESOURCES = 66137;
		public const uint32 OID_SRIOV_PF_LUID = 66144;
		public const uint32 OID_SRIOV_CONFIG_STATE = 66145;
		public const uint32 OID_SRIOV_VF_SERIAL_NUMBER = 66146;
		public const uint32 OID_SRIOV_OVERLYING_ADAPTER_INFO = 66152;
		public const uint32 OID_SRIOV_VF_INVALIDATE_CONFIG_BLOCK = 66153;
		public const uint32 OID_SWITCH_PROPERTY_ADD = 66147;
		public const uint32 OID_SWITCH_PROPERTY_UPDATE = 66148;
		public const uint32 OID_SWITCH_PROPERTY_DELETE = 66149;
		public const uint32 OID_SWITCH_PROPERTY_ENUM = 66150;
		public const uint32 OID_SWITCH_FEATURE_STATUS_QUERY = 66151;
		public const uint32 OID_SWITCH_NIC_REQUEST = 66160;
		public const uint32 OID_SWITCH_PORT_PROPERTY_ADD = 66161;
		public const uint32 OID_SWITCH_PORT_PROPERTY_UPDATE = 66162;
		public const uint32 OID_SWITCH_PORT_PROPERTY_DELETE = 66163;
		public const uint32 OID_SWITCH_PORT_PROPERTY_ENUM = 66164;
		public const uint32 OID_SWITCH_PARAMETERS = 66165;
		public const uint32 OID_SWITCH_PORT_ARRAY = 66166;
		public const uint32 OID_SWITCH_NIC_ARRAY = 66167;
		public const uint32 OID_SWITCH_PORT_CREATE = 66168;
		public const uint32 OID_SWITCH_PORT_DELETE = 66169;
		public const uint32 OID_SWITCH_NIC_CREATE = 66170;
		public const uint32 OID_SWITCH_NIC_CONNECT = 66171;
		public const uint32 OID_SWITCH_NIC_DISCONNECT = 66172;
		public const uint32 OID_SWITCH_NIC_DELETE = 66173;
		public const uint32 OID_SWITCH_PORT_FEATURE_STATUS_QUERY = 66174;
		public const uint32 OID_SWITCH_PORT_TEARDOWN = 66175;
		public const uint32 OID_SWITCH_NIC_SAVE = 66192;
		public const uint32 OID_SWITCH_NIC_SAVE_COMPLETE = 66193;
		public const uint32 OID_SWITCH_NIC_RESTORE = 66194;
		public const uint32 OID_SWITCH_NIC_RESTORE_COMPLETE = 66195;
		public const uint32 OID_SWITCH_NIC_UPDATED = 66196;
		public const uint32 OID_SWITCH_PORT_UPDATED = 66197;
		public const uint32 OID_SWITCH_NIC_DIRECT_REQUEST = 66198;
		public const uint32 OID_SWITCH_NIC_SUSPEND = 66199;
		public const uint32 OID_SWITCH_NIC_RESUME = 66200;
		public const uint32 OID_SWITCH_NIC_SUSPENDED_LM_SOURCE_STARTED = 66201;
		public const uint32 OID_SWITCH_NIC_SUSPENDED_LM_SOURCE_FINISHED = 66202;
		public const uint32 OID_GEN_RSS_SET_INDIRECTION_TABLE_ENTRIES = 66240;
		public const uint32 OID_GEN_ISOLATION_PARAMETERS = 66304;
		public const uint32 OID_GFT_HARDWARE_CAPABILITIES = 66561;
		public const uint32 OID_GFT_CURRENT_CAPABILITIES = 66562;
		public const uint32 OID_GFT_GLOBAL_PARAMETERS = 66563;
		public const uint32 OID_GFT_CREATE_TABLE = 66564;
		public const uint32 OID_GFT_DELETE_TABLE = 66565;
		public const uint32 OID_GFT_ENUM_TABLES = 66566;
		public const uint32 OID_GFT_ALLOCATE_COUNTERS = 66567;
		public const uint32 OID_GFT_FREE_COUNTERS = 66568;
		public const uint32 OID_GFT_ENUM_COUNTERS = 66569;
		public const uint32 OID_GFT_COUNTER_VALUES = 66570;
		public const uint32 OID_GFT_STATISTICS = 66571;
		public const uint32 OID_GFT_ADD_FLOW_ENTRIES = 66572;
		public const uint32 OID_GFT_DELETE_FLOW_ENTRIES = 66573;
		public const uint32 OID_GFT_ENUM_FLOW_ENTRIES = 66574;
		public const uint32 OID_GFT_ACTIVATE_FLOW_ENTRIES = 66575;
		public const uint32 OID_GFT_DEACTIVATE_FLOW_ENTRIES = 66576;
		public const uint32 OID_GFT_FLOW_ENTRY_PARAMETERS = 66577;
		public const uint32 OID_GFT_EXACT_MATCH_PROFILE = 66578;
		public const uint32 OID_GFT_HEADER_TRANSPOSITION_PROFILE = 66579;
		public const uint32 OID_GFT_WILDCARD_MATCH_PROFILE = 66580;
		public const uint32 OID_GFT_ENUM_PROFILES = 66581;
		public const uint32 OID_GFT_DELETE_PROFILE = 66582;
		public const uint32 OID_GFT_VPORT_PARAMETERS = 66583;
		public const uint32 OID_GFT_CREATE_LOGICAL_VPORT = 66584;
		public const uint32 OID_GFT_DELETE_LOGICAL_VPORT = 66585;
		public const uint32 OID_GFT_ENUM_LOGICAL_VPORTS = 66586;
		public const uint32 OID_QOS_OFFLOAD_HARDWARE_CAPABILITIES = 67073;
		public const uint32 OID_QOS_OFFLOAD_CURRENT_CAPABILITIES = 67074;
		public const uint32 OID_QOS_OFFLOAD_CREATE_SQ = 67075;
		public const uint32 OID_QOS_OFFLOAD_DELETE_SQ = 67076;
		public const uint32 OID_QOS_OFFLOAD_UPDATE_SQ = 67077;
		public const uint32 OID_QOS_OFFLOAD_ENUM_SQS = 67078;
		public const uint32 OID_QOS_OFFLOAD_SQ_STATS = 67079;
		public const uint32 OID_PD_OPEN_PROVIDER = 66817;
		public const uint32 OID_PD_CLOSE_PROVIDER = 66818;
		public const uint32 OID_PD_QUERY_CURRENT_CONFIG = 66819;
		public const uint32 NDIS_PNP_WAKE_UP_MAGIC_PACKET = 1;
		public const uint32 NDIS_PNP_WAKE_UP_PATTERN_MATCH = 2;
		public const uint32 NDIS_PNP_WAKE_UP_LINK_CHANGE = 4;
		public const uint32 OID_TCP_TASK_OFFLOAD = 4227924481;
		public const uint32 OID_TCP_TASK_IPSEC_ADD_SA = 4227924482;
		public const uint32 OID_TCP_TASK_IPSEC_DELETE_SA = 4227924483;
		public const uint32 OID_TCP_SAN_SUPPORT = 4227924484;
		public const uint32 OID_TCP_TASK_IPSEC_ADD_UDPESP_SA = 4227924485;
		public const uint32 OID_TCP_TASK_IPSEC_DELETE_UDPESP_SA = 4227924486;
		public const uint32 OID_TCP4_OFFLOAD_STATS = 4227924487;
		public const uint32 OID_TCP6_OFFLOAD_STATS = 4227924488;
		public const uint32 OID_IP4_OFFLOAD_STATS = 4227924489;
		public const uint32 OID_IP6_OFFLOAD_STATS = 4227924490;
		public const uint32 OID_TCP_OFFLOAD_CURRENT_CONFIG = 4227924491;
		public const uint32 OID_TCP_OFFLOAD_PARAMETERS = 4227924492;
		public const uint32 OID_TCP_OFFLOAD_HARDWARE_CAPABILITIES = 4227924493;
		public const uint32 OID_TCP_CONNECTION_OFFLOAD_CURRENT_CONFIG = 4227924494;
		public const uint32 OID_TCP_CONNECTION_OFFLOAD_HARDWARE_CAPABILITIES = 4227924495;
		public const uint32 OID_OFFLOAD_ENCAPSULATION = 16843018;
		public const uint32 OID_TCP_TASK_IPSEC_OFFLOAD_V2_ADD_SA = 4228055554;
		public const uint32 OID_TCP_TASK_IPSEC_OFFLOAD_V2_DELETE_SA = 4228055555;
		public const uint32 OID_TCP_TASK_IPSEC_OFFLOAD_V2_UPDATE_SA = 4228055556;
		public const uint32 OID_TCP_TASK_IPSEC_OFFLOAD_V2_ADD_SA_EX = 4228055557;
		public const uint32 OID_FFP_SUPPORT = 4227924496;
		public const uint32 OID_FFP_FLUSH = 4227924497;
		public const uint32 OID_FFP_CONTROL = 4227924498;
		public const uint32 OID_FFP_PARAMS = 4227924499;
		public const uint32 OID_FFP_DATA = 4227924500;
		public const uint32 OID_FFP_DRIVER_STATS = 4227990032;
		public const uint32 OID_FFP_ADAPTER_STATS = 4227990033;
		public const uint32 OID_TCP_CONNECTION_OFFLOAD_PARAMETERS = 4228055553;
		public const uint32 OID_TUNNEL_INTERFACE_SET_OID = 251724038;
		public const uint32 OID_TUNNEL_INTERFACE_RELEASE_OID = 251724039;
		public const uint32 OID_QOS_RESERVED1 = 4211147008;
		public const uint32 OID_QOS_RESERVED2 = 4211147009;
		public const uint32 OID_QOS_RESERVED3 = 4211147010;
		public const uint32 OID_QOS_RESERVED4 = 4211147011;
		public const uint32 OID_QOS_RESERVED5 = 4211147012;
		public const uint32 OID_QOS_RESERVED6 = 4211147013;
		public const uint32 OID_QOS_RESERVED7 = 4211147014;
		public const uint32 OID_QOS_RESERVED8 = 4211147015;
		public const uint32 OID_QOS_RESERVED9 = 4211147016;
		public const uint32 OID_QOS_RESERVED10 = 4211147017;
		public const uint32 OID_QOS_RESERVED11 = 4211147018;
		public const uint32 OID_QOS_RESERVED12 = 4211147019;
		public const uint32 OID_QOS_RESERVED13 = 4211147020;
		public const uint32 OID_QOS_RESERVED14 = 4211147021;
		public const uint32 OID_QOS_RESERVED15 = 4211147022;
		public const uint32 OID_QOS_RESERVED16 = 4211147023;
		public const uint32 OID_QOS_RESERVED17 = 4211147024;
		public const uint32 OID_QOS_RESERVED18 = 4211147025;
		public const uint32 OID_QOS_RESERVED19 = 4211147026;
		public const uint32 OID_QOS_RESERVED20 = 4211147027;
		public const uint32 OID_XBOX_ACC_RESERVED0 = 4194304000;
		public const uint32 OFFLOAD_MAX_SAS = 3;
		public const uint32 OFFLOAD_INBOUND_SA = 1;
		public const uint32 OFFLOAD_OUTBOUND_SA = 2;
		public const uint32 NDIS_PROTOCOL_ID_DEFAULT = 0;
		public const uint32 NDIS_PROTOCOL_ID_TCP_IP = 2;
		public const uint32 NDIS_PROTOCOL_ID_IP6 = 3;
		public const uint32 NDIS_PROTOCOL_ID_IPX = 6;
		public const uint32 NDIS_PROTOCOL_ID_NBF = 7;
		public const uint32 NDIS_PROTOCOL_ID_MAX = 15;
		public const uint32 NDIS_PROTOCOL_ID_MASK = 15;
		public const uint32 READABLE_LOCAL_CLOCK = 1;
		public const uint32 CLOCK_NETWORK_DERIVED = 2;
		public const uint32 CLOCK_PRECISION = 4;
		public const uint32 RECEIVE_TIME_INDICATION_CAPABLE = 8;
		public const uint32 TIMED_SEND_CAPABLE = 16;
		public const uint32 TIME_STAMP_CAPABLE = 32;
		public const uint32 NDIS_DEVICE_WAKE_UP_ENABLE = 1;
		public const uint32 NDIS_DEVICE_WAKE_ON_PATTERN_MATCH_ENABLE = 2;
		public const uint32 NDIS_DEVICE_WAKE_ON_MAGIC_PACKET_ENABLE = 4;
		public const uint32 WAN_PROTOCOL_KEEPS_STATS = 1;
		public const uint32 NDIS_PACKET_TYPE_DIRECTED = 1;
		public const uint32 NDIS_PACKET_TYPE_MULTICAST = 2;
		public const uint32 NDIS_PACKET_TYPE_ALL_MULTICAST = 4;
		public const uint32 NDIS_PACKET_TYPE_BROADCAST = 8;
		public const uint32 NDIS_PACKET_TYPE_SOURCE_ROUTING = 16;
		public const uint32 NDIS_PACKET_TYPE_PROMISCUOUS = 32;
		public const uint32 NDIS_PACKET_TYPE_SMT = 64;
		public const uint32 NDIS_PACKET_TYPE_ALL_LOCAL = 128;
		public const uint32 NDIS_PACKET_TYPE_GROUP = 4096;
		public const uint32 NDIS_PACKET_TYPE_ALL_FUNCTIONAL = 8192;
		public const uint32 NDIS_PACKET_TYPE_FUNCTIONAL = 16384;
		public const uint32 NDIS_PACKET_TYPE_MAC_FRAME = 32768;
		public const uint32 NDIS_PACKET_TYPE_NO_LOCAL = 65536;
		public const uint32 NDIS_RING_SIGNAL_LOSS = 32768;
		public const uint32 NDIS_RING_HARD_ERROR = 16384;
		public const uint32 NDIS_RING_SOFT_ERROR = 8192;
		public const uint32 NDIS_RING_TRANSMIT_BEACON = 4096;
		public const uint32 NDIS_RING_LOBE_WIRE_FAULT = 2048;
		public const uint32 NDIS_RING_AUTO_REMOVAL_ERROR = 1024;
		public const uint32 NDIS_RING_REMOVE_RECEIVED = 512;
		public const uint32 NDIS_RING_COUNTER_OVERFLOW = 256;
		public const uint32 NDIS_RING_SINGLE_STATION = 128;
		public const uint32 NDIS_RING_RING_RECOVERY = 64;
		public const uint32 NDIS_PROT_OPTION_ESTIMATED_LENGTH = 1;
		public const uint32 NDIS_PROT_OPTION_NO_LOOPBACK = 2;
		public const uint32 NDIS_PROT_OPTION_NO_RSVD_ON_RCVPKT = 4;
		public const uint32 NDIS_PROT_OPTION_SEND_RESTRICTED = 8;
		public const uint32 NDIS_MAC_OPTION_COPY_LOOKAHEAD_DATA = 1;
		public const uint32 NDIS_MAC_OPTION_RECEIVE_SERIALIZED = 2;
		public const uint32 NDIS_MAC_OPTION_TRANSFERS_NOT_PEND = 4;
		public const uint32 NDIS_MAC_OPTION_NO_LOOPBACK = 8;
		public const uint32 NDIS_MAC_OPTION_FULL_DUPLEX = 16;
		public const uint32 NDIS_MAC_OPTION_EOTX_INDICATION = 32;
		public const uint32 NDIS_MAC_OPTION_8021P_PRIORITY = 64;
		public const uint32 NDIS_MAC_OPTION_SUPPORTS_MAC_ADDRESS_OVERWRITE = 128;
		public const uint32 NDIS_MAC_OPTION_RECEIVE_AT_DPC = 256;
		public const uint32 NDIS_MAC_OPTION_8021Q_VLAN = 512;
		public const uint32 NDIS_MAC_OPTION_RESERVED = 2147483648;
		public const uint32 NDIS_MEDIA_CAP_TRANSMIT = 1;
		public const uint32 NDIS_MEDIA_CAP_RECEIVE = 2;
		public const uint32 NDIS_CO_MAC_OPTION_DYNAMIC_LINK_SPEED = 1;
		public const uint32 NDIS_IF_MAX_STRING_SIZE = 256;
		public const uint32 NDIS_MAX_PHYS_ADDRESS_LENGTH = 32;
		public const uint32 NDIS_LINK_STATE_XMIT_LINK_SPEED_AUTO_NEGOTIATED = 1;
		public const uint32 NDIS_LINK_STATE_RCV_LINK_SPEED_AUTO_NEGOTIATED = 2;
		public const uint32 NDIS_LINK_STATE_DUPLEX_AUTO_NEGOTIATED = 4;
		public const uint32 NDIS_LINK_STATE_PAUSE_FUNCTIONS_AUTO_NEGOTIATED = 8;
		public const uint32 NDIS_LINK_STATE_REVISION_1 = 1;
		public const uint32 NDIS_LINK_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_OPER_STATE_REVISION_1 = 1;
		public const uint32 MAXIMUM_IP_OPER_STATUS_ADDRESS_FAMILIES_SUPPORTED = 32;
		public const uint32 NDIS_IP_OPER_STATUS_INFO_REVISION_1 = 1;
		public const uint32 NDIS_IP_OPER_STATE_REVISION_1 = 1;
		public const uint32 NDIS_OFFLOAD_PARAMETERS_NO_CHANGE = 0;
		public const uint32 NDIS_OFFLOAD_PARAMETERS_TX_RX_DISABLED = 1;
		public const uint32 NDIS_OFFLOAD_PARAMETERS_TX_ENABLED_RX_DISABLED = 2;
		public const uint32 NDIS_OFFLOAD_PARAMETERS_RX_ENABLED_TX_DISABLED = 3;
		public const uint32 NDIS_OFFLOAD_PARAMETERS_TX_RX_ENABLED = 4;
		public const uint32 NDIS_OFFLOAD_PARAMETERS_LSOV1_DISABLED = 1;
		public const uint32 NDIS_OFFLOAD_PARAMETERS_LSOV1_ENABLED = 2;
		public const uint32 NDIS_OFFLOAD_PARAMETERS_IPSECV1_DISABLED = 1;
		public const uint32 NDIS_OFFLOAD_PARAMETERS_IPSECV1_AH_ENABLED = 2;
		public const uint32 NDIS_OFFLOAD_PARAMETERS_IPSECV1_ESP_ENABLED = 3;
		public const uint32 NDIS_OFFLOAD_PARAMETERS_IPSECV1_AH_AND_ESP_ENABLED = 4;
		public const uint32 NDIS_OFFLOAD_PARAMETERS_LSOV2_DISABLED = 1;
		public const uint32 NDIS_OFFLOAD_PARAMETERS_LSOV2_ENABLED = 2;
		public const uint32 NDIS_OFFLOAD_PARAMETERS_IPSECV2_DISABLED = 1;
		public const uint32 NDIS_OFFLOAD_PARAMETERS_IPSECV2_AH_ENABLED = 2;
		public const uint32 NDIS_OFFLOAD_PARAMETERS_IPSECV2_ESP_ENABLED = 3;
		public const uint32 NDIS_OFFLOAD_PARAMETERS_IPSECV2_AH_AND_ESP_ENABLED = 4;
		public const uint32 NDIS_OFFLOAD_PARAMETERS_RSC_DISABLED = 1;
		public const uint32 NDIS_OFFLOAD_PARAMETERS_RSC_ENABLED = 2;
		public const uint32 NDIS_ENCAPSULATION_TYPE_GRE_MAC = 1;
		public const uint32 NDIS_ENCAPSULATION_TYPE_VXLAN = 2;
		public const uint32 NDIS_OFFLOAD_PARAMETERS_CONNECTION_OFFLOAD_DISABLED = 1;
		public const uint32 NDIS_OFFLOAD_PARAMETERS_CONNECTION_OFFLOAD_ENABLED = 2;
		public const uint32 NDIS_OFFLOAD_PARAMETERS_USO_DISABLED = 1;
		public const uint32 NDIS_OFFLOAD_PARAMETERS_USO_ENABLED = 2;
		public const uint32 NDIS_OFFLOAD_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_OFFLOAD_PARAMETERS_REVISION_2 = 2;
		public const uint32 NDIS_OFFLOAD_PARAMETERS_REVISION_3 = 3;
		public const uint32 NDIS_OFFLOAD_PARAMETERS_REVISION_4 = 4;
		public const uint32 NDIS_OFFLOAD_PARAMETERS_REVISION_5 = 5;
		public const uint32 NDIS_OFFLOAD_PARAMETERS_SKIP_REGISTRY_UPDATE = 1;
		public const uint32 IPSEC_OFFLOAD_V2_AUTHENTICATION_MD5 = 1;
		public const uint32 IPSEC_OFFLOAD_V2_AUTHENTICATION_SHA_1 = 2;
		public const uint32 IPSEC_OFFLOAD_V2_AUTHENTICATION_SHA_256 = 4;
		public const uint32 IPSEC_OFFLOAD_V2_AUTHENTICATION_AES_GCM_128 = 8;
		public const uint32 IPSEC_OFFLOAD_V2_AUTHENTICATION_AES_GCM_192 = 16;
		public const uint32 IPSEC_OFFLOAD_V2_AUTHENTICATION_AES_GCM_256 = 32;
		public const uint32 IPSEC_OFFLOAD_V2_ENCRYPTION_NONE = 1;
		public const uint32 IPSEC_OFFLOAD_V2_ENCRYPTION_DES_CBC = 2;
		public const uint32 IPSEC_OFFLOAD_V2_ENCRYPTION_3_DES_CBC = 4;
		public const uint32 IPSEC_OFFLOAD_V2_ENCRYPTION_AES_GCM_128 = 8;
		public const uint32 IPSEC_OFFLOAD_V2_ENCRYPTION_AES_GCM_192 = 16;
		public const uint32 IPSEC_OFFLOAD_V2_ENCRYPTION_AES_GCM_256 = 32;
		public const uint32 IPSEC_OFFLOAD_V2_ENCRYPTION_AES_CBC_128 = 64;
		public const uint32 IPSEC_OFFLOAD_V2_ENCRYPTION_AES_CBC_192 = 128;
		public const uint32 IPSEC_OFFLOAD_V2_ENCRYPTION_AES_CBC_256 = 256;
		public const uint32 NDIS_TCP_RECV_SEG_COALESC_OFFLOAD_REVISION_1 = 1;
		public const uint32 NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_NOT_SUPPORTED = 0;
		public const uint32 NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_INNER_IPV4 = 1;
		public const uint32 NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_OUTER_IPV4 = 2;
		public const uint32 NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_INNER_IPV6 = 4;
		public const uint32 NDIS_ENCAPSULATED_PACKET_TASK_OFFLOAD_OUTER_IPV6 = 8;
		public const uint32 NDIS_OFFLOAD_FLAGS_GROUP_CHECKSUM_CAPABILITIES = 1;
		public const uint32 IPSEC_OFFLOAD_V2_AND_TCP_CHECKSUM_COEXISTENCE = 2;
		public const uint32 IPSEC_OFFLOAD_V2_AND_UDP_CHECKSUM_COEXISTENCE = 4;
		public const uint32 NDIS_OFFLOAD_REVISION_1 = 1;
		public const uint32 NDIS_OFFLOAD_REVISION_2 = 2;
		public const uint32 NDIS_OFFLOAD_REVISION_3 = 3;
		public const uint32 NDIS_OFFLOAD_REVISION_4 = 4;
		public const uint32 NDIS_OFFLOAD_REVISION_5 = 5;
		public const uint32 NDIS_OFFLOAD_REVISION_6 = 6;
		public const uint32 NDIS_OFFLOAD_REVISION_7 = 7;
		public const uint32 NDIS_TCP_CONNECTION_OFFLOAD_REVISION_1 = 1;
		public const uint32 NDIS_TCP_CONNECTION_OFFLOAD_REVISION_2 = 2;
		public const uint32 NDIS_PORT_AUTHENTICATION_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_WMI_DEFAULT_METHOD_ID = 1;
		public const uint32 NDIS_WMI_OBJECT_TYPE_SET = 1;
		public const uint32 NDIS_WMI_OBJECT_TYPE_METHOD = 2;
		public const uint32 NDIS_WMI_OBJECT_TYPE_EVENT = 3;
		public const uint32 NDIS_WMI_OBJECT_TYPE_ENUM_ADAPTER = 4;
		public const uint32 NDIS_WMI_OBJECT_TYPE_OUTPUT_INFO = 5;
		public const uint32 NDIS_WMI_METHOD_HEADER_REVISION_1 = 1;
		public const uint32 NDIS_WMI_SET_HEADER_REVISION_1 = 1;
		public const uint32 NDIS_WMI_EVENT_HEADER_REVISION_1 = 1;
		public const uint32 NDIS_WMI_ENUM_ADAPTER_REVISION_1 = 1;
		public const uint32 NDIS_DEVICE_TYPE_ENDPOINT = 1;
		public const uint32 NDIS_HD_SPLIT_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_HD_SPLIT_COMBINE_ALL_HEADERS = 1;
		public const uint32 NDIS_HD_SPLIT_CURRENT_CONFIG_REVISION_1 = 1;
		public const uint32 NDIS_HD_SPLIT_CAPS_SUPPORTS_HEADER_DATA_SPLIT = 1;
		public const uint32 NDIS_HD_SPLIT_CAPS_SUPPORTS_IPV4_OPTIONS = 2;
		public const uint32 NDIS_HD_SPLIT_CAPS_SUPPORTS_IPV6_EXTENSION_HEADERS = 4;
		public const uint32 NDIS_HD_SPLIT_CAPS_SUPPORTS_TCP_OPTIONS = 8;
		public const uint32 NDIS_HD_SPLIT_ENABLE_HEADER_DATA_SPLIT = 1;
		public const uint32 NDIS_PM_WOL_BITMAP_PATTERN_SUPPORTED = 1;
		public const uint32 NDIS_PM_WOL_MAGIC_PACKET_SUPPORTED = 2;
		public const uint32 NDIS_PM_WOL_IPV4_TCP_SYN_SUPPORTED = 4;
		public const uint32 NDIS_PM_WOL_IPV6_TCP_SYN_SUPPORTED = 8;
		public const uint32 NDIS_PM_WOL_IPV4_DEST_ADDR_WILDCARD_SUPPORTED = 512;
		public const uint32 NDIS_PM_WOL_IPV6_DEST_ADDR_WILDCARD_SUPPORTED = 2048;
		public const uint32 NDIS_PM_WOL_EAPOL_REQUEST_ID_MESSAGE_SUPPORTED = 65536;
		public const uint32 NDIS_PM_PROTOCOL_OFFLOAD_ARP_SUPPORTED = 1;
		public const uint32 NDIS_PM_PROTOCOL_OFFLOAD_NS_SUPPORTED = 2;
		public const uint32 NDIS_PM_PROTOCOL_OFFLOAD_80211_RSN_REKEY_SUPPORTED = 128;
		public const uint32 NDIS_PM_WAKE_ON_MEDIA_CONNECT_SUPPORTED = 1;
		public const uint32 NDIS_PM_WAKE_ON_MEDIA_DISCONNECT_SUPPORTED = 2;
		public const uint32 NDIS_WLAN_WAKE_ON_NLO_DISCOVERY_SUPPORTED = 1;
		public const uint32 NDIS_WLAN_WAKE_ON_AP_ASSOCIATION_LOST_SUPPORTED = 2;
		public const uint32 NDIS_WLAN_WAKE_ON_GTK_HANDSHAKE_ERROR_SUPPORTED = 4;
		public const uint32 NDIS_WLAN_WAKE_ON_4WAY_HANDSHAKE_REQUEST_SUPPORTED = 8;
		public const uint32 NDIS_WWAN_WAKE_ON_REGISTER_STATE_SUPPORTED = 1;
		public const uint32 NDIS_WWAN_WAKE_ON_SMS_RECEIVE_SUPPORTED = 2;
		public const uint32 NDIS_WWAN_WAKE_ON_USSD_RECEIVE_SUPPORTED = 4;
		public const uint32 NDIS_WWAN_WAKE_ON_PACKET_STATE_SUPPORTED = 8;
		public const uint32 NDIS_WWAN_WAKE_ON_UICC_CHANGE_SUPPORTED = 16;
		public const uint32 NDIS_PM_WAKE_PACKET_INDICATION_SUPPORTED = 1;
		public const uint32 NDIS_PM_SELECTIVE_SUSPEND_SUPPORTED = 2;
		public const uint32 NDIS_PM_WOL_BITMAP_PATTERN_ENABLED = 1;
		public const uint32 NDIS_PM_WOL_MAGIC_PACKET_ENABLED = 2;
		public const uint32 NDIS_PM_WOL_IPV4_TCP_SYN_ENABLED = 4;
		public const uint32 NDIS_PM_WOL_IPV6_TCP_SYN_ENABLED = 8;
		public const uint32 NDIS_PM_WOL_IPV4_DEST_ADDR_WILDCARD_ENABLED = 512;
		public const uint32 NDIS_PM_WOL_IPV6_DEST_ADDR_WILDCARD_ENABLED = 2048;
		public const uint32 NDIS_PM_WOL_EAPOL_REQUEST_ID_MESSAGE_ENABLED = 65536;
		public const uint32 NDIS_PM_PROTOCOL_OFFLOAD_ARP_ENABLED = 1;
		public const uint32 NDIS_PM_PROTOCOL_OFFLOAD_NS_ENABLED = 2;
		public const uint32 NDIS_PM_PROTOCOL_OFFLOAD_80211_RSN_REKEY_ENABLED = 128;
		public const uint32 NDIS_PM_WAKE_ON_LINK_CHANGE_ENABLED = 1;
		public const uint32 NDIS_PM_WAKE_ON_MEDIA_DISCONNECT_ENABLED = 2;
		public const uint32 NDIS_PM_SELECTIVE_SUSPEND_ENABLED = 16;
		public const uint32 NDIS_WLAN_WAKE_ON_NLO_DISCOVERY_ENABLED = 1;
		public const uint32 NDIS_WLAN_WAKE_ON_AP_ASSOCIATION_LOST_ENABLED = 2;
		public const uint32 NDIS_WLAN_WAKE_ON_GTK_HANDSHAKE_ERROR_ENABLED = 4;
		public const uint32 NDIS_WLAN_WAKE_ON_4WAY_HANDSHAKE_REQUEST_ENABLED = 8;
		public const uint32 NDIS_WWAN_WAKE_ON_REGISTER_STATE_ENABLED = 1;
		public const uint32 NDIS_WWAN_WAKE_ON_SMS_RECEIVE_ENABLED = 2;
		public const uint32 NDIS_WWAN_WAKE_ON_USSD_RECEIVE_ENABLED = 4;
		public const uint32 NDIS_WWAN_WAKE_ON_PACKET_STATE_ENABLED = 8;
		public const uint32 NDIS_WWAN_WAKE_ON_UICC_CHANGE_ENABLED = 16;
		public const uint32 NDIS_PM_WOL_PRIORITY_LOWEST = 4294967295;
		public const uint32 NDIS_PM_WOL_PRIORITY_NORMAL = 268435456;
		public const uint32 NDIS_PM_WOL_PRIORITY_HIGHEST = 1;
		public const uint32 NDIS_PM_PROTOCOL_OFFLOAD_PRIORITY_LOWEST = 4294967295;
		public const uint32 NDIS_PM_PROTOCOL_OFFLOAD_PRIORITY_NORMAL = 268435456;
		public const uint32 NDIS_PM_PROTOCOL_OFFLOAD_PRIORITY_HIGHEST = 1;
		public const uint32 NDIS_PM_MAX_STRING_SIZE = 64;
		public const uint32 NDIS_PM_CAPABILITIES_REVISION_1 = 1;
		public const uint32 NDIS_PM_CAPABILITIES_REVISION_2 = 2;
		public const uint32 NDIS_PM_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_PM_PARAMETERS_REVISION_2 = 2;
		public const uint32 EAPOL_REQUEST_ID_WOL_FLAG_MUST_ENCRYPT = 1;
		public const uint32 NDIS_PM_MAX_PATTERN_ID = 65535;
		public const uint32 NDIS_PM_PRIVATE_PATTERN_ID = 1;
		public const uint32 NDIS_PM_WOL_PATTERN_REVISION_1 = 1;
		public const uint32 NDIS_PM_WOL_PATTERN_REVISION_2 = 2;
		public const uint32 DOT11_RSN_KCK_LENGTH = 16;
		public const uint32 DOT11_RSN_KEK_LENGTH = 16;
		public const uint32 DOT11_RSN_MAX_CIPHER_KEY_LENGTH = 32;
		public const uint32 NDIS_PM_PROTOCOL_OFFLOAD_REVISION_1 = 1;
		public const uint32 NDIS_PM_PROTOCOL_OFFLOAD_REVISION_2 = 2;
		public const uint32 NDIS_SIZEOF_NDIS_PM_PROTOCOL_OFFLOAD_REVISION_1 = 240;
		public const uint32 NDIS_PM_WAKE_REASON_REVISION_1 = 1;
		public const uint32 NDIS_PM_WAKE_PACKET_REVISION_1 = 1;
		public const uint32 NDIS_WMI_PM_ADMIN_CONFIG_REVISION_1 = 1;
		public const uint32 NDIS_WMI_PM_ACTIVE_CAPABILITIES_REVISION_1 = 1;
		public const uint32 NDIS_RECEIVE_FILTER_MAC_HEADER_SUPPORTED = 1;
		public const uint32 NDIS_RECEIVE_FILTER_IPV4_HEADER_SUPPORTED = 2;
		public const uint32 NDIS_RECEIVE_FILTER_IPV6_HEADER_SUPPORTED = 4;
		public const uint32 NDIS_RECEIVE_FILTER_ARP_HEADER_SUPPORTED = 8;
		public const uint32 NDIS_RECEIVE_FILTER_UDP_HEADER_SUPPORTED = 16;
		public const uint32 NDIS_RECEIVE_FILTER_MAC_HEADER_DEST_ADDR_SUPPORTED = 1;
		public const uint32 NDIS_RECEIVE_FILTER_MAC_HEADER_SOURCE_ADDR_SUPPORTED = 2;
		public const uint32 NDIS_RECEIVE_FILTER_MAC_HEADER_PROTOCOL_SUPPORTED = 4;
		public const uint32 NDIS_RECEIVE_FILTER_MAC_HEADER_VLAN_ID_SUPPORTED = 8;
		public const uint32 NDIS_RECEIVE_FILTER_MAC_HEADER_PRIORITY_SUPPORTED = 16;
		public const uint32 NDIS_RECEIVE_FILTER_MAC_HEADER_PACKET_TYPE_SUPPORTED = 32;
		public const uint32 NDIS_RECEIVE_FILTER_ARP_HEADER_OPERATION_SUPPORTED = 1;
		public const uint32 NDIS_RECEIVE_FILTER_ARP_HEADER_SPA_SUPPORTED = 2;
		public const uint32 NDIS_RECEIVE_FILTER_ARP_HEADER_TPA_SUPPORTED = 4;
		public const uint32 NDIS_RECEIVE_FILTER_IPV4_HEADER_PROTOCOL_SUPPORTED = 1;
		public const uint32 NDIS_RECEIVE_FILTER_IPV6_HEADER_PROTOCOL_SUPPORTED = 1;
		public const uint32 NDIS_RECEIVE_FILTER_UDP_HEADER_DEST_PORT_SUPPORTED = 1;
		public const uint32 NDIS_RECEIVE_FILTER_TEST_HEADER_FIELD_EQUAL_SUPPORTED = 1;
		public const uint32 NDIS_RECEIVE_FILTER_TEST_HEADER_FIELD_MASK_EQUAL_SUPPORTED = 2;
		public const uint32 NDIS_RECEIVE_FILTER_TEST_HEADER_FIELD_NOT_EQUAL_SUPPORTED = 4;
		public const uint32 NDIS_RECEIVE_FILTER_MSI_X_SUPPORTED = 1;
		public const uint32 NDIS_RECEIVE_FILTER_VM_QUEUE_SUPPORTED = 2;
		public const uint32 NDIS_RECEIVE_FILTER_LOOKAHEAD_SPLIT_SUPPORTED = 4;
		public const uint32 NDIS_RECEIVE_FILTER_DYNAMIC_PROCESSOR_AFFINITY_CHANGE_SUPPORTED = 8;
		public const uint32 NDIS_RECEIVE_FILTER_INTERRUPT_VECTOR_COALESCING_SUPPORTED = 16;
		public const uint32 NDIS_RECEIVE_FILTER_IMPLAT_MIN_OF_QUEUES_MODE = 64;
		public const uint32 NDIS_RECEIVE_FILTER_IMPLAT_SUM_OF_QUEUES_MODE = 128;
		public const uint32 NDIS_RECEIVE_FILTER_PACKET_COALESCING_SUPPORTED_ON_DEFAULT_QUEUE = 256;
		public const uint32 NDIS_RECEIVE_FILTER_ANY_VLAN_SUPPORTED = 32;
		public const uint32 NDIS_RECEIVE_FILTER_DYNAMIC_PROCESSOR_AFFINITY_CHANGE_FOR_DEFAULT_QUEUE_SUPPORTED = 64;
		public const uint32 NDIS_RECEIVE_FILTER_VMQ_FILTERS_ENABLED = 1;
		public const uint32 NDIS_RECEIVE_FILTER_PACKET_COALESCING_FILTERS_ENABLED = 2;
		public const uint32 NDIS_RECEIVE_FILTER_VM_QUEUES_ENABLED = 1;
		public const uint32 NDIS_RECEIVE_FILTER_CAPABILITIES_REVISION_1 = 1;
		public const uint32 NDIS_RECEIVE_FILTER_CAPABILITIES_REVISION_2 = 2;
		public const uint32 NDIS_NIC_SWITCH_CAPS_VLAN_SUPPORTED = 1;
		public const uint32 NDIS_NIC_SWITCH_CAPS_PER_VPORT_INTERRUPT_MODERATION_SUPPORTED = 2;
		public const uint32 NDIS_NIC_SWITCH_CAPS_ASYMMETRIC_QUEUE_PAIRS_FOR_NONDEFAULT_VPORT_SUPPORTED = 4;
		public const uint32 NDIS_NIC_SWITCH_CAPS_VF_RSS_SUPPORTED = 8;
		public const uint32 NDIS_NIC_SWITCH_CAPS_SINGLE_VPORT_POOL = 16;
		public const uint32 NDIS_NIC_SWITCH_CAPS_RSS_PARAMETERS_PER_PF_VPORT_SUPPORTED = 32;
		public const uint32 NDIS_NIC_SWITCH_CAPS_NIC_SWITCH_WITHOUT_IOV_SUPPORTED = 64;
		public const uint32 NDIS_NIC_SWITCH_CAPS_RSS_ON_PF_VPORTS_SUPPORTED = 128;
		public const uint32 NDIS_NIC_SWITCH_CAPS_RSS_PER_PF_VPORT_INDIRECTION_TABLE_SUPPORTED = 256;
		public const uint32 NDIS_NIC_SWITCH_CAPS_RSS_PER_PF_VPORT_HASH_FUNCTION_SUPPORTED = 512;
		public const uint32 NDIS_NIC_SWITCH_CAPS_RSS_PER_PF_VPORT_HASH_TYPE_SUPPORTED = 1024;
		public const uint32 NDIS_NIC_SWITCH_CAPS_RSS_PER_PF_VPORT_HASH_KEY_SUPPORTED = 2048;
		public const uint32 NDIS_NIC_SWITCH_CAPS_RSS_PER_PF_VPORT_INDIRECTION_TABLE_SIZE_RESTRICTED = 4096;
		public const uint32 NDIS_NIC_SWITCH_CAPABILITIES_REVISION_1 = 1;
		public const uint32 NDIS_NIC_SWITCH_CAPABILITIES_REVISION_2 = 2;
		public const uint32 NDIS_NIC_SWITCH_CAPABILITIES_REVISION_3 = 3;
		public const uint32 NDIS_RECEIVE_FILTER_GLOBAL_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_DEFAULT_RECEIVE_QUEUE_ID = 0;
		public const uint32 NDIS_DEFAULT_RECEIVE_QUEUE_GROUP_ID = 0;
		public const uint32 NDIS_DEFAULT_RECEIVE_FILTER_ID = 0;
		public const uint32 NDIS_RECEIVE_FILTER_FIELD_MAC_HEADER_VLAN_UNTAGGED_OR_ZERO = 1;
		public const uint32 NDIS_RECEIVE_FILTER_RESERVED = 254;
		public const uint32 NDIS_RECEIVE_FILTER_FIELD_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_RECEIVE_FILTER_FIELD_PARAMETERS_REVISION_2 = 2;
		public const uint32 NDIS_RECEIVE_FILTER_FLAGS_RESERVED = 1;
		public const uint32 NDIS_RECEIVE_FILTER_PACKET_ENCAPSULATION_GRE = 2;
		public const uint32 NDIS_RECEIVE_FILTER_PACKET_ENCAPSULATION = 2;
		public const uint32 NDIS_RECEIVE_FILTER_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_RECEIVE_FILTER_PARAMETERS_REVISION_2 = 2;
		public const uint32 NDIS_RECEIVE_FILTER_CLEAR_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_RECEIVE_QUEUE_PARAMETERS_PER_QUEUE_RECEIVE_INDICATION = 1;
		public const uint32 NDIS_RECEIVE_QUEUE_PARAMETERS_LOOKAHEAD_SPLIT_REQUIRED = 2;
		public const uint32 NDIS_RECEIVE_QUEUE_PARAMETERS_FLAGS_CHANGED = 65536;
		public const uint32 NDIS_RECEIVE_QUEUE_PARAMETERS_PROCESSOR_AFFINITY_CHANGED = 131072;
		public const uint32 NDIS_RECEIVE_QUEUE_PARAMETERS_SUGGESTED_RECV_BUFFER_NUMBERS_CHANGED = 262144;
		public const uint32 NDIS_RECEIVE_QUEUE_PARAMETERS_NAME_CHANGED = 524288;
		public const uint32 NDIS_RECEIVE_QUEUE_PARAMETERS_INTERRUPT_COALESCING_DOMAIN_ID_CHANGED = 1048576;
		public const uint32 NDIS_RECEIVE_QUEUE_PARAMETERS_QOS_SQ_ID_CHANGED = 2097152;
		public const uint32 NDIS_RECEIVE_QUEUE_PARAMETERS_CHANGE_MASK = 4294901760;
		public const uint32 NDIS_RECEIVE_QUEUE_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_RECEIVE_QUEUE_PARAMETERS_REVISION_2 = 2;
		public const uint32 NDIS_RECEIVE_QUEUE_PARAMETERS_REVISION_3 = 3;
		public const uint32 NDIS_RECEIVE_QUEUE_FREE_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_RECEIVE_QUEUE_INFO_REVISION_1 = 1;
		public const uint32 NDIS_RECEIVE_QUEUE_INFO_REVISION_2 = 2;
		public const uint32 NDIS_RECEIVE_QUEUE_INFO_ARRAY_REVISION_1 = 1;
		public const uint32 NDIS_RECEIVE_FILTER_INFO_REVISION_1 = 1;
		public const uint32 NDIS_RECEIVE_FILTER_INFO_ARRAY_REVISION_1 = 1;
		public const uint32 NDIS_RECEIVE_FILTER_INFO_ARRAY_REVISION_2 = 2;
		public const uint32 NDIS_RECEIVE_FILTER_INFO_ARRAY_VPORT_ID_SPECIFIED = 1;
		public const uint32 NDIS_RECEIVE_QUEUE_ALLOCATION_COMPLETE_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_RECEIVE_QUEUE_ALLOCATION_COMPLETE_ARRAY_REVISION_1 = 1;
		public const uint32 NDIS_RECEIVE_SCALE_CAPABILITIES_REVISION_1 = 1;
		public const uint32 NDIS_RECEIVE_SCALE_CAPABILITIES_REVISION_2 = 2;
		public const uint32 NDIS_RECEIVE_SCALE_CAPABILITIES_REVISION_3 = 3;
		public const uint32 NDIS_RSS_CAPS_HASH_TYPE_TCP_IPV4 = 256;
		public const uint32 NDIS_RSS_CAPS_HASH_TYPE_TCP_IPV6 = 512;
		public const uint32 NDIS_RSS_CAPS_HASH_TYPE_TCP_IPV6_EX = 1024;
		public const uint32 NDIS_RSS_CAPS_HASH_TYPE_UDP_IPV4 = 2048;
		public const uint32 NDIS_RSS_CAPS_HASH_TYPE_UDP_IPV6 = 4096;
		public const uint32 NDIS_RSS_CAPS_HASH_TYPE_UDP_IPV6_EX = 8192;
		public const uint32 NDIS_RSS_CAPS_MESSAGE_SIGNALED_INTERRUPTS = 16777216;
		public const uint32 NDIS_RSS_CAPS_CLASSIFICATION_AT_ISR = 33554432;
		public const uint32 NDIS_RSS_CAPS_CLASSIFICATION_AT_DPC = 67108864;
		public const uint32 NDIS_RSS_CAPS_USING_MSI_X = 134217728;
		public const uint32 NDIS_RSS_CAPS_RSS_AVAILABLE_ON_PORTS = 268435456;
		public const uint32 NDIS_RSS_CAPS_SUPPORTS_MSI_X = 536870912;
		public const uint32 NDIS_RSS_CAPS_SUPPORTS_INDEPENDENT_ENTRY_MOVE = 1073741824;
		public const uint32 NDIS_RSS_PARAM_FLAG_BASE_CPU_UNCHANGED = 1;
		public const uint32 NDIS_RSS_PARAM_FLAG_HASH_INFO_UNCHANGED = 2;
		public const uint32 NDIS_RSS_PARAM_FLAG_ITABLE_UNCHANGED = 4;
		public const uint32 NDIS_RSS_PARAM_FLAG_HASH_KEY_UNCHANGED = 8;
		public const uint32 NDIS_RSS_PARAM_FLAG_DISABLE_RSS = 16;
		public const uint32 NDIS_RSS_PARAM_FLAG_DEFAULT_PROCESSOR_UNCHANGED = 32;
		public const uint32 NDIS_RSS_INDIRECTION_TABLE_SIZE_REVISION_1 = 128;
		public const uint32 NDIS_RSS_HASH_SECRET_KEY_SIZE_REVISION_1 = 40;
		public const uint32 NDIS_RECEIVE_SCALE_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_RECEIVE_SCALE_PARAMETERS_REVISION_2 = 2;
		public const uint32 NDIS_RECEIVE_SCALE_PARAMETERS_REVISION_3 = 3;
		public const uint32 NDIS_RSS_INDIRECTION_TABLE_MAX_SIZE_REVISION_1 = 128;
		public const uint32 NDIS_RSS_HASH_SECRET_KEY_MAX_SIZE_REVISION_1 = 40;
		public const uint32 NDIS_RSS_HASH_SECRET_KEY_MAX_SIZE_REVISION_2 = 40;
		public const uint32 NDIS_RSS_HASH_SECRET_KEY_MAX_SIZE_REVISION_3 = 40;
		public const uint32 NDIS_RECEIVE_SCALE_PARAMETERS_V2_REVISION_1 = 1;
		public const uint32 NDIS_RECEIVE_SCALE_PARAM_ENABLE_RSS = 1;
		public const uint32 NDIS_RECEIVE_SCALE_PARAM_HASH_INFO_CHANGED = 2;
		public const uint32 NDIS_RECEIVE_SCALE_PARAM_HASH_KEY_CHANGED = 4;
		public const uint32 NDIS_RECEIVE_SCALE_PARAM_NUMBER_OF_QUEUES_CHANGED = 8;
		public const uint32 NDIS_RECEIVE_SCALE_PARAM_NUMBER_OF_ENTRIES_CHANGED = 16;
		public const uint32 NDIS_RSS_SET_INDIRECTION_ENTRY_FLAG_PRIMARY_PROCESSOR = 1;
		public const uint32 NDIS_RSS_SET_INDIRECTION_ENTRY_FLAG_DEFAULT_PROCESSOR = 2;
		public const uint32 NDIS_RSS_SET_INDIRECTION_ENTRIES_REVISION_1 = 1;
		public const uint32 NDIS_RECEIVE_HASH_FLAG_ENABLE_HASH = 1;
		public const uint32 NDIS_RECEIVE_HASH_FLAG_HASH_INFO_UNCHANGED = 2;
		public const uint32 NDIS_RECEIVE_HASH_FLAG_HASH_KEY_UNCHANGED = 4;
		public const uint32 NDIS_RECEIVE_HASH_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_RSS_PROCESSOR_INFO_REVISION_1 = 1;
		public const uint32 NDIS_RSS_PROCESSOR_INFO_REVISION_2 = 2;
		public const uint32 NDIS_SYSTEM_PROCESSOR_INFO_EX_REVISION_1 = 1;
		public const uint32 NDIS_HYPERVISOR_INFO_FLAG_HYPERVISOR_PRESENT = 1;
		public const uint32 NDIS_HYPERVISOR_INFO_REVISION_1 = 1;
		public const uint32 NDIS_WMI_RECEIVE_QUEUE_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_WMI_RECEIVE_QUEUE_INFO_REVISION_1 = 1;
		public const uint32 NDIS_NDK_CAPABILITIES_REVISION_1 = 1;
		public const uint32 OID_NDK_SET_STATE = 4228121089;
		public const uint32 OID_NDK_STATISTICS = 4228121090;
		public const uint32 OID_NDK_CONNECTIONS = 4228121091;
		public const uint32 OID_NDK_LOCAL_ENDPOINTS = 4228121092;
		public const Guid GUID_NDIS_NDK_CAPABILITIES = .(0x7969ba4d, 0xdd80, 0x4bc7, 0xb3, 0xe6, 0x68, 0x04, 0x39, 0x97, 0xe5, 0x19);
		public const Guid GUID_NDIS_NDK_STATE = .(0x530c69c9, 0x2f51, 0x49de, 0xa1, 0xaf, 0x08, 0x8d, 0x54, 0xff, 0xa4, 0x74);
		public const uint32 NDIS_NDK_STATISTICS_INFO_REVISION_1 = 1;
		public const uint32 NDIS_NDK_CONNECTIONS_REVISION_1 = 1;
		public const uint32 NDIS_NDK_LOCAL_ENDPOINTS_REVISION_1 = 1;
		public const uint32 OID_QOS_HARDWARE_CAPABILITIES = 4228186113;
		public const uint32 OID_QOS_CURRENT_CAPABILITIES = 4228186114;
		public const uint32 OID_QOS_PARAMETERS = 4228186115;
		public const uint32 OID_QOS_OPERATIONAL_PARAMETERS = 4228186116;
		public const uint32 OID_QOS_REMOTE_PARAMETERS = 4228186117;
		public const uint32 NDIS_QOS_MAXIMUM_PRIORITIES = 8;
		public const uint32 NDIS_QOS_MAXIMUM_TRAFFIC_CLASSES = 8;
		public const uint32 NDIS_QOS_CAPABILITIES_STRICT_TSA_SUPPORTED = 1;
		public const uint32 NDIS_QOS_CAPABILITIES_MACSEC_BYPASS_SUPPORTED = 2;
		public const uint32 NDIS_QOS_CAPABILITIES_CEE_DCBX_SUPPORTED = 4;
		public const uint32 NDIS_QOS_CAPABILITIES_IEEE_DCBX_SUPPORTED = 8;
		public const uint32 NDIS_QOS_CAPABILITIES_REVISION_1 = 1;
		public const uint32 NDIS_QOS_CLASSIFICATION_SET_BY_MINIPORT_MASK = 4278190080;
		public const uint32 NDIS_QOS_CLASSIFICATION_ENFORCED_BY_MINIPORT = 16777216;
		public const uint32 NDIS_QOS_CONDITION_RESERVED = 0;
		public const uint32 NDIS_QOS_CONDITION_DEFAULT = 1;
		public const uint32 NDIS_QOS_CONDITION_TCP_PORT = 2;
		public const uint32 NDIS_QOS_CONDITION_UDP_PORT = 3;
		public const uint32 NDIS_QOS_CONDITION_TCP_OR_UDP_PORT = 4;
		public const uint32 NDIS_QOS_CONDITION_ETHERTYPE = 5;
		public const uint32 NDIS_QOS_CONDITION_NETDIRECT_PORT = 6;
		public const uint32 NDIS_QOS_CONDITION_MAXIMUM = 7;
		public const uint32 NDIS_QOS_ACTION_PRIORITY = 0;
		public const uint32 NDIS_QOS_ACTION_MAXIMUM = 1;
		public const uint32 NDIS_QOS_CLASSIFICATION_ELEMENT_REVISION_1 = 1;
		public const uint32 NDIS_QOS_PARAMETERS_ETS_CHANGED = 1;
		public const uint32 NDIS_QOS_PARAMETERS_ETS_CONFIGURED = 2;
		public const uint32 NDIS_QOS_PARAMETERS_PFC_CHANGED = 256;
		public const uint32 NDIS_QOS_PARAMETERS_PFC_CONFIGURED = 512;
		public const uint32 NDIS_QOS_PARAMETERS_CLASSIFICATION_CHANGED = 65536;
		public const uint32 NDIS_QOS_PARAMETERS_CLASSIFICATION_CONFIGURED = 131072;
		public const uint32 NDIS_QOS_PARAMETERS_WILLING = 2147483648;
		public const uint32 NDIS_QOS_TSA_STRICT = 0;
		public const uint32 NDIS_QOS_TSA_CBS = 1;
		public const uint32 NDIS_QOS_TSA_ETS = 2;
		public const uint32 NDIS_QOS_TSA_MAXIMUM = 3;
		public const uint32 NDIS_QOS_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_DEFAULT_VPORT_ID = 0;
		public const uint32 NDIS_DEFAULT_SWITCH_ID = 0;
		public const uint32 NDIS_NIC_SWITCH_PARAMETERS_CHANGE_MASK = 4294901760;
		public const uint32 NDIS_NIC_SWITCH_PARAMETERS_SWITCH_NAME_CHANGED = 65536;
		public const uint32 NDIS_NIC_SWITCH_PARAMETERS_DEFAULT_NUMBER_OF_QUEUE_PAIRS_FOR_DEFAULT_VPORT = 1;
		public const uint32 NDIS_NIC_SWITCH_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_NIC_SWITCH_PARAMETERS_REVISION_2 = 2;
		public const uint32 NDIS_NIC_SWITCH_DELETE_SWITCH_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_NIC_SWITCH_INFO_REVISION_1 = 1;
		public const uint32 NDIS_NIC_SWITCH_INFO_ARRAY_REVISION_1 = 1;
		public const uint32 NDIS_NIC_SWITCH_VPORT_PARAMS_LOOKAHEAD_SPLIT_ENABLED = 1;
		public const uint32 NDIS_NIC_SWITCH_VPORT_PARAMS_PACKET_DIRECT_RX_ONLY = 2;
		public const uint32 NDIS_NIC_SWITCH_VPORT_PARAMS_ENFORCE_MAX_SG_LIST = 32768;
		public const uint32 NDIS_NIC_SWITCH_VPORT_PARAMS_CHANGE_MASK = 4294901760;
		public const uint32 NDIS_NIC_SWITCH_VPORT_PARAMS_FLAGS_CHANGED = 65536;
		public const uint32 NDIS_NIC_SWITCH_VPORT_PARAMS_NAME_CHANGED = 131072;
		public const uint32 NDIS_NIC_SWITCH_VPORT_PARAMS_INT_MOD_CHANGED = 262144;
		public const uint32 NDIS_NIC_SWITCH_VPORT_PARAMS_STATE_CHANGED = 524288;
		public const uint32 NDIS_NIC_SWITCH_VPORT_PARAMS_PROCESSOR_AFFINITY_CHANGED = 1048576;
		public const uint32 NDIS_NIC_SWITCH_VPORT_PARAMS_NDK_PARAMS_CHANGED = 2097152;
		public const uint32 NDIS_NIC_SWITCH_VPORT_PARAMS_QOS_SQ_ID_CHANGED = 4194304;
		public const uint32 NDIS_NIC_SWITCH_VPORT_PARAMS_NUM_QUEUE_PAIRS_CHANGED = 8388608;
		public const uint32 NDIS_NIC_SWITCH_VPORT_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_NIC_SWITCH_VPORT_PARAMETERS_REVISION_2 = 2;
		public const uint32 NDIS_NIC_SWITCH_DELETE_VPORT_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_NIC_SWITCH_VPORT_INFO_LOOKAHEAD_SPLIT_ENABLED = 1;
		public const uint32 NDIS_NIC_SWITCH_VPORT_INFO_PACKET_DIRECT_RX_ONLY = 2;
		public const uint32 NDIS_NIC_SWITCH_VPORT_INFO_GFT_ENABLED = 4;
		public const uint32 NDIS_NIC_SWITCH_VPORT_INFO_REVISION_1 = 1;
		public const uint32 NDIS_NIC_SWITCH_VPORT_INFO_ARRAY_ENUM_ON_SPECIFIC_FUNCTION = 1;
		public const uint32 NDIS_NIC_SWITCH_VPORT_INFO_ARRAY_ENUM_ON_SPECIFIC_SWITCH = 2;
		public const uint32 NDIS_NIC_SWITCH_VPORT_INFO_ARRAY_REVISION_1 = 1;
		public const uint32 NDIS_NIC_SWITCH_VF_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_NIC_SWITCH_FREE_VF_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_NIC_SWITCH_VF_INFO_REVISION_1 = 1;
		public const uint32 NDIS_NIC_SWITCH_VF_INFO_ARRAY_ENUM_ON_SPECIFIC_SWITCH = 1;
		public const uint32 NDIS_NIC_SWITCH_VF_INFO_ARRAY_REVISION_1 = 1;
		public const uint32 NDIS_SRIOV_CAPS_SRIOV_SUPPORTED = 1;
		public const uint32 NDIS_SRIOV_CAPS_PF_MINIPORT = 2;
		public const uint32 NDIS_SRIOV_CAPS_VF_MINIPORT = 4;
		public const uint32 NDIS_SRIOV_CAPABILITIES_REVISION_1 = 1;
		public const uint32 NDIS_SRIOV_READ_VF_CONFIG_SPACE_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_SRIOV_WRITE_VF_CONFIG_SPACE_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_SRIOV_READ_VF_CONFIG_BLOCK_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_SRIOV_WRITE_VF_CONFIG_BLOCK_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_SRIOV_RESET_VF_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_SRIOV_SET_VF_POWER_STATE_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_SRIOV_CONFIG_STATE_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_SRIOV_VF_VENDOR_DEVICE_ID_INFO_REVISION_1 = 1;
		public const uint32 NDIS_SRIOV_PROBED_BARS_INFO_REVISION_1 = 1;
		public const uint32 NDIS_RECEIVE_FILTER_MOVE_FILTER_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_SRIOV_BAR_RESOURCES_INFO_REVISION_1 = 1;
		public const uint32 NDIS_SRIOV_PF_LUID_INFO_REVISION_1 = 1;
		public const uint32 NDIS_SRIOV_VF_SERIAL_NUMBER_INFO_REVISION_1 = 1;
		public const uint32 NDIS_SRIOV_VF_INVALIDATE_CONFIG_BLOCK_INFO_REVISION_1 = 1;
		public const uint32 NDIS_SRIOV_OVERLYING_ADAPTER_INFO_VERSION_1 = 1;
		public const uint32 NDIS_ISOLATION_NAME_MAX_STRING_SIZE = 127;
		public const uint32 NDIS_ROUTING_DOMAIN_ISOLATION_ENTRY_REVISION_1 = 1;
		public const uint32 NDIS_ROUTING_DOMAIN_ENTRY_REVISION_1 = 1;
		public const uint32 NDIS_ISOLATION_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_SWITCH_OBJECT_SERIALIZATION_VERSION_1 = 1;
		public const uint32 NDIS_SWITCH_PORT_PROPERTY_SECURITY_REVISION_1 = 1;
		public const uint32 NDIS_SWITCH_PORT_PROPERTY_SECURITY_REVISION_2 = 2;
		public const uint32 NDIS_SWITCH_PORT_PROPERTY_VLAN_REVISION_1 = 1;
		public const uint32 NDIS_SWITCH_PORT_PROPERTY_PROFILE_REVISION_1 = 1;
		public const uint32 NDIS_SWITCH_PORT_PROPERTY_ISOLATION_REVISION_1 = 1;
		public const uint32 NDIS_SWITCH_PORT_PROPERTY_ROUTING_DOMAIN_REVISION_1 = 1;
		public const uint32 NDIS_SWITCH_PORT_PROPERTY_CUSTOM_REVISION_1 = 1;
		public const uint32 NDIS_SWITCH_PORT_PROPERTY_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_SWITCH_PORT_PROPERTY_DELETE_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_SWITCH_PORT_PROPERTY_ENUM_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_SWITCH_PORT_PROPERTY_ENUM_INFO_REVISION_1 = 1;
		public const uint32 NDIS_SWITCH_PORT_FEATURE_STATUS_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_SWITCH_PORT_FEATURE_STATUS_CUSTOM_REVISION_1 = 1;
		public const uint32 NDIS_SWITCH_PROPERTY_CUSTOM_REVISION_1 = 1;
		public const uint32 NDIS_SWITCH_PROPERTY_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_SWITCH_PROPERTY_DELETE_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_SWITCH_PROPERTY_ENUM_INFO_REVISION_1 = 1;
		public const uint32 NDIS_SWITCH_PROPERTY_ENUM_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_SWITCH_FEATURE_STATUS_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_SWITCH_FEATURE_STATUS_CUSTOM_REVISION_1 = 1;
		public const uint32 NDIS_SWITCH_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_SWITCH_PORT_PARAMETERS_FLAG_UNTRUSTED_INTERNAL_PORT = 1;
		public const uint32 NDIS_SWITCH_PORT_PARAMETERS_FLAG_RESTORING_PORT = 2;
		public const uint32 NDIS_SWITCH_PORT_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_SWITCH_PORT_ARRAY_REVISION_1 = 1;
		public const uint32 NDIS_SWITCH_NIC_FLAGS_NIC_INITIALIZING = 1;
		public const uint32 NDIS_SWITCH_NIC_FLAGS_NIC_SUSPENDED = 2;
		public const uint32 NDIS_SWITCH_NIC_FLAGS_MAPPED_NIC_UPDATED = 4;
		public const uint32 NDIS_SWITCH_NIC_FLAGS_NIC_SUSPENDED_LM = 16;
		public const uint32 NDIS_SWITCH_NIC_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_SWITCH_NIC_PARAMETERS_REVISION_2 = 2;
		public const uint32 NDIS_SWITCH_NIC_ARRAY_REVISION_1 = 1;
		public const uint32 NDIS_SWITCH_NIC_OID_REQUEST_REVISION_1 = 1;
		public const uint32 NDIS_SWITCH_NIC_SAVE_STATE_REVISION_1 = 1;
		public const uint32 NDIS_SWITCH_NIC_SAVE_STATE_REVISION_2 = 2;
		public const uint32 NDIS_PORT_STATE_REVISION_1 = 1;
		public const uint32 NDIS_PORT_CHAR_USE_DEFAULT_AUTH_SETTINGS = 1;
		public const uint32 NDIS_PORT_CHARACTERISTICS_REVISION_1 = 1;
		public const uint32 NDIS_PORT_ARRAY_REVISION_1 = 1;
		public const uint32 ETHERNET_LENGTH_OF_ADDRESS = 6;
		public const uint32 NDIS_GFP_HEADER_PRESENT_ETHERNET = 1;
		public const uint32 NDIS_GFP_HEADER_PRESENT_IPV4 = 2;
		public const uint32 NDIS_GFP_HEADER_PRESENT_IPV6 = 4;
		public const uint32 NDIS_GFP_HEADER_PRESENT_TCP = 8;
		public const uint32 NDIS_GFP_HEADER_PRESENT_UDP = 16;
		public const uint32 NDIS_GFP_HEADER_PRESENT_ICMP = 32;
		public const uint32 NDIS_GFP_HEADER_PRESENT_NO_ENCAP = 64;
		public const uint32 NDIS_GFP_HEADER_PRESENT_IP_IN_IP_ENCAP = 128;
		public const uint32 NDIS_GFP_HEADER_PRESENT_IP_IN_GRE_ENCAP = 256;
		public const uint32 NDIS_GFP_HEADER_PRESENT_NVGRE_ENCAP = 512;
		public const uint32 NDIS_GFP_HEADER_PRESENT_VXLAN_ENCAP = 1024;
		public const uint32 NDIS_GFP_HEADER_PRESENT_ESP = 2048;
		public const uint32 NDIS_GFP_ENCAPSULATION_TYPE_NOT_ENCAPSULATED = 1;
		public const uint32 NDIS_GFP_ENCAPSULATION_TYPE_IP_IN_IP = 2;
		public const uint32 NDIS_GFP_ENCAPSULATION_TYPE_IP_IN_GRE = 4;
		public const uint32 NDIS_GFP_ENCAPSULATION_TYPE_NVGRE = 8;
		public const uint32 NDIS_GFP_ENCAPSULATION_TYPE_VXLAN = 16;
		public const uint32 NDIS_GFP_UNDEFINED_PROFILE_ID = 0;
		public const uint32 NDIS_GFP_HEADER_GROUP_EXACT_MATCH_PROFILE_IS_TTL_ONE = 1;
		public const uint32 NDIS_GFP_HEADER_GROUP_EXACT_MATCH_PROFILE_REVISION_1 = 1;
		public const uint32 NDIS_GFP_EXACT_MATCH_PROFILE_RDMA_FLOW = 1;
		public const uint32 NDIS_GFP_EXACT_MATCH_PROFILE_REVISION_1 = 1;
		public const uint32 NDIS_GFP_HEADER_GROUP_EXACT_MATCH_IS_TTL_ONE = 1;
		public const uint32 NDIS_GFP_HEADER_GROUP_EXACT_MATCH_REVISION_1 = 1;
		public const uint32 NDIS_GFP_HEADER_GROUP_WILDCARD_MATCH_PROFILE_IS_TTL_ONE = 1;
		public const uint32 NDIS_GFP_HEADER_GROUP_WILDCARD_MATCH_PROFILE_REVISION_1 = 1;
		public const uint32 NDIS_GFP_WILDCARD_MATCH_PROFILE_REVISION_1 = 1;
		public const uint32 NDIS_GFP_HEADER_GROUP_WILDCARD_MATCH_IS_TTL_ONE = 1;
		public const uint32 NDIS_GFP_HEADER_GROUP_WILDCARD_MATCH_REVISION_1 = 1;
		public const uint32 NDIS_PD_CAPS_RECEIVE_FILTER_COUNTERS_SUPPORTED = 1;
		public const uint32 NDIS_PD_CAPS_DRAIN_NOTIFICATIONS_SUPPORTED = 2;
		public const uint32 NDIS_PD_CAPS_NOTIFICATION_MODERATION_INTERVAL_SUPPORTED = 4;
		public const uint32 NDIS_PD_CAPS_NOTIFICATION_MODERATION_COUNT_SUPPORTED = 8;
		public const uint32 NDIS_PD_CAPABILITIES_REVISION_1 = 1;
		public const uint32 NDIS_PD_CONFIG_REVISION_1 = 1;
		public const uint32 NDIS_GFT_UNDEFINED_FLOW_ENTRY_ID = 0;
		public const uint32 NDIS_GFT_UNDEFINED_TABLE_ID = 0;
		public const uint32 NDIS_GFT_TABLE_INCLUDE_EXTERNAL_VPPORT = 1;
		public const uint32 NDIS_GFT_TABLE_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_GFT_TABLE_INFO_REVISION_1 = 1;
		public const uint32 NDIS_GFT_TABLE_INFO_ARRAY_REVISION_1 = 1;
		public const uint32 NDIS_GFT_DELETE_TABLE_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_GFT_UNDEFINED_COUNTER_ID = 0;
		public const uint32 NDIS_GFT_MAX_COUNTER_OBJECTS_PER_FLOW_ENTRY = 8;
		public const uint32 NDIS_GFT_COUNTER_PARAMETERS_CLIENT_SPECIFIED_ADDRESS = 1;
		public const uint32 NDIS_GFT_COUNTER_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_GFT_FREE_COUNTER_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_GFT_COUNTER_INFO_REVISION_1 = 1;
		public const uint32 NDIS_GFT_COUNTER_INFO_ARRAY_REVISION_1 = 1;
		public const uint32 NDIS_GFT_COUNTER_VALUE_ARRAY_UPDATE_MEMORY_MAPPED_COUNTERS = 1;
		public const uint32 NDIS_GFT_COUNTER_VALUE_ARRAY_GET_VALUES = 2;
		public const uint32 NDIS_GFT_COUNTER_VALUE_ARRAY_REVISION_1 = 1;
		public const uint32 NDIS_GFT_STATISTICS_REVISION_1 = 1;
		public const uint32 NDIS_GFT_HEADER_GROUP_TRANSPOSITION_PROFILE_DECREMENT_TTL_IF_NOT_ONE = 1;
		public const uint32 NDIS_GFT_HEADER_GROUP_TRANSPOSITION_PROFILE_REVISION_1 = 1;
		public const uint32 NDIS_GFT_UNDEFINED_CUSTOM_ACTION = 0;
		public const uint32 NDIS_GFT_RESERVED_CUSTOM_ACTIONS = 256;
		public const uint32 NDIS_GFT_CUSTOM_ACTION_PROFILE_REVISION_1 = 1;
		public const uint32 NDIS_GFT_HTP_REDIRECT_TO_INGRESS_QUEUE_OF_VPORT = 1;
		public const uint32 NDIS_GFT_HTP_REDIRECT_TO_EGRESS_QUEUE_OF_VPORT = 2;
		public const uint32 NDIS_GFT_HTP_REDIRECT_TO_INGRESS_QUEUE_OF_VPORT_IF_TTL_IS_ONE = 4;
		public const uint32 NDIS_GFT_HTP_REDIRECT_TO_EGRESS_QUEUE_OF_VPORT_IF_TTL_IS_ONE = 8;
		public const uint32 NDIS_GFT_HTP_COPY_ALL_PACKETS = 16;
		public const uint32 NDIS_GFT_HTP_COPY_FIRST_PACKET = 32;
		public const uint32 NDIS_GFT_HTP_COPY_WHEN_TCP_FLAG_SET = 64;
		public const uint32 NDIS_GFT_HTP_CUSTOM_ACTION_PRESENT = 128;
		public const uint32 NDIS_GFT_HTP_META_ACTION_BEFORE_HEADER_TRANSPOSITION = 256;
		public const uint32 NDIS_GFT_HEADER_TRANSPOSITION_PROFILE_REVISION_1 = 1;
		public const uint32 NDIS_GFT_HEADER_GROUP_TRANSPOSITION_DECREMENT_TTL_IF_NOT_ONE = 1;
		public const uint32 NDIS_GFT_HEADER_GROUP_TRANSPOSITION_REVISION_1 = 1;
		public const uint32 NDIS_GFT_CUSTOM_ACTION_LAST_ACTION = 1;
		public const uint32 NDIS_GFT_CUSTOM_ACTION_REVISION_1 = 1;
		public const uint32 NDIS_GFT_EMFE_ADD_IN_ACTIVATED_STATE = 1;
		public const uint32 NDIS_GFT_EMFE_MATCH_AND_ACTION_MUST_BE_SUPPORTED = 2;
		public const uint32 NDIS_GFT_EMFE_RDMA_FLOW = 4;
		public const uint32 NDIS_GFT_EMFE_REDIRECT_TO_INGRESS_QUEUE_OF_VPORT = 4096;
		public const uint32 NDIS_GFT_EMFE_REDIRECT_TO_EGRESS_QUEUE_OF_VPORT = 8192;
		public const uint32 NDIS_GFT_EMFE_REDIRECT_TO_INGRESS_QUEUE_OF_VPORT_IF_TTL_IS_ONE = 16384;
		public const uint32 NDIS_GFT_EMFE_REDIRECT_TO_EGRESS_QUEUE_OF_VPORT_IF_TTL_IS_ONE = 32768;
		public const uint32 NDIS_GFT_EMFE_COPY_ALL_PACKETS = 65536;
		public const uint32 NDIS_GFT_EMFE_COPY_FIRST_PACKET = 131072;
		public const uint32 NDIS_GFT_EMFE_COPY_WHEN_TCP_FLAG_SET = 262144;
		public const uint32 NDIS_GFT_EMFE_CUSTOM_ACTION_PRESENT = 524288;
		public const uint32 NDIS_GFT_EMFE_META_ACTION_BEFORE_HEADER_TRANSPOSITION = 1048576;
		public const uint32 NDIS_GFT_EMFE_COPY_AFTER_TCP_FIN_FLAG_SET = 2097152;
		public const uint32 NDIS_GFT_EMFE_COPY_AFTER_TCP_RST_FLAG_SET = 4194304;
		public const uint32 NDIS_GFT_EMFE_COPY_CONDITION_CHANGED = 16777216;
		public const uint32 NDIS_GFT_EMFE_ALL_VPORT_FLOW_ENTRIES = 33554432;
		public const uint32 NDIS_GFT_EMFE_COUNTER_ALLOCATE = 1;
		public const uint32 NDIS_GFT_EMFE_COUNTER_MEMORY_MAPPED = 2;
		public const uint32 NDIS_GFT_EMFE_COUNTER_CLIENT_SPECIFIED_ADDRESS = 4;
		public const uint32 NDIS_GFT_EMFE_COUNTER_TRACK_TCP_FLOW = 8;
		public const uint32 NDIS_GFT_EXACT_MATCH_FLOW_ENTRY_REVISION_1 = 1;
		public const uint32 NDIS_GFT_WCFE_ADD_IN_ACTIVATED_STATE = 1;
		public const uint32 NDIS_GFT_WCFE_REDIRECT_TO_INGRESS_QUEUE_OF_VPORT = 2;
		public const uint32 NDIS_GFT_WCFE_REDIRECT_TO_EGRESS_QUEUE_OF_VPORT = 4;
		public const uint32 NDIS_GFT_WCFE_REDIRECT_TO_INGRESS_QUEUE_OF_VPORT_IF_TTL_IS_ONE = 8;
		public const uint32 NDIS_GFT_WCFE_REDIRECT_TO_EGRESS_QUEUE_OF_VPORT_IF_TTL_IS_ONE = 16;
		public const uint32 NDIS_GFT_WCFE_COPY_ALL_PACKETS = 32;
		public const uint32 NDIS_GFT_WCFE_CUSTOM_ACTION_PRESENT = 64;
		public const uint32 NDIS_GFT_WCFE_COUNTER_ALLOCATE = 1;
		public const uint32 NDIS_GFT_WCFE_COUNTER_MEMORY_MAPPED = 2;
		public const uint32 NDIS_GFT_WCFE_COUNTER_CLIENT_SPECIFIED_ADDRESS = 4;
		public const uint32 NDIS_GFT_WILDCARD_MATCH_FLOW_ENTRY_REVISION_1 = 1;
		public const uint32 NDIS_GFT_PROFILE_INFO_REVISION_1 = 1;
		public const uint32 NDIS_GFT_PROFILE_INFO_ARRAY_REVISION_1 = 1;
		public const uint32 NDIS_GFT_DELETE_PROFILE_ALL_PROFILES = 1;
		public const uint32 NDIS_GFT_DELETE_PROFILE_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_GFT_FLOW_ENTRY_ARRAY_REVISION_1 = 1;
		public const uint32 NDIS_GFT_FLOW_ENTRY_INFO_ALL_FLOW_ENTRIES = 1;
		public const uint32 NDIS_GFT_FLOW_ENTRY_INFO_ARRAY_REVISION_1 = 1;
		public const uint32 NDIS_GFT_FLOW_ENTRY_ID_ALL_NIC_SWITCH_FLOW_ENTRIES = 1;
		public const uint32 NDIS_GFT_FLOW_ENTRY_ID_ALL_TABLE_FLOW_ENTRIES = 2;
		public const uint32 NDIS_GFT_FLOW_ENTRY_ID_ALL_VPORT_FLOW_ENTRIES = 4;
		public const uint32 NDIS_GFT_FLOW_ENTRY_ID_RANGE_DEFINED = 8;
		public const uint32 NDIS_GFT_FLOW_ENTRY_ID_ARRAY_DEFINED = 16;
		public const uint32 NDIS_GFT_FLOW_ENTRY_ID_ARRAY_COUNTER_VALUES = 65536;
		public const uint32 NDIS_GFT_FLOW_ENTRY_ID_ARRAY_REVISION_1 = 1;
		public const uint32 NDIS_GFT_OFFLOAD_PARAMETERS_ENABLE_OFFLOAD = 1;
		public const uint32 NDIS_GFT_OFFLOAD_PARAMETERS_CUSTOM_PROVIDER_RESERVED = 4278190080;
		public const uint32 NDIS_GFT_OFFLOAD_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_ADD_FLOW_ENTRY_DEACTIVATED_PREFERRED = 1;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_RATE_LIMITING_QUEUE_SUPPORTED = 2;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_MEMORY_MAPPED_COUNTERS = 1;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_MEMORY_MAPPED_PAKCET_AND_BYTE_COUNTERS = 2;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_PER_FLOW_ENTRY_COUNTERS = 4;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_PER_PACKET_COUNTER_UPDATE = 8;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_CLIENT_SPECIFIED_MEMORY_MAPPED_COUNTERS = 16;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_INGRESS_AGGREGATE_COUNTERS = 32;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_EGRESS_AGGREGATE_COUNTERS = 64;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_TRACK_TCP_FLOW_STATE = 128;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_COMBINED_COUNTER_AND_STATE = 256;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_INGRESS_WILDCARD_MATCH = 1;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_EGRESS_WILDCARD_MATCH = 2;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_INGRESS_EXACT_MATCH = 4;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_EGRESS_EXACT_MATCH = 8;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_EXT_VPORT_INGRESS_WILDCARD_MATCH = 16;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_EXT_VPORT_EGRESS_WILDCARD_MATCH = 32;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_EXT_VPORT_INGRESS_EXACT_MATCH = 64;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_EXT_VPORT_EGRESS_EXACT_MATCH = 128;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_POP = 1;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_PUSH = 2;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_MODIFY = 4;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_IGNORE_ACTION_SUPPORTED = 8;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_REDIRECT_TO_INGRESS_QUEUE_OF_VPORT = 16;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_REDIRECT_TO_EGRESS_QUEUE_OF_VPORT = 32;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_REDIRECT_TO_INGRESS_QUEUE_OF_VPORT_IF_TTL_IS_ONE = 64;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_REDIRECT_TO_EGRESS_QUEUE_OF_VPORT_IF_TTL_IS_ONE = 128;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_COPY_ALL = 256;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_COPY_FIRST = 512;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_COPY_WHEN_TCP_FLAG_SET = 1024;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_SAMPLE = 2048;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_META_ACTION_BEFORE_HEADER_TRANSPOSITION = 4096;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_META_ACTION_AFTER_HEADER_TRANSPOSITION = 8192;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_PER_VPORT_EXCEPTION_VPORT = 16384;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_DESIGNATED_EXCEPTION_VPORT = 32768;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_DSCP_MASK = 65536;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_8021P_PRIORITY_MASK = 131072;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_ALLOW = 262144;
		public const uint32 NDIS_GFT_OFFLOAD_CAPS_DROP = 524288;
		public const uint32 NDIS_GFT_OFFLOAD_CAPABILITIES_REVISION_1 = 1;
		public const uint32 NDIS_GFT_VPORT_ENABLE = 1;
		public const uint32 NDIS_GFT_VPORT_PARSE_VXLAN = 2;
		public const uint32 NDIS_GFT_VPORT_PARSE_VXLAN_NOT_IN_SRC_PORT_RANGE = 4;
		public const uint32 NDIS_GFT_VPORT_ENABLE_STATE_CHANGED = 1048576;
		public const uint32 NDIS_GFT_VPORT_EXCEPTION_VPORT_CHANGED = 2097152;
		public const uint32 NDIS_GFT_VPORT_SAMPLING_RATE_CHANGED = 4194304;
		public const uint32 NDIS_GFT_VPORT_DSCP_MASK_CHANGED = 8388608;
		public const uint32 NDIS_GFT_VPORT_PRIORITY_MASK_CHANGED = 16777216;
		public const uint32 NDIS_GFT_VPORT_VXLAN_SETTINGS_CHANGED = 33554432;
		public const uint32 NDIS_GFT_VPORT_DSCP_FLAGS_CHANGED = 67108864;
		public const uint32 NDIS_GFT_VPORT_PARAMS_CHANGE_MASK = 4293918720;
		public const uint32 NDIS_GFT_VPORT_PARAMS_CUSTOM_PROVIDER_RESERVED = 1044480;
		public const uint32 NDIS_GFT_VPORT_MAX_DSCP_MASK_COUNTER_OBJECTS = 64;
		public const uint32 NDIS_GFT_VPORT_MAX_PRIORITY_MASK_COUNTER_OBJECTS = 8;
		public const uint32 NDIS_GFT_VPORT_DSCP_GUARD_ENABLE_RX = 1;
		public const uint32 NDIS_GFT_VPORT_DSCP_GUARD_ENABLE_TX = 2;
		public const uint32 NDIS_GFT_VPORT_DSCP_MASK_ENABLE_RX = 4;
		public const uint32 NDIS_GFT_VPORT_DSCP_MASK_ENABLE_TX = 8;
		public const uint32 NDIS_GFT_VPORT_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_QOS_DEFAULT_SQ_ID = 0;
		public const uint32 NDIS_QOS_SQ_PARAMETERS_REVISION_1 = 1;
		public const uint32 NDIS_QOS_SQ_PARAMETERS_REVISION_2 = 2;
		public const uint32 NDIS_QOS_SQ_TRANSMIT_CAP_ENABLED = 1;
		public const uint32 NDIS_QOS_SQ_TRANSMIT_RESERVATION_ENABLED = 2;
		public const uint32 NDIS_QOS_SQ_RECEIVE_CAP_ENABLED = 4;
		public const uint32 NDIS_QOS_SQ_PARAMETERS_ARRAY_REVISION_1 = 1;
		public const uint32 NDIS_QOS_SQ_ARRAY_REVISION_1 = 1;
		public const uint32 NDIS_QOS_OFFLOAD_CAPABILITIES_REVISION_1 = 1;
		public const uint32 NDIS_QOS_OFFLOAD_CAPABILITIES_REVISION_2 = 2;
		public const uint32 NDIS_QOS_OFFLOAD_CAPS_STANDARD_SQ = 1;
		public const uint32 NDIS_QOS_OFFLOAD_CAPS_GFT_SQ = 2;
		public const uint32 NDIS_QOS_SQ_STATS_REVISION_1 = 1;
		public const uint32 NDIS_TIMESTAMP_CAPABILITIES_REVISION_1 = 1;
		public const uint32 OID_TIMESTAMP_CAPABILITY = 10485761;
		public const uint32 OID_TIMESTAMP_CURRENT_CONFIG = 10485762;
		public const uint32 NDIS_HARDWARE_CROSSTIMESTAMP_REVISION_1 = 1;
		public const uint32 OID_TIMESTAMP_GET_CROSSTIMESTAMP = 10485763;
		public const uint32 NdisHashFunctionToeplitz = 1;
		public const uint32 NdisHashFunctionReserved1 = 2;
		public const uint32 NdisHashFunctionReserved2 = 4;
		public const uint32 NdisHashFunctionReserved3 = 8;
		public const uint32 NDIS_HASH_FUNCTION_MASK = 255;
		public const uint32 NDIS_HASH_TYPE_MASK = 16776960;
		public const uint32 NDIS_HASH_IPV4 = 256;
		public const uint32 NDIS_HASH_TCP_IPV4 = 512;
		public const uint32 NDIS_HASH_IPV6 = 1024;
		public const uint32 NDIS_HASH_IPV6_EX = 2048;
		public const uint32 NDIS_HASH_TCP_IPV6 = 4096;
		public const uint32 NDIS_HASH_TCP_IPV6_EX = 8192;
		public const uint32 NDIS_HASH_UDP_IPV4 = 16384;
		public const uint32 NDIS_HASH_UDP_IPV6 = 32768;
		public const uint32 NDIS_HASH_UDP_IPV6_EX = 65536;
		public const uint32 NDIS_MAXIMUM_PORTS = 16777216;
		public const uint32 NDIS_OBJECT_REVISION_1 = 1;
		public const uint32 NDIS_OFFLOAD_NOT_SUPPORTED = 0;
		public const uint32 NDIS_OFFLOAD_SUPPORTED = 1;
		public const uint32 NDIS_OFFLOAD_SET_NO_CHANGE = 0;
		public const uint32 NDIS_OFFLOAD_SET_ON = 1;
		public const uint32 NDIS_OFFLOAD_SET_OFF = 2;
		public const uint32 NDIS_ENCAPSULATION_NOT_SUPPORTED = 0;
		public const uint32 NDIS_ENCAPSULATION_NULL = 1;
		public const uint32 NDIS_ENCAPSULATION_IEEE_802_3 = 2;
		public const uint32 NDIS_ENCAPSULATION_IEEE_802_3_P_AND_Q = 4;
		public const uint32 NDIS_ENCAPSULATION_IEEE_802_3_P_AND_Q_IN_OOB = 8;
		public const uint32 NDIS_ENCAPSULATION_IEEE_LLC_SNAP_ROUTED = 16;
		public const uint32 NDIS_OBJECT_TYPE_OID_REQUEST = 150;
		public const uint32 NDIS_SUPPORT_NDIS686 = 1;
		public const uint32 NDIS_SUPPORT_NDIS685 = 1;
		public const uint32 NDIS_SUPPORT_NDIS684 = 1;
		public const uint32 NDIS_SUPPORT_NDIS683 = 1;
		public const uint32 NDIS_SUPPORT_NDIS682 = 1;
		public const uint32 NDIS_SUPPORT_NDIS681 = 1;
		public const uint32 NDIS_SUPPORT_NDIS680 = 1;
		public const uint32 NDIS_SUPPORT_NDIS670 = 1;
		public const uint32 NDIS_SUPPORT_NDIS660 = 1;
		public const uint32 NDIS_SUPPORT_NDIS651 = 1;
		public const uint32 NDIS_SUPPORT_NDIS650 = 1;
		public const uint32 NDIS_SUPPORT_NDIS640 = 1;
		public const uint32 NDIS_SUPPORT_NDIS630 = 1;
		public const uint32 NDIS_SUPPORT_NDIS620 = 1;
		public const uint32 NDIS_SUPPORT_NDIS61 = 1;
		public const uint32 NDIS_SUPPORT_NDIS6 = 1;
		public const Guid GUID_NDIS_LAN_CLASS = .(0xad498944, 0x762f, 0x11d0, 0x8d, 0xcb, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_DEVINTERFACE_NET = .(0xcac88484, 0x7515, 0x4c03, 0x82, 0xe6, 0x71, 0xa8, 0x7a, 0xba, 0xc3, 0x61);
		public const Guid UNSPECIFIED_NETWORK_GUID = .(0x12ba5bde, 0x143e, 0x4c0d, 0xb6, 0x6d, 0x23, 0x79, 0xbb, 0x14, 0x19, 0x13);
		public const Guid GUID_DEVINTERFACE_NETUIO = .(0x08336f60, 0x0679, 0x4c6c, 0x85, 0xd2, 0xae, 0x7c, 0xed, 0x65, 0xff, 0xf7);
		public const Guid GUID_NDIS_ENUMERATE_ADAPTER = .(0x981f2d7f, 0xb1f3, 0x11d0, 0x8d, 0xd7, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_NOTIFY_ADAPTER_REMOVAL = .(0x981f2d80, 0xb1f3, 0x11d0, 0x8d, 0xd7, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_NOTIFY_ADAPTER_ARRIVAL = .(0x981f2d81, 0xb1f3, 0x11d0, 0x8d, 0xd7, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_ENUMERATE_VC = .(0x981f2d82, 0xb1f3, 0x11d0, 0x8d, 0xd7, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_NOTIFY_VC_REMOVAL = .(0x981f2d79, 0xb1f3, 0x11d0, 0x8d, 0xd7, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_NOTIFY_VC_ARRIVAL = .(0x182f9e0c, 0xb1f3, 0x11d0, 0x8d, 0xd7, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_NOTIFY_BIND = .(0x5413531c, 0xb1f3, 0x11d0, 0x8d, 0xd7, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_NOTIFY_UNBIND = .(0x6e3ce1ec, 0xb1f3, 0x11d0, 0x8d, 0xd7, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_WAKE_ON_MAGIC_PACKET_ONLY = .(0xa14f1c97, 0x8839, 0x4f8a, 0x99, 0x96, 0xa2, 0x89, 0x96, 0xeb, 0xbf, 0x1d);
		public const Guid GUID_NDIS_NOTIFY_DEVICE_POWER_ON = .(0x5f81cfd0, 0xf046, 0x4342, 0xaf, 0x61, 0x89, 0x5a, 0xce, 0xda, 0xef, 0xd9);
		public const Guid GUID_NDIS_NOTIFY_DEVICE_POWER_OFF = .(0x81bc8189, 0xb026, 0x46ab, 0xb9, 0x64, 0xf1, 0x82, 0xe3, 0x42, 0x93, 0x4e);
		public const Guid GUID_NDIS_NOTIFY_FILTER_REMOVAL = .(0x1f177cd9, 0x5955, 0x4721, 0x9f, 0x6a, 0x78, 0xeb, 0xdf, 0xae, 0xf8, 0x89);
		public const Guid GUID_NDIS_NOTIFY_FILTER_ARRIVAL = .(0x0b6d3c89, 0x5917, 0x43ca, 0xb5, 0x78, 0xd0, 0x1a, 0x79, 0x67, 0xc4, 0x1c);
		public const Guid GUID_NDIS_NOTIFY_DEVICE_POWER_ON_EX = .(0x2b440188, 0x92ac, 0x4f60, 0x9b, 0x2d, 0x20, 0xa3, 0x0c, 0xbb, 0x6b, 0xbe);
		public const Guid GUID_NDIS_NOTIFY_DEVICE_POWER_OFF_EX = .(0x4159353c, 0x5cd7, 0x42ce, 0x8f, 0xe4, 0xa4, 0x5a, 0x23, 0x80, 0xcc, 0x4f);
		public const Guid GUID_NDIS_PM_ADMIN_CONFIG = .(0x1528d111, 0x708a, 0x4ca4, 0x92, 0x15, 0xc0, 0x57, 0x71, 0x16, 0x1c, 0xda);
		public const Guid GUID_NDIS_PM_ACTIVE_CAPABILITIES = .(0xb2cf76e3, 0xb3ae, 0x4394, 0xa0, 0x1f, 0x33, 0x8c, 0x98, 0x70, 0xe9, 0x39);
		public const Guid GUID_NDIS_RSS_ENABLED = .(0x9565cd55, 0x3402, 0x4e32, 0xa5, 0xb6, 0x2f, 0x14, 0x3f, 0x2f, 0x2c, 0x30);
		public const Guid GUID_NDIS_GEN_HARDWARE_STATUS = .(0x5ec10354, 0xa61a, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_MEDIA_SUPPORTED = .(0x5ec10355, 0xa61a, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_MEDIA_IN_USE = .(0x5ec10356, 0xa61a, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_MAXIMUM_LOOKAHEAD = .(0x5ec10357, 0xa61a, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_MAXIMUM_FRAME_SIZE = .(0x5ec10358, 0xa61a, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_LINK_SPEED = .(0x5ec10359, 0xa61a, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_TRANSMIT_BUFFER_SPACE = .(0x5ec1035a, 0xa61a, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_RECEIVE_BUFFER_SPACE = .(0x5ec1035b, 0xa61a, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_TRANSMIT_BLOCK_SIZE = .(0x5ec1035c, 0xa61a, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_RECEIVE_BLOCK_SIZE = .(0x5ec1035d, 0xa61a, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_VENDOR_ID = .(0x5ec1035e, 0xa61a, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_VENDOR_DESCRIPTION = .(0x5ec1035f, 0xa61a, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_CURRENT_PACKET_FILTER = .(0x5ec10360, 0xa61a, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_CURRENT_LOOKAHEAD = .(0x5ec10361, 0xa61a, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_DRIVER_VERSION = .(0x5ec10362, 0xa61a, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_MAXIMUM_TOTAL_SIZE = .(0x5ec10363, 0xa61a, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_MAC_OPTIONS = .(0x5ec10365, 0xa61a, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_MEDIA_CONNECT_STATUS = .(0x5ec10366, 0xa61a, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_MAXIMUM_SEND_PACKETS = .(0x5ec10367, 0xa61a, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_VENDOR_DRIVER_VERSION = .(0x447956f9, 0xa61b, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_VLAN_ID = .(0x765dc702, 0xc5e8, 0x4b67, 0x84, 0x3b, 0x3f, 0x5a, 0x4f, 0xf2, 0x64, 0x8b);
		public const Guid GUID_NDIS_GEN_PHYSICAL_MEDIUM = .(0x418ca16d, 0x3937, 0x4208, 0x94, 0x0a, 0xec, 0x61, 0x96, 0x27, 0x80, 0x85);
		public const Guid GUID_NDIS_TCP_OFFLOAD_CURRENT_CONFIG = .(0x68542fed, 0x5c74, 0x461e, 0x89, 0x34, 0x91, 0xc6, 0xf9, 0xc6, 0x09, 0x60);
		public const Guid GUID_NDIS_TCP_OFFLOAD_HARDWARE_CAPABILITIES = .(0xcd5f1102, 0x590f, 0x4ada, 0xab, 0x65, 0x5b, 0x31, 0xb1, 0xdc, 0x01, 0x72);
		public const Guid GUID_NDIS_TCP_OFFLOAD_PARAMETERS = .(0x8ead9a22, 0x7f69, 0x4bc6, 0x94, 0x9a, 0xc8, 0x18, 0x7b, 0x07, 0x4e, 0x61);
		public const Guid GUID_NDIS_TCP_CONNECTION_OFFLOAD_CURRENT_CONFIG = .(0x2ee6aef1, 0x0851, 0x458b, 0xbf, 0x0d, 0x79, 0x23, 0x43, 0xd1, 0xcd, 0xe1);
		public const Guid GUID_NDIS_TCP_CONNECTION_OFFLOAD_HARDWARE_CAPABILITIES = .(0x8ce71f2c, 0xd63a, 0x4390, 0xa4, 0x87, 0x18, 0xfa, 0x47, 0x26, 0x2c, 0xeb);
		public const Guid GUID_NDIS_RECEIVE_SCALE_CAPABILITIES = .(0x26c28774, 0x4252, 0x48fe, 0xa6, 0x10, 0xa5, 0x8a, 0x39, 0x8c, 0x0e, 0xb1);
		public const Guid GUID_NDIS_GEN_LINK_STATE = .(0xba1f4c14, 0xa945, 0x4762, 0xb9, 0x16, 0x0b, 0x55, 0x15, 0xb6, 0xf4, 0x3a);
		public const Guid GUID_NDIS_GEN_LINK_PARAMETERS = .(0x8c7d3579, 0x252b, 0x4614, 0x82, 0xc5, 0xa6, 0x50, 0xda, 0xa1, 0x50, 0x49);
		public const Guid GUID_NDIS_GEN_STATISTICS = .(0x368c45b5, 0xc129, 0x43c1, 0x93, 0x9e, 0x7e, 0xdc, 0x2d, 0x7f, 0xe6, 0x21);
		public const Guid GUID_NDIS_GEN_PORT_STATE = .(0x6fbf2a5f, 0x8b8f, 0x4920, 0x81, 0x43, 0xe6, 0xc4, 0x60, 0xf5, 0x25, 0x24);
		public const Guid GUID_NDIS_GEN_ENUMERATE_PORTS = .(0xf1d6abe8, 0x15e4, 0x4407, 0x81, 0xb7, 0x6b, 0x83, 0x0c, 0x77, 0x7c, 0xd9);
		public const Guid GUID_NDIS_ENUMERATE_ADAPTERS_EX = .(0x16716917, 0x4306, 0x4be4, 0x9b, 0x5a, 0x38, 0x09, 0xae, 0x44, 0xb1, 0x25);
		public const Guid GUID_NDIS_GEN_PORT_AUTHENTICATION_PARAMETERS = .(0xaab6ac31, 0x86fb, 0x48fb, 0x8b, 0x48, 0x63, 0xdb, 0x23, 0x5a, 0xce, 0x16);
		public const Guid GUID_NDIS_GEN_INTERRUPT_MODERATION = .(0xd9c8eea5, 0xf16e, 0x467c, 0x84, 0xd5, 0x63, 0x45, 0xa2, 0x2c, 0xe2, 0x13);
		public const Guid GUID_NDIS_GEN_INTERRUPT_MODERATION_PARAMETERS = .(0xd789adfa, 0x9c56, 0x433b, 0xad, 0x01, 0x75, 0x74, 0xf3, 0xce, 0xdb, 0xe9);
		public const Guid GUID_NDIS_GEN_PCI_DEVICE_CUSTOM_PROPERTIES = .(0xaa39f5ab, 0xe260, 0x4d01, 0x82, 0xb0, 0xb7, 0x37, 0xc8, 0x80, 0xea, 0x05);
		public const Guid GUID_NDIS_GEN_PHYSICAL_MEDIUM_EX = .(0x899e7782, 0x035b, 0x43f9, 0x8b, 0xb6, 0x2b, 0x58, 0x97, 0x16, 0x12, 0xe5);
		public const Guid GUID_NDIS_HD_SPLIT_CURRENT_CONFIG = .(0x81d1303c, 0xab00, 0x4e49, 0x80, 0xb1, 0x5e, 0x6e, 0x0b, 0xf9, 0xbe, 0x53);
		public const Guid GUID_NDIS_HD_SPLIT_PARAMETERS = .(0x8c048bea, 0x2913, 0x4458, 0xb6, 0x8e, 0x17, 0xf6, 0xc1, 0xe5, 0xc6, 0x0e);
		public const Guid GUID_NDIS_TCP_RSC_STATISTICS = .(0x83104445, 0x9b5d, 0x4ee6, 0xa2, 0xa5, 0x2b, 0xd3, 0xfb, 0x3c, 0x36, 0xaf);
		public const Guid GUID_PM_HARDWARE_CAPABILITIES = .(0xece5360d, 0x3291, 0x4a6e, 0x80, 0x44, 0x00, 0x51, 0x1f, 0xed, 0x27, 0xee);
		public const Guid GUID_PM_CURRENT_CAPABILITIES = .(0x3abdbd14, 0xd44a, 0x4a3f, 0x9a, 0x63, 0xa0, 0xa4, 0x2a, 0x51, 0xb1, 0x31);
		public const Guid GUID_PM_PARAMETERS = .(0x560245d2, 0xe251, 0x409c, 0xa2, 0x80, 0x31, 0x19, 0x35, 0xbe, 0x3b, 0x28);
		public const Guid GUID_PM_ADD_WOL_PATTERN = .(0x6fc83ba7, 0x52bc, 0x4faa, 0xac, 0x51, 0x7d, 0x2f, 0xfe, 0x63, 0xba, 0x90);
		public const Guid GUID_PM_REMOVE_WOL_PATTERN = .(0xa037a915, 0xc6ca, 0x4322, 0xb3, 0xe3, 0xef, 0x75, 0x4e, 0xc4, 0x98, 0xdc);
		public const Guid GUID_PM_WOL_PATTERN_LIST = .(0x4022be37, 0x7ee2, 0x47be, 0xa5, 0xa5, 0x05, 0x0f, 0xc7, 0x9a, 0xfc, 0x75);
		public const Guid GUID_PM_ADD_PROTOCOL_OFFLOAD = .(0x0c06c112, 0x0d93, 0x439b, 0x9e, 0x6d, 0x26, 0xbe, 0x13, 0x0c, 0x97, 0x84);
		public const Guid GUID_PM_GET_PROTOCOL_OFFLOAD = .(0xa6435cd9, 0x149f, 0x498e, 0x95, 0x1b, 0x2d, 0x94, 0xbe, 0xa3, 0xe3, 0xa3);
		public const Guid GUID_PM_REMOVE_PROTOCOL_OFFLOAD = .(0xdecd7be2, 0xa6b0, 0x43ca, 0xae, 0x45, 0xd0, 0x00, 0xd2, 0x0e, 0x52, 0x65);
		public const Guid GUID_PM_PROTOCOL_OFFLOAD_LIST = .(0x736ec5ab, 0xca8f, 0x4043, 0xbb, 0x58, 0xda, 0x40, 0x2a, 0x48, 0xd9, 0xcc);
		public const Guid GUID_NDIS_RECEIVE_FILTER_HARDWARE_CAPABILITIES = .(0x3f2c1419, 0x83bc, 0x11dd, 0x94, 0xb8, 0x00, 0x1d, 0x09, 0x16, 0x2b, 0xc3);
		public const Guid GUID_NDIS_RECEIVE_FILTER_GLOBAL_PARAMETERS = .(0x3f2c141a, 0x83bc, 0x11dd, 0x94, 0xb8, 0x00, 0x1d, 0x09, 0x16, 0x2b, 0xc3);
		public const Guid GUID_NDIS_RECEIVE_FILTER_ENUM_QUEUES = .(0x3f2c141b, 0x83bc, 0x11dd, 0x94, 0xb8, 0x00, 0x1d, 0x09, 0x16, 0x2b, 0xc3);
		public const Guid GUID_NDIS_RECEIVE_FILTER_QUEUE_PARAMETERS = .(0x3f2c141c, 0x83bc, 0x11dd, 0x94, 0xb8, 0x00, 0x1d, 0x09, 0x16, 0x2b, 0xc3);
		public const Guid GUID_NDIS_RECEIVE_FILTER_ENUM_FILTERS = .(0x3f2c141d, 0x83bc, 0x11dd, 0x94, 0xb8, 0x00, 0x1d, 0x09, 0x16, 0x2b, 0xc3);
		public const Guid GUID_NDIS_RECEIVE_FILTER_PARAMETERS = .(0x3f2c141e, 0x83bc, 0x11dd, 0x94, 0xb8, 0x00, 0x1d, 0x09, 0x16, 0x2b, 0xc3);
		public const Guid GUID_RECEIVE_FILTER_CURRENT_CAPABILITIES = .(0x4054e80f, 0x2bc1, 0x4ccc, 0xb0, 0x33, 0x4a, 0xbc, 0x0c, 0x4a, 0x1e, 0x8c);
		public const Guid GUID_NIC_SWITCH_HARDWARE_CAPABILITIES = .(0x37cab40c, 0xd1e8, 0x4301, 0x8c, 0x1d, 0x58, 0x46, 0x5e, 0x0c, 0x4c, 0x0f);
		public const Guid GUID_NIC_SWITCH_CURRENT_CAPABILITIES = .(0xe76fdaf3, 0x0be7, 0x4d95, 0x87, 0xe9, 0x5a, 0xea, 0xd4, 0xb5, 0x90, 0xe9);
		public const Guid GUID_NDIS_SWITCH_MICROSOFT_VENDOR_ID = .(0x202547fe, 0x1c9c, 0x40b9, 0xbb, 0xa1, 0x08, 0xad, 0xa1, 0xf9, 0x8b, 0x3c);
		public const Guid GUID_NDIS_SWITCH_PORT_PROPERTY_PROFILE_ID_DEFAULT_EXTERNAL_NIC = .(0x0b347846, 0x0a0c, 0x470a, 0x9b, 0x7a, 0x0d, 0x96, 0x58, 0x50, 0x69, 0x8f);
		public const Guid GUID_NDIS_GEN_XMIT_OK = .(0x447956fa, 0xa61b, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_RCV_OK = .(0x447956fb, 0xa61b, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_XMIT_ERROR = .(0x447956fc, 0xa61b, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_RCV_ERROR = .(0x447956fd, 0xa61b, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_RCV_NO_BUFFER = .(0x447956fe, 0xa61b, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_CO_HARDWARE_STATUS = .(0x791ad192, 0xe35c, 0x11d0, 0x96, 0x92, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_CO_MEDIA_SUPPORTED = .(0x791ad193, 0xe35c, 0x11d0, 0x96, 0x92, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_CO_MEDIA_IN_USE = .(0x791ad194, 0xe35c, 0x11d0, 0x96, 0x92, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_CO_LINK_SPEED = .(0x791ad195, 0xe35c, 0x11d0, 0x96, 0x92, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_CO_VENDOR_ID = .(0x791ad196, 0xe35c, 0x11d0, 0x96, 0x92, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_CO_VENDOR_DESCRIPTION = .(0x791ad197, 0xe35c, 0x11d0, 0x96, 0x92, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_CO_DRIVER_VERSION = .(0x791ad198, 0xe35c, 0x11d0, 0x96, 0x92, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_CO_MAC_OPTIONS = .(0x791ad19a, 0xe35c, 0x11d0, 0x96, 0x92, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_CO_MEDIA_CONNECT_STATUS = .(0x791ad19b, 0xe35c, 0x11d0, 0x96, 0x92, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_CO_VENDOR_DRIVER_VERSION = .(0x791ad19c, 0xe35c, 0x11d0, 0x96, 0x92, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_CO_MINIMUM_LINK_SPEED = .(0x791ad19d, 0xe35c, 0x11d0, 0x96, 0x92, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_CO_XMIT_PDUS_OK = .(0x0a214805, 0xe35f, 0x11d0, 0x96, 0x92, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_CO_RCV_PDUS_OK = .(0x0a214806, 0xe35f, 0x11d0, 0x96, 0x92, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_CO_XMIT_PDUS_ERROR = .(0x0a214807, 0xe35f, 0x11d0, 0x96, 0x92, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_CO_RCV_PDUS_ERROR = .(0x0a214808, 0xe35f, 0x11d0, 0x96, 0x92, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_GEN_CO_RCV_PDUS_NO_BUFFER = .(0x0a214809, 0xe35f, 0x11d0, 0x96, 0x92, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_802_3_PERMANENT_ADDRESS = .(0x447956ff, 0xa61b, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_802_3_CURRENT_ADDRESS = .(0x44795700, 0xa61b, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_802_3_MULTICAST_LIST = .(0x44795701, 0xa61b, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_802_3_MAXIMUM_LIST_SIZE = .(0x44795702, 0xa61b, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_802_3_MAC_OPTIONS = .(0x44795703, 0xa61b, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_802_3_RCV_ERROR_ALIGNMENT = .(0x44795704, 0xa61b, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_802_3_XMIT_ONE_COLLISION = .(0x44795705, 0xa61b, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_802_3_XMIT_MORE_COLLISIONS = .(0x44795706, 0xa61b, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_802_5_PERMANENT_ADDRESS = .(0x44795707, 0xa61b, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_802_5_CURRENT_ADDRESS = .(0x44795708, 0xa61b, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_802_5_CURRENT_FUNCTIONAL = .(0x44795709, 0xa61b, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_802_5_CURRENT_GROUP = .(0x4479570a, 0xa61b, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_802_5_LAST_OPEN_STATUS = .(0x4479570b, 0xa61b, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_802_5_CURRENT_RING_STATUS = .(0x890a36ec, 0xa61c, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_802_5_CURRENT_RING_STATE = .(0xacf14032, 0xa61c, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_802_5_LINE_ERRORS = .(0xacf14033, 0xa61c, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_802_5_LOST_FRAMES = .(0xacf14034, 0xa61c, 0x11d0, 0x8d, 0xd4, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_802_11_BSSID = .(0x2504b6c2, 0x1fa5, 0x11d4, 0x97, 0xeb, 0x00, 0xc0, 0x4f, 0x79, 0xc4, 0x03);
		public const Guid GUID_NDIS_802_11_SSID = .(0x7d2a90ea, 0x2041, 0x11d4, 0x97, 0xeb, 0x00, 0xc0, 0x4f, 0x79, 0xc4, 0x03);
		public const Guid GUID_NDIS_802_11_NETWORK_TYPES_SUPPORTED = .(0x8531d6e6, 0x2041, 0x11d4, 0x97, 0xeb, 0x00, 0xc0, 0x4f, 0x79, 0xc4, 0x03);
		public const Guid GUID_NDIS_802_11_NETWORK_TYPE_IN_USE = .(0x857e2326, 0x2041, 0x11d4, 0x97, 0xeb, 0x00, 0xc0, 0x4f, 0x79, 0xc4, 0x03);
		public const Guid GUID_NDIS_802_11_POWER_MODE = .(0x85be837c, 0x2041, 0x11d4, 0x97, 0xeb, 0x00, 0xc0, 0x4f, 0x79, 0xc4, 0x03);
		public const Guid GUID_NDIS_802_11_TX_POWER_LEVEL = .(0x11e6ba76, 0x2053, 0x11d4, 0x97, 0xeb, 0x00, 0xc0, 0x4f, 0x79, 0xc4, 0x03);
		public const Guid GUID_NDIS_802_11_RSSI = .(0x1507db16, 0x2053, 0x11d4, 0x97, 0xeb, 0x00, 0xc0, 0x4f, 0x79, 0xc4, 0x03);
		public const Guid GUID_NDIS_802_11_RSSI_TRIGGER = .(0x155689b8, 0x2053, 0x11d4, 0x97, 0xeb, 0x00, 0xc0, 0x4f, 0x79, 0xc4, 0x03);
		public const Guid GUID_NDIS_802_11_BSSID_LIST = .(0x69526f9a, 0x2062, 0x11d4, 0x97, 0xeb, 0x00, 0xc0, 0x4f, 0x79, 0xc4, 0x03);
		public const Guid GUID_NDIS_802_11_INFRASTRUCTURE_MODE = .(0x697d5a7e, 0x2062, 0x11d4, 0x97, 0xeb, 0x00, 0xc0, 0x4f, 0x79, 0xc4, 0x03);
		public const Guid GUID_NDIS_802_11_FRAGMENTATION_THRESHOLD = .(0x69aaa7c4, 0x2062, 0x11d4, 0x97, 0xeb, 0x00, 0xc0, 0x4f, 0x79, 0xc4, 0x03);
		public const Guid GUID_NDIS_802_11_RTS_THRESHOLD = .(0x0134d07e, 0x2064, 0x11d4, 0x97, 0xeb, 0x00, 0xc0, 0x4f, 0x79, 0xc4, 0x03);
		public const Guid GUID_NDIS_802_11_NUMBER_OF_ANTENNAS = .(0x01779336, 0x2064, 0x11d4, 0x97, 0xeb, 0x00, 0xc0, 0x4f, 0x79, 0xc4, 0x03);
		public const Guid GUID_NDIS_802_11_RX_ANTENNA_SELECTED = .(0x01ac07a2, 0x2064, 0x11d4, 0x97, 0xeb, 0x00, 0xc0, 0x4f, 0x79, 0xc4, 0x03);
		public const Guid GUID_NDIS_802_11_TX_ANTENNA_SELECTED = .(0x01dbb74a, 0x2064, 0x11d4, 0x97, 0xeb, 0x00, 0xc0, 0x4f, 0x79, 0xc4, 0x03);
		public const Guid GUID_NDIS_802_11_SUPPORTED_RATES = .(0x49db8722, 0x2068, 0x11d4, 0x97, 0xeb, 0x00, 0xc0, 0x4f, 0x79, 0xc4, 0x03);
		public const Guid GUID_NDIS_802_11_DESIRED_RATES = .(0x452ee08e, 0x2536, 0x11d4, 0x97, 0xeb, 0x00, 0xc0, 0x4f, 0x79, 0xc4, 0x03);
		public const Guid GUID_NDIS_802_11_CONFIGURATION = .(0x4a4df982, 0x2068, 0x11d4, 0x97, 0xeb, 0x00, 0xc0, 0x4f, 0x79, 0xc4, 0x03);
		public const Guid GUID_NDIS_802_11_STATISTICS = .(0x42bb73b0, 0x2129, 0x11d4, 0x97, 0xeb, 0x00, 0xc0, 0x4f, 0x79, 0xc4, 0x03);
		public const Guid GUID_NDIS_802_11_ADD_WEP = .(0x4307bff0, 0x2129, 0x11d4, 0x97, 0xeb, 0x00, 0xc0, 0x4f, 0x79, 0xc4, 0x03);
		public const Guid GUID_NDIS_802_11_REMOVE_WEP = .(0x433c345c, 0x2129, 0x11d4, 0x97, 0xeb, 0x00, 0xc0, 0x4f, 0x79, 0xc4, 0x03);
		public const Guid GUID_NDIS_802_11_DISASSOCIATE = .(0x43671f40, 0x2129, 0x11d4, 0x97, 0xeb, 0x00, 0xc0, 0x4f, 0x79, 0xc4, 0x03);
		public const Guid GUID_NDIS_802_11_AUTHENTICATION_MODE = .(0x43920a24, 0x2129, 0x11d4, 0x97, 0xeb, 0x00, 0xc0, 0x4f, 0x79, 0xc4, 0x03);
		public const Guid GUID_NDIS_802_11_PRIVACY_FILTER = .(0x6733c4e9, 0x4792, 0x11d4, 0x97, 0xf1, 0x00, 0xc0, 0x4f, 0x79, 0xc4, 0x03);
		public const Guid GUID_NDIS_802_11_BSSID_LIST_SCAN = .(0x0d9e01e1, 0xba70, 0x11d4, 0xb6, 0x75, 0x00, 0x20, 0x48, 0x57, 0x03, 0x37);
		public const Guid GUID_NDIS_802_11_WEP_STATUS = .(0xb027a21f, 0x3cfa, 0x4125, 0x80, 0x0b, 0x3f, 0x7a, 0x18, 0xfd, 0xdc, 0xdc);
		public const Guid GUID_NDIS_802_11_RELOAD_DEFAULTS = .(0x748b14e8, 0x32ee, 0x4425, 0xb9, 0x1b, 0xc9, 0x84, 0x8c, 0x58, 0xb5, 0x5a);
		public const Guid GUID_NDIS_802_11_ADD_KEY = .(0xab8b5a62, 0x1d51, 0x49d8, 0xba, 0x5c, 0xfa, 0x98, 0x0b, 0xe0, 0x3a, 0x1d);
		public const Guid GUID_NDIS_802_11_REMOVE_KEY = .(0x73cb28e9, 0x3188, 0x42d5, 0xb5, 0x53, 0xb2, 0x12, 0x37, 0xe6, 0x08, 0x8c);
		public const Guid GUID_NDIS_802_11_ASSOCIATION_INFORMATION = .(0xa08d4dd0, 0x960e, 0x40bd, 0x8c, 0xf6, 0xc5, 0x38, 0xaf, 0x98, 0xf2, 0xe3);
		public const Guid GUID_NDIS_802_11_TEST = .(0x4b9ca16a, 0x6a60, 0x4e9d, 0x92, 0x0c, 0x63, 0x35, 0x95, 0x3f, 0xa0, 0xb5);
		public const Guid GUID_NDIS_802_11_MEDIA_STREAM_MODE = .(0x0a56af66, 0xd84b, 0x49eb, 0xa2, 0x8d, 0x52, 0x82, 0xcb, 0xb6, 0xd0, 0xcd);
		public const Guid GUID_NDIS_STATUS_RESET_START = .(0x981f2d76, 0xb1f3, 0x11d0, 0x8d, 0xd7, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_STATUS_RESET_END = .(0x981f2d77, 0xb1f3, 0x11d0, 0x8d, 0xd7, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_STATUS_MEDIA_CONNECT = .(0x981f2d7d, 0xb1f3, 0x11d0, 0x8d, 0xd7, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_STATUS_MEDIA_DISCONNECT = .(0x981f2d7e, 0xb1f3, 0x11d0, 0x8d, 0xd7, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_STATUS_MEDIA_SPECIFIC_INDICATION = .(0x981f2d84, 0xb1f3, 0x11d0, 0x8d, 0xd7, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_STATUS_LINK_SPEED_CHANGE = .(0x981f2d85, 0xb1f3, 0x11d0, 0x8d, 0xd7, 0x00, 0xc0, 0x4f, 0xc3, 0x35, 0x8c);
		public const Guid GUID_NDIS_STATUS_PACKET_FILTER = .(0xd47c5407, 0x2e75, 0x46dd, 0x81, 0x46, 0x1d, 0x7e, 0xd2, 0xd6, 0xab, 0x1d);
		public const Guid GUID_NDIS_STATUS_NETWORK_CHANGE = .(0xca8a56f9, 0xce81, 0x40e6, 0xa7, 0x0f, 0xa0, 0x67, 0xa4, 0x76, 0xe9, 0xe9);
		public const Guid GUID_NDIS_STATUS_TASK_OFFLOAD_CURRENT_CONFIG = .(0x45049fc6, 0x54d8, 0x40c8, 0x9c, 0x3d, 0xb0, 0x11, 0xc4, 0xe7, 0x15, 0xbc);
		public const Guid GUID_NDIS_STATUS_TASK_OFFLOAD_HARDWARE_CAPABILITIES = .(0xb6b8158b, 0x217c, 0x4b2a, 0xbe, 0x86, 0x6a, 0x04, 0xbe, 0xea, 0x65, 0xb8);
		public const Guid GUID_NDIS_STATUS_TCP_CONNECTION_OFFLOAD_CURRENT_CONFIG = .(0xf8edaeff, 0x24e4, 0x4ae6, 0xa4, 0x13, 0x0b, 0x27, 0xf7, 0x6b, 0x24, 0x3d);
		public const Guid GUID_NDIS_STATUS_TCP_CONNECTION_OFFLOAD_HARDWARE_CAPABILITIES = .(0x391969b6, 0x402c, 0x43bf, 0x89, 0x22, 0x39, 0xea, 0xe0, 0xda, 0x1b, 0xb5);
		public const Guid GUID_NDIS_STATUS_OPER_STATUS = .(0xf917b663, 0x845e, 0x4d3d, 0xb6, 0xd4, 0x15, 0xeb, 0x27, 0xaf, 0x81, 0xc5);
		public const Guid GUID_NDIS_STATUS_LINK_STATE = .(0x64c6f797, 0x878c, 0x4311, 0x92, 0x46, 0x65, 0xdb, 0xa8, 0x9c, 0x3a, 0x61);
		public const Guid GUID_NDIS_STATUS_PORT_STATE = .(0x1dac0dfe, 0x43e5, 0x44b7, 0xb7, 0x59, 0x7b, 0xf4, 0x6d, 0xe3, 0x2e, 0x81);
		public const Guid GUID_NDIS_STATUS_EXTERNAL_CONNECTIVITY_CHANGE = .(0xfd306974, 0xc420, 0x4433, 0xb0, 0xfe, 0x4c, 0xf6, 0xa6, 0x13, 0xf5, 0x9f);
		public const Guid GUID_STATUS_MEDIA_SPECIFIC_INDICATION_EX = .(0xaaacfca7, 0x954a, 0x4632, 0xa1, 0x6e, 0xa8, 0xa6, 0x37, 0x93, 0xa9, 0xe5);
		public const Guid GUID_NDIS_STATUS_HD_SPLIT_CURRENT_CONFIG = .(0x6c744b0e, 0xee9c, 0x4205, 0x90, 0xa2, 0x01, 0x5f, 0x6d, 0x65, 0xf4, 0x03);
		public const Guid GUID_NDIS_STATUS_PM_WOL_PATTERN_REJECTED = .(0xf72cf68e, 0x18d4, 0x4d63, 0x9a, 0x19, 0xe6, 0x9b, 0x13, 0x91, 0x6b, 0x1a);
		public const Guid GUID_NDIS_STATUS_PM_OFFLOAD_REJECTED = .(0xadd1d481, 0x711e, 0x4d1a, 0x92, 0xca, 0xa6, 0x2d, 0xb9, 0x32, 0x97, 0x12);
		public const Guid GUID_NDIS_STATUS_PM_WAKE_REASON = .(0x0933fd58, 0xca62, 0x438f, 0x83, 0xda, 0xdf, 0xc1, 0xcc, 0xcb, 0x81, 0x45);
		public const Guid GUID_NDIS_STATUS_DOT11_SCAN_CONFIRM = .(0x8500591e, 0xa0c7, 0x4efb, 0x93, 0x42, 0xb6, 0x74, 0xb0, 0x02, 0xcb, 0xe6);
		public const Guid GUID_NDIS_STATUS_DOT11_MPDU_MAX_LENGTH_CHANGED = .(0x1d6560ec, 0x8e48, 0x4a3e, 0x9f, 0xd5, 0xa0, 0x1b, 0x69, 0x8d, 0xb6, 0xc5);
		public const Guid GUID_NDIS_STATUS_DOT11_ASSOCIATION_START = .(0x3927843b, 0x6980, 0x4b48, 0xb1, 0x5b, 0x4d, 0xe5, 0x09, 0x77, 0xac, 0x40);
		public const Guid GUID_NDIS_STATUS_DOT11_ASSOCIATION_COMPLETION = .(0x458bbea7, 0x45a4, 0x4ae2, 0xb1, 0x76, 0xe5, 0x1f, 0x96, 0xfc, 0x05, 0x68);
		public const Guid GUID_NDIS_STATUS_DOT11_CONNECTION_START = .(0x7b74299d, 0x998f, 0x4454, 0xad, 0x08, 0xc5, 0xaf, 0x28, 0x57, 0x6d, 0x1b);
		public const Guid GUID_NDIS_STATUS_DOT11_CONNECTION_COMPLETION = .(0x96efd9c9, 0x7f1b, 0x4a89, 0xbc, 0x04, 0x3e, 0x9e, 0x27, 0x17, 0x65, 0xf1);
		public const Guid GUID_NDIS_STATUS_DOT11_ROAMING_START = .(0xb2412d0d, 0x26c8, 0x4f4e, 0x93, 0xdf, 0xf7, 0xb7, 0x05, 0xa0, 0xb4, 0x33);
		public const Guid GUID_NDIS_STATUS_DOT11_ROAMING_COMPLETION = .(0xdd9d47d1, 0x282b, 0x41e4, 0xb9, 0x24, 0x66, 0x36, 0x88, 0x17, 0xfc, 0xd3);
		public const Guid GUID_NDIS_STATUS_DOT11_DISASSOCIATION = .(0x3fbeb6fc, 0x0fe2, 0x43fd, 0xb2, 0xad, 0xbd, 0x99, 0xb5, 0xf9, 0x3e, 0x13);
		public const Guid GUID_NDIS_STATUS_DOT11_TKIPMIC_FAILURE = .(0x442c2ae4, 0x9bc5, 0x4b90, 0xa8, 0x89, 0x45, 0x5e, 0xf2, 0x20, 0xf4, 0xee);
		public const Guid GUID_NDIS_STATUS_DOT11_PMKID_CANDIDATE_LIST = .(0x26d8b8f6, 0xdb82, 0x49eb, 0x8b, 0xf3, 0x4c, 0x13, 0x0e, 0xf0, 0x69, 0x50);
		public const Guid GUID_NDIS_STATUS_DOT11_PHY_STATE_CHANGED = .(0xdeb45316, 0x71b5, 0x4736, 0xbd, 0xef, 0x0a, 0x9e, 0x9f, 0x4e, 0x62, 0xdc);
		public const Guid GUID_NDIS_STATUS_DOT11_LINK_QUALITY = .(0xa3285184, 0xea99, 0x48ed, 0x82, 0x5e, 0xa4, 0x26, 0xb1, 0x1c, 0x27, 0x54);
		public const uint32 NDK_ADAPTER_FLAG_IN_ORDER_DMA_SUPPORTED = 1;
		public const uint32 NDK_ADAPTER_FLAG_RDMA_READ_SINK_NOT_REQUIRED = 2;
		public const uint32 NDK_ADAPTER_FLAG_CQ_INTERRUPT_MODERATION_SUPPORTED = 4;
		public const uint32 NDK_ADAPTER_FLAG_MULTI_ENGINE_SUPPORTED = 8;
		public const uint32 NDK_ADAPTER_FLAG_RDMA_READ_LOCAL_INVALIDATE_SUPPORTED = 16;
		public const uint32 NDK_ADAPTER_FLAG_CQ_RESIZE_SUPPORTED = 256;
		public const uint32 NDK_ADAPTER_FLAG_LOOPBACK_CONNECTIONS_SUPPORTED = 65536;
		public const uint32 DOT11EXT_PSK_MAX_LENGTH = 64;
		public const uint32 WDIAG_IHV_WLAN_ID_FLAG_SECURITY_ENABLED = 1;
		public const uint32 MS_MAX_PROFILE_NAME_LENGTH = 256;
		public const uint32 MS_PROFILE_GROUP_POLICY = 1;
		public const uint32 MS_PROFILE_USER = 2;
		
		// --- Enums ---
		
		public enum NDIS_REQUEST_TYPE : int32
		{
			QueryInformation = 0,
			SetInformation = 1,
			QueryStatistics = 2,
			Open = 3,
			Close = 4,
			Send = 5,
			TransferData = 6,
			Reset = 7,
			Generic1 = 8,
			Generic2 = 9,
			Generic3 = 10,
			Generic4 = 11,
		}
		public enum NDIS_INTERRUPT_MODERATION : int32
		{
			Unknown = 0,
			NotSupported = 1,
			Enabled = 2,
			Disabled = 3,
		}
		public enum NDIS_802_11_STATUS_TYPE : int32
		{
			Type_Authentication = 0,
			Type_MediaStreamMode = 1,
			Type_PMKID_CandidateList = 2,
			TypeMax = 3,
		}
		public enum NDIS_802_11_NETWORK_TYPE : int32
		{
			_11FH = 0,
			_11DS = 1,
			_11OFDM5 = 2,
			_11OFDM24 = 3,
			_11Automode = 4,
			_11NetworkTypeMax = 5,
		}
		public enum NDIS_802_11_POWER_MODE : int32
		{
			CAM = 0,
			MAX_PSP = 1,
			Fast_PSP = 2,
			Max = 3,
		}
		public enum NDIS_802_11_NETWORK_INFRASTRUCTURE : int32
		{
			_11IBSS = 0,
			_11Infrastructure = 1,
			_11AutoUnknown = 2,
			_11InfrastructureMax = 3,
		}
		[AllowDuplicates]
		public enum NDIS_802_11_AUTHENTICATION_MODE : int32
		{
			Open = 0,
			Shared = 1,
			AutoSwitch = 2,
			WPA = 3,
			WPAPSK = 4,
			WPANone = 5,
			WPA2 = 6,
			WPA2PSK = 7,
			WPA3 = 8,
			WPA3Ent192 = 8,
			WPA3SAE = 9,
			WPA3Ent = 10,
			Max = 11,
		}
		public enum NDIS_802_11_PRIVACY_FILTER : int32
		{
			FilterAcceptAll = 0,
			Filter8021xWEP = 1,
		}
		[AllowDuplicates]
		public enum NDIS_802_11_WEP_STATUS : int32
		{
			_11WEPEnabled = 0,
			_11Encryption1Enabled = 0,
			_11WEPDisabled = 1,
			_11EncryptionDisabled = 1,
			_11WEPKeyAbsent = 2,
			_11Encryption1KeyAbsent = 2,
			_11WEPNotSupported = 3,
			_11EncryptionNotSupported = 3,
			_11Encryption2Enabled = 4,
			_11Encryption2KeyAbsent = 5,
			_11Encryption3Enabled = 6,
			_11Encryption3KeyAbsent = 7,
		}
		public enum NDIS_802_11_RELOAD_DEFAULTS : int32
		{
			Ndis802_11ReloadWEPKeys = 0,
		}
		public enum NDIS_802_11_MEDIA_STREAM_MODE : int32
		{
			Off = 0,
			On = 1,
		}
		public enum NDIS_802_11_RADIO_STATUS : int32
		{
			On = 0,
			HardwareOff = 1,
			SoftwareOff = 2,
			HardwareSoftwareOff = 3,
			Max = 4,
		}
		public enum OFFLOAD_OPERATION_E : int32
		{
			AUTHENTICATE = 1,
			ENCRYPT = 2,
		}
		public enum OFFLOAD_CONF_ALGO : int32
		{
			NONE = 0,
			DES = 1,
			RESERVED = 2,
			_3_DES = 3,
			MAX = 4,
		}
		public enum OFFLOAD_INTEGRITY_ALGO : int32
		{
			NONE = 0,
			MD5 = 1,
			SHA = 2,
			MAX = 3,
		}
		public enum UDP_ENCAP_TYPE : int32
		{
			IKE = 0,
			OTHER = 1,
		}
		public enum NDIS_MEDIUM : int32
		{
			Medium802_3 = 0,
			Medium802_5 = 1,
			MediumFddi = 2,
			MediumWan = 3,
			MediumLocalTalk = 4,
			MediumDix = 5,
			MediumArcnetRaw = 6,
			MediumArcnet878_2 = 7,
			MediumAtm = 8,
			MediumWirelessWan = 9,
			MediumIrda = 10,
			MediumBpc = 11,
			MediumCoWan = 12,
			Medium1394 = 13,
			MediumInfiniBand = 14,
			MediumTunnel = 15,
			MediumNative802_11 = 16,
			MediumLoopback = 17,
			MediumWiMAX = 18,
			MediumIP = 19,
			MediumMax = 20,
		}
		public enum NDIS_PHYSICAL_MEDIUM : int32
		{
			MediumUnspecified = 0,
			MediumWirelessLan = 1,
			MediumCableModem = 2,
			MediumPhoneLine = 3,
			MediumPowerLine = 4,
			MediumDSL = 5,
			MediumFibreChannel = 6,
			Medium1394 = 7,
			MediumWirelessWan = 8,
			MediumNative802_11 = 9,
			MediumBluetooth = 10,
			MediumInfiniband = 11,
			MediumWiMax = 12,
			MediumUWB = 13,
			Medium802_3 = 14,
			Medium802_5 = 15,
			MediumIrda = 16,
			MediumWiredWAN = 17,
			MediumWiredCoWan = 18,
			MediumOther = 19,
			MediumNative802_15_4 = 20,
			MediumMax = 21,
		}
		public enum NDIS_HARDWARE_STATUS : int32
		{
			Ready = 0,
			Initializing = 1,
			Reset = 2,
			Closing = 3,
			NotReady = 4,
		}
		public enum NDIS_DEVICE_POWER_STATE : int32
		{
			Unspecified = 0,
			D0 = 1,
			D1 = 2,
			D2 = 3,
			D3 = 4,
			Maximum = 5,
		}
		public enum NDIS_FDDI_ATTACHMENT_TYPE : int32
		{
			Isolated = 1,
			LocalA = 2,
			LocalB = 3,
			LocalAB = 4,
			LocalS = 5,
			WrapA = 6,
			WrapB = 7,
			WrapAB = 8,
			WrapS = 9,
			CWrapA = 10,
			CWrapB = 11,
			CWrapS = 12,
			Through = 13,
		}
		public enum NDIS_FDDI_RING_MGT_STATE : int32
		{
			Isolated = 1,
			NonOperational = 2,
			Operational = 3,
			Detect = 4,
			NonOperationalDup = 5,
			OperationalDup = 6,
			Directed = 7,
			Trace = 8,
		}
		public enum NDIS_FDDI_LCONNECTION_STATE : int32
		{
			Off = 1,
			Break = 2,
			Trace = 3,
			Connect = 4,
			Next = 5,
			Signal = 6,
			Join = 7,
			Verify = 8,
			Active = 9,
			Maintenance = 10,
		}
		public enum NDIS_WAN_MEDIUM_SUBTYPE : int32
		{
			Hub = 0,
			X_25 = 1,
			Isdn = 2,
			Serial = 3,
			FrameRelay = 4,
			Atm = 5,
			Sonet = 6,
			SW56K = 7,
			PPTP = 8,
			L2TP = 9,
			Irda = 10,
			Parallel = 11,
			Pppoe = 12,
			SSTP = 13,
			AgileVPN = 14,
			Gre = 15,
			SubTypeMax = 16,
		}
		public enum NDIS_WAN_HEADER_FORMAT : int32
		{
			Native = 0,
			Ethernet = 1,
		}
		public enum NDIS_WAN_QUALITY : int32
		{
			Raw = 0,
			ErrorControl = 1,
			Reliable = 2,
		}
		public enum NDIS_802_5_RING_STATE : int32
		{
			Opened = 1,
			Closed = 2,
			Opening = 3,
			Closing = 4,
			OpenFailure = 5,
			RingFailure = 6,
		}
		public enum NDIS_MEDIA_STATE : int32
		{
			Connected = 0,
			Disconnected = 1,
		}
		public enum NDIS_SUPPORTED_PAUSE_FUNCTIONS : int32
		{
			Unsupported = 0,
			SendOnly = 1,
			ReceiveOnly = 2,
			SendAndReceive = 3,
			Unknown = 4,
		}
		public enum NDIS_PORT_TYPE : int32
		{
			TypeUndefined = 0,
			TypeBridge = 1,
			TypeRasConnection = 2,
			Type8021xSupplicant = 3,
			TypeMax = 4,
		}
		public enum NDIS_PORT_AUTHORIZATION_STATE : int32
		{
			AuthorizationUnknown = 0,
			Authorized = 1,
			Unauthorized = 2,
			Reauthorizing = 3,
		}
		public enum NDIS_PORT_CONTROL_STATE : int32
		{
			Unknown = 0,
			Controlled = 1,
			Uncontrolled = 2,
		}
		public enum NDIS_NETWORK_CHANGE_TYPE : int32
		{
			PossibleNetworkChange = 1,
			DefinitelyNetworkChange = 2,
			NetworkChangeFromMediaConnect = 3,
			NetworkChangeMax = 4,
		}
		[AllowDuplicates]
		public enum NDIS_PROCESSOR_VENDOR : int32
		{
			Unknown = 0,
			GenuinIntel = 1,
			GenuineIntel = 1,
			AuthenticAMD = 2,
		}
		public enum NDK_RDMA_TECHNOLOGY : int32
		{
			NdkUndefined = 0,
			NdkiWarp = 1,
			NdkInfiniBand = 2,
			NdkRoCE = 3,
			NdkRoCEv2 = 4,
			NdkMaxTechnology = 5,
		}
		public enum DOT11EXT_IHV_CONNECTION_PHASE : int32
		{
			any = 0,
			initial_connection = 1,
			post_l3_connection = 2,
		}
		public enum DOT11_MSONEX_RESULT : int32
		{
			SUCCESS = 0,
			FAILURE = 1,
			IN_PROGRESS = 2,
		}
		public enum DOT11EXT_IHV_INDICATION_TYPE : int32
		{
			NicSpecificNotification = 0,
			PmkidCandidateList = 1,
			TkipMicFailure = 2,
			PhyStateChange = 3,
			LinkQuality = 4,
		}
		
		// --- Function Pointers ---
		
		public function uint32 DOT11EXT_ALLOCATE_BUFFER(uint32 dwByteCount, void** ppvBuffer);
		public function void DOT11EXT_FREE_BUFFER(void* pvMemory);
		public function uint32 DOT11EXT_SET_PROFILE_CUSTOM_USER_DATA(HANDLE hDot11SvcHandle, HANDLE hConnectSession, uint32 dwSessionID, uint32 dwDataSize, void* pvData);
		public function uint32 DOT11EXT_GET_PROFILE_CUSTOM_USER_DATA(HANDLE hDot11SvcHandle, HANDLE hConnectSession, uint32 dwSessionID, out uint32 pdwDataSize, void** ppvData);
		public function uint32 DOT11EXT_SET_CURRENT_PROFILE(HANDLE hDot11SvcHandle, HANDLE hConnectSession, DOT11EXT_IHV_CONNECTIVITY_PROFILE* pIhvConnProfile, DOT11EXT_IHV_SECURITY_PROFILE* pIhvSecProfile);
		public function uint32 DOT11EXT_SEND_UI_REQUEST(HANDLE hDot11SvcHandle, ref DOT11EXT_IHV_UI_REQUEST pIhvUIRequest);
		public function uint32 DOT11EXT_PRE_ASSOCIATE_COMPLETION(HANDLE hDot11SvcHandle, HANDLE hConnectSession, uint32 dwReasonCode, uint32 dwWin32Error);
		public function uint32 DOT11EXT_POST_ASSOCIATE_COMPLETION(HANDLE hDot11SvcHandle, HANDLE hSecuritySessionID, uint8** pPeer, uint32 dwReasonCode, uint32 dwWin32Error);
		public function uint32 DOT11EXT_SEND_NOTIFICATION(HANDLE hDot11SvcHandle, ref L2_NOTIFICATION_DATA pNotificationData);
		public function uint32 DOT11EXT_SEND_PACKET(HANDLE hDot11SvcHandle, uint32 uPacketLen, void* pvPacket, HANDLE hSendCompletion);
		public function uint32 DOT11EXT_SET_ETHERTYPE_HANDLING(HANDLE hDot11SvcHandle, uint32 uMaxBackLog, uint32 uNumOfExemption, DOT11_PRIVACY_EXEMPTION* pExemption, uint32 uNumOfRegistration, uint16* pusRegistration);
		public function uint32 DOT11EXT_SET_AUTH_ALGORITHM(HANDLE hDot11SvcHandle, uint32 dwAuthAlgo);
		public function uint32 DOT11EXT_SET_UNICAST_CIPHER_ALGORITHM(HANDLE hDot11SvcHandle, uint32 dwUnicastCipherAlgo);
		public function uint32 DOT11EXT_SET_MULTICAST_CIPHER_ALGORITHM(HANDLE hDot11SvcHandle, uint32 dwMulticastCipherAlgo);
		public function uint32 DOT11EXT_SET_DEFAULT_KEY(HANDLE hDot11SvcHandle, ref DOT11_CIPHER_DEFAULT_KEY_VALUE pKey, DOT11_DIRECTION dot11Direction);
		public function uint32 DOT11EXT_SET_KEY_MAPPING_KEY(HANDLE hDot11SvcHandle, ref DOT11_CIPHER_KEY_MAPPING_KEY_VALUE pKey);
		public function uint32 DOT11EXT_SET_DEFAULT_KEY_ID(HANDLE hDot11SvcHandle, uint32 uDefaultKeyId);
		public function uint32 DOT11EXT_SET_EXCLUDE_UNENCRYPTED(HANDLE hDot11SvcHandle, BOOL bExcludeUnencrypted);
		public function uint32 DOT11EXT_NIC_SPECIFIC_EXTENSION(HANDLE hDot11SvcHandle, uint32 dwInBufferSize, void* pvInBuffer, out uint32 pdwOutBufferSize, void* pvOutBuffer);
		public function uint32 DOT11EXT_ONEX_START(HANDLE hDot11SvcHandle, EAP_ATTRIBUTES* pEapAttributes);
		public function uint32 DOT11EXT_ONEX_STOP(HANDLE hDot11SvcHandle);
		public function uint32 DOT11EXT_PROCESS_ONEX_PACKET(HANDLE hDot11SvcHandle, uint32 dwInPacketSize, void* pvInPacket);
		public function uint32 DOT11EXT_REQUEST_VIRTUAL_STATION(HANDLE hDot11PrimaryHandle, void* pvReserved);
		public function uint32 DOT11EXT_RELEASE_VIRTUAL_STATION(HANDLE hDot11PrimaryHandle, void* pvReserved);
		public function uint32 DOT11EXT_QUERY_VIRTUAL_STATION_PROPERTIES(HANDLE hDot11SvcHandle, out BOOL pbIsVirtualStation, out Guid pgPrimary, void* pvReserved);
		public function uint32 DOT11EXT_SET_VIRTUAL_STATION_AP_PROPERTIES(HANDLE hDot11SvcHandle, HANDLE hConnectSession, uint32 dwNumProperties, DOT11EXT_VIRTUAL_STATION_AP_PROPERTY* pProperties, void* pvReserved);
		public function uint32 DOT11EXTIHV_GET_VERSION_INFO(out DOT11_IHV_VERSION_INFO pDot11IHVVersionInfo);
		public function uint32 DOT11EXTIHV_INIT_SERVICE(uint32 dwVerNumUsed, ref DOT11EXT_APIS pDot11ExtAPI, void* pvReserved, out DOT11EXT_IHV_HANDLERS pDot11IHVHandlers);
		public function uint32 DOT11EXTIHV_INIT_VIRTUAL_STATION(ref DOT11EXT_VIRTUAL_STATION_APIS pDot11ExtVSAPI, void* pvReserved);
		public function void DOT11EXTIHV_DEINIT_SERVICE();
		public function uint32 DOT11EXTIHV_INIT_ADAPTER(ref DOT11_ADAPTER pDot11Adapter, HANDLE hDot11SvcHandle, out HANDLE phIhvExtAdapter);
		public function void DOT11EXTIHV_DEINIT_ADAPTER(HANDLE hIhvExtAdapter);
		public function uint32 DOT11EXTIHV_PERFORM_PRE_ASSOCIATE(HANDLE hIhvExtAdapter, HANDLE hConnectSession, DOT11EXT_IHV_PROFILE_PARAMS* pIhvProfileParams, ref DOT11EXT_IHV_CONNECTIVITY_PROFILE pIhvConnProfile, ref DOT11EXT_IHV_SECURITY_PROFILE pIhvSecProfile, ref DOT11_BSS_LIST pConnectableBssid, out uint32 pdwReasonCode);
		public function uint32 DOT11EXTIHV_ADAPTER_RESET(HANDLE hIhvExtAdapter);
		public function uint32 DOT11EXTIHV_PERFORM_POST_ASSOCIATE(HANDLE hIhvExtAdapter, HANDLE hSecuritySessionID, ref DOT11_PORT_STATE pPortState, uint32 uDot11AssocParamsBytes, ref DOT11_ASSOCIATION_COMPLETION_PARAMETERS pDot11AssocParams);
		public function uint32 DOT11EXTIHV_STOP_POST_ASSOCIATE(HANDLE hIhvExtAdapter, ref uint8* pPeer, uint32 dot11AssocStatus);
		public function uint32 DOT11EXTIHV_VALIDATE_PROFILE(HANDLE hIhvExtAdapter, DOT11EXT_IHV_PROFILE_PARAMS* pIhvProfileParams, ref DOT11EXT_IHV_CONNECTIVITY_PROFILE pIhvConnProfile, ref DOT11EXT_IHV_SECURITY_PROFILE pIhvSecProfile, out uint32 pdwReasonCode);
		public function uint32 DOT11EXTIHV_PERFORM_CAPABILITY_MATCH(HANDLE hIhvExtAdapter, DOT11EXT_IHV_PROFILE_PARAMS* pIhvProfileParams, ref DOT11EXT_IHV_CONNECTIVITY_PROFILE pIhvConnProfile, ref DOT11EXT_IHV_SECURITY_PROFILE pIhvSecProfile, DOT11_BSS_LIST* pConnectableBssid, out uint32 pdwReasonCode);
		public function uint32 DOT11EXTIHV_CREATE_DISCOVERY_PROFILES(HANDLE hIhvExtAdapter, BOOL bInsecure, DOT11EXT_IHV_PROFILE_PARAMS* pIhvProfileParams, DOT11_BSS_LIST* pConnectableBssid, out DOT11EXT_IHV_DISCOVERY_PROFILE_LIST pIhvDiscoveryProfileList, out uint32 pdwReasonCode);
		public function uint32 DOT11EXTIHV_PROCESS_SESSION_CHANGE(uint32 uEventType, ref WTSSESSION_NOTIFICATION pSessionNotification);
		public function uint32 DOT11EXTIHV_RECEIVE_INDICATION(HANDLE hIhvExtAdapter, DOT11EXT_IHV_INDICATION_TYPE indicationType, uint32 uBufferLength, void* pvBuffer);
		public function uint32 DOT11EXTIHV_RECEIVE_PACKET(HANDLE hIhvExtAdapter, uint32 dwInBufferSize, void* pvInBuffer);
		public function uint32 DOT11EXTIHV_SEND_PACKET_COMPLETION(HANDLE hSendCompletion);
		public function uint32 DOT11EXTIHV_IS_UI_REQUEST_PENDING(Guid guidUIRequest, out BOOL pbIsRequestPending);
		public function uint32 DOT11EXTIHV_PROCESS_UI_RESPONSE(Guid guidUIRequest, uint32 dwByteCount, void* pvResponseBuffer);
		public function uint32 DOT11EXTIHV_QUERY_UI_REQUEST(HANDLE hIhvExtAdapter, DOT11EXT_IHV_CONNECTION_PHASE connectionPhase, out DOT11EXT_IHV_UI_REQUEST* ppIhvUIRequest);
		public function uint32 DOT11EXTIHV_ONEX_INDICATE_RESULT(HANDLE hIhvExtAdapter, DOT11_MSONEX_RESULT msOneXResult, DOT11_MSONEX_RESULT_PARAMS* pDot11MsOneXResultParams);
		public function uint32 DOT11EXTIHV_CONTROL(HANDLE hIhvExtAdapter, uint32 dwInBufferSize, uint8* pInBuffer, uint32 dwOutBufferSize, uint8* pOutBuffer, out uint32 pdwBytesReturned);
		
		// --- Structs ---
		
		[CRepr]
		public struct NDIS_STATISTICS_VALUE
		{
			public uint32 Oid;
			public uint32 DataLength;
			public uint8[0] Data;
		}
		[CRepr]
		public struct NDIS_STATISTICS_VALUE_EX
		{
			public uint32 Oid;
			public uint32 DataLength;
			public uint32 Length;
			public uint8[0] Data;
		}
		[CRepr]
		public struct NDIS_VAR_DATA_DESC
		{
			public uint16 Length;
			public uint16 MaximumLength;
			public uint Offset;
		}
		[CRepr]
		public struct NDIS_OBJECT_HEADER
		{
			public uint8 Type;
			public uint8 Revision;
			public uint16 Size;
		}
		[CRepr]
		public struct NDIS_STATISTICS_INFO
		{
			public NDIS_OBJECT_HEADER Header;
			public uint32 SupportedStatistics;
			public uint64 ifInDiscards;
			public uint64 ifInErrors;
			public uint64 ifHCInOctets;
			public uint64 ifHCInUcastPkts;
			public uint64 ifHCInMulticastPkts;
			public uint64 ifHCInBroadcastPkts;
			public uint64 ifHCOutOctets;
			public uint64 ifHCOutUcastPkts;
			public uint64 ifHCOutMulticastPkts;
			public uint64 ifHCOutBroadcastPkts;
			public uint64 ifOutErrors;
			public uint64 ifOutDiscards;
			public uint64 ifHCInUcastOctets;
			public uint64 ifHCInMulticastOctets;
			public uint64 ifHCInBroadcastOctets;
			public uint64 ifHCOutUcastOctets;
			public uint64 ifHCOutMulticastOctets;
			public uint64 ifHCOutBroadcastOctets;
		}
		[CRepr]
		public struct NDIS_INTERRUPT_MODERATION_PARAMETERS
		{
			public NDIS_OBJECT_HEADER Header;
			public uint32 Flags;
			public NDIS_INTERRUPT_MODERATION InterruptModeration;
		}
		[CRepr]
		public struct NDIS_TIMEOUT_DPC_REQUEST_CAPABILITIES
		{
			public NDIS_OBJECT_HEADER Header;
			public uint32 Flags;
			public uint32 TimeoutArrayLength;
			public uint32[0] TimeoutArray;
		}
		[CRepr]
		public struct NDIS_PCI_DEVICE_CUSTOM_PROPERTIES
		{
			public NDIS_OBJECT_HEADER Header;
			public uint32 DeviceType;
			public uint32 CurrentSpeedAndMode;
			public uint32 CurrentPayloadSize;
			public uint32 MaxPayloadSize;
			public uint32 MaxReadRequestSize;
			public uint32 CurrentLinkSpeed;
			public uint32 CurrentLinkWidth;
			public uint32 MaxLinkSpeed;
			public uint32 MaxLinkWidth;
			public uint32 PciExpressVersion;
			public uint32 InterruptType;
			public uint32 MaxInterruptMessages;
		}
		[CRepr]
		public struct NDIS_802_11_STATUS_INDICATION
		{
			public NDIS_802_11_STATUS_TYPE StatusType;
		}
		[CRepr]
		public struct NDIS_802_11_AUTHENTICATION_REQUEST
		{
			public uint32 Length;
			public uint8[6] Bssid;
			public uint32 Flags;
		}
		[CRepr]
		public struct PMKID_CANDIDATE
		{
			public uint8[6] BSSID;
			public uint32 Flags;
		}
		[CRepr]
		public struct NDIS_802_11_PMKID_CANDIDATE_LIST
		{
			public uint32 Version;
			public uint32 NumCandidates;
			public PMKID_CANDIDATE[0] CandidateList;
		}
		[CRepr]
		public struct NDIS_802_11_NETWORK_TYPE_LIST
		{
			public uint32 NumberOfItems;
			public NDIS_802_11_NETWORK_TYPE[0] NetworkType;
		}
		[CRepr]
		public struct NDIS_802_11_CONFIGURATION_FH
		{
			public uint32 Length;
			public uint32 HopPattern;
			public uint32 HopSet;
			public uint32 DwellTime;
		}
		[CRepr]
		public struct NDIS_802_11_CONFIGURATION
		{
			public uint32 Length;
			public uint32 BeaconPeriod;
			public uint32 ATIMWindow;
			public uint32 DSConfig;
			public NDIS_802_11_CONFIGURATION_FH FHConfig;
		}
		[CRepr]
		public struct NDIS_802_11_STATISTICS
		{
			public uint32 Length;
			public LARGE_INTEGER TransmittedFragmentCount;
			public LARGE_INTEGER MulticastTransmittedFrameCount;
			public LARGE_INTEGER FailedCount;
			public LARGE_INTEGER RetryCount;
			public LARGE_INTEGER MultipleRetryCount;
			public LARGE_INTEGER RTSSuccessCount;
			public LARGE_INTEGER RTSFailureCount;
			public LARGE_INTEGER ACKFailureCount;
			public LARGE_INTEGER FrameDuplicateCount;
			public LARGE_INTEGER ReceivedFragmentCount;
			public LARGE_INTEGER MulticastReceivedFrameCount;
			public LARGE_INTEGER FCSErrorCount;
			public LARGE_INTEGER TKIPLocalMICFailures;
			public LARGE_INTEGER TKIPICVErrorCount;
			public LARGE_INTEGER TKIPCounterMeasuresInvoked;
			public LARGE_INTEGER TKIPReplays;
			public LARGE_INTEGER CCMPFormatErrors;
			public LARGE_INTEGER CCMPReplays;
			public LARGE_INTEGER CCMPDecryptErrors;
			public LARGE_INTEGER FourWayHandshakeFailures;
			public LARGE_INTEGER WEPUndecryptableCount;
			public LARGE_INTEGER WEPICVErrorCount;
			public LARGE_INTEGER DecryptSuccessCount;
			public LARGE_INTEGER DecryptFailureCount;
		}
		[CRepr]
		public struct NDIS_802_11_KEY
		{
			public uint32 Length;
			public uint32 KeyIndex;
			public uint32 KeyLength;
			public uint8[6] BSSID;
			public uint64 KeyRSC;
			public uint8[0] KeyMaterial;
		}
		[CRepr]
		public struct NDIS_802_11_REMOVE_KEY
		{
			public uint32 Length;
			public uint32 KeyIndex;
			public uint8[6] BSSID;
		}
		[CRepr]
		public struct NDIS_802_11_WEP
		{
			public uint32 Length;
			public uint32 KeyIndex;
			public uint32 KeyLength;
			public uint8[0] KeyMaterial;
		}
		[CRepr]
		public struct NDIS_802_11_SSID
		{
			public uint32 SsidLength;
			public uint8[32] Ssid;
		}
		[CRepr]
		public struct NDIS_WLAN_BSSID
		{
			public uint32 Length;
			public uint8[6] MacAddress;
			public uint8[2] Reserved;
			public NDIS_802_11_SSID Ssid;
			public uint32 Privacy;
			public int32 Rssi;
			public NDIS_802_11_NETWORK_TYPE NetworkTypeInUse;
			public NDIS_802_11_CONFIGURATION Configuration;
			public NDIS_802_11_NETWORK_INFRASTRUCTURE InfrastructureMode;
			public uint8[8] SupportedRates;
		}
		[CRepr]
		public struct NDIS_802_11_BSSID_LIST
		{
			public uint32 NumberOfItems;
			public NDIS_WLAN_BSSID[0] Bssid;
		}
		[CRepr]
		public struct NDIS_WLAN_BSSID_EX
		{
			public uint32 Length;
			public uint8[6] MacAddress;
			public uint8[2] Reserved;
			public NDIS_802_11_SSID Ssid;
			public uint32 Privacy;
			public int32 Rssi;
			public NDIS_802_11_NETWORK_TYPE NetworkTypeInUse;
			public NDIS_802_11_CONFIGURATION Configuration;
			public NDIS_802_11_NETWORK_INFRASTRUCTURE InfrastructureMode;
			public uint8[16] SupportedRates;
			public uint32 IELength;
			public uint8[0] IEs;
		}
		[CRepr]
		public struct NDIS_802_11_BSSID_LIST_EX
		{
			public uint32 NumberOfItems;
			public NDIS_WLAN_BSSID_EX[0] Bssid;
		}
		[CRepr]
		public struct NDIS_802_11_FIXED_IEs
		{
			public uint8[8] Timestamp;
			public uint16 BeaconInterval;
			public uint16 Capabilities;
		}
		[CRepr]
		public struct NDIS_802_11_VARIABLE_IEs
		{
			public uint8 ElementID;
			public uint8 Length;
			public uint8[0] data;
		}
		[CRepr]
		public struct NDIS_802_11_AI_REQFI
		{
			public uint16 Capabilities;
			public uint16 ListenInterval;
			public uint8[6] CurrentAPAddress;
		}
		[CRepr]
		public struct NDIS_802_11_AI_RESFI
		{
			public uint16 Capabilities;
			public uint16 StatusCode;
			public uint16 AssociationId;
		}
		[CRepr]
		public struct NDIS_802_11_ASSOCIATION_INFORMATION
		{
			public uint32 Length;
			public uint16 AvailableRequestFixedIEs;
			public NDIS_802_11_AI_REQFI RequestFixedIEs;
			public uint32 RequestIELength;
			public uint32 OffsetRequestIEs;
			public uint16 AvailableResponseFixedIEs;
			public NDIS_802_11_AI_RESFI ResponseFixedIEs;
			public uint32 ResponseIELength;
			public uint32 OffsetResponseIEs;
		}
		[CRepr]
		public struct NDIS_802_11_AUTHENTICATION_EVENT
		{
			public NDIS_802_11_STATUS_INDICATION Status;
			public NDIS_802_11_AUTHENTICATION_REQUEST[0] Request;
		}
		[CRepr]
		public struct NDIS_802_11_TEST
		{
			public uint32 Length;
			public uint32 Type;
			public _Anonymous_e__Union Anonymous;
			
			[CRepr, Union]
			public struct _Anonymous_e__Union
			{
				public NDIS_802_11_AUTHENTICATION_EVENT AuthenticationEvent;
				public int32 RssiTrigger;
			}
		}
		[CRepr]
		public struct BSSID_INFO
		{
			public uint8[6] BSSID;
			public uint8[16] PMKID;
		}
		[CRepr]
		public struct NDIS_802_11_PMKID
		{
			public uint32 Length;
			public uint32 BSSIDInfoCount;
			public BSSID_INFO[0] BSSIDInfo;
		}
		[CRepr]
		public struct NDIS_802_11_AUTHENTICATION_ENCRYPTION
		{
			public NDIS_802_11_AUTHENTICATION_MODE AuthModeSupported;
			public NDIS_802_11_WEP_STATUS EncryptStatusSupported;
		}
		[CRepr]
		public struct NDIS_802_11_CAPABILITY
		{
			public uint32 Length;
			public uint32 Version;
			public uint32 NoOfPMKIDs;
			public uint32 NoOfAuthEncryptPairsSupported;
			public NDIS_802_11_AUTHENTICATION_ENCRYPTION[0] AuthenticationEncryptionSupported;
		}
		[CRepr]
		public struct NDIS_802_11_NON_BCAST_SSID_LIST
		{
			public uint32 NumberOfItems;
			public NDIS_802_11_SSID[0] Non_Bcast_Ssid;
		}
		[CRepr]
		public struct NDIS_CO_DEVICE_PROFILE
		{
			public NDIS_VAR_DATA_DESC DeviceDescription;
			public NDIS_VAR_DATA_DESC DevSpecificInfo;
			public uint32 ulTAPISupplementaryPassThru;
			public uint32 ulAddressModes;
			public uint32 ulNumAddresses;
			public uint32 ulBearerModes;
			public uint32 ulMaxTxRate;
			public uint32 ulMinTxRate;
			public uint32 ulMaxRxRate;
			public uint32 ulMinRxRate;
			public uint32 ulMediaModes;
			public uint32 ulGenerateToneModes;
			public uint32 ulGenerateToneMaxNumFreq;
			public uint32 ulGenerateDigitModes;
			public uint32 ulMonitorToneMaxNumFreq;
			public uint32 ulMonitorToneMaxNumEntries;
			public uint32 ulMonitorDigitModes;
			public uint32 ulGatherDigitsMinTimeout;
			public uint32 ulGatherDigitsMaxTimeout;
			public uint32 ulDevCapFlags;
			public uint32 ulMaxNumActiveCalls;
			public uint32 ulAnswerMode;
			public uint32 ulUUIAcceptSize;
			public uint32 ulUUIAnswerSize;
			public uint32 ulUUIMakeCallSize;
			public uint32 ulUUIDropSize;
			public uint32 ulUUISendUserUserInfoSize;
			public uint32 ulUUICallInfoSize;
		}
		[CRepr]
		public struct OFFLOAD_ALGO_INFO
		{
			public uint32 algoIdentifier;
			public uint32 algoKeylen;
			public uint32 algoRounds;
		}
		[CRepr]
		public struct OFFLOAD_SECURITY_ASSOCIATION
		{
			public OFFLOAD_OPERATION_E Operation;
			public uint32 SPI;
			public OFFLOAD_ALGO_INFO IntegrityAlgo;
			public OFFLOAD_ALGO_INFO ConfAlgo;
			public OFFLOAD_ALGO_INFO Reserved;
		}
		[CRepr]
		public struct OFFLOAD_IPSEC_ADD_SA
		{
			public uint32 SrcAddr;
			public uint32 SrcMask;
			public uint32 DestAddr;
			public uint32 DestMask;
			public uint32 Protocol;
			public uint16 SrcPort;
			public uint16 DestPort;
			public uint32 SrcTunnelAddr;
			public uint32 DestTunnelAddr;
			public uint16 Flags;
			public int16 NumSAs;
			public OFFLOAD_SECURITY_ASSOCIATION[3] SecAssoc;
			public HANDLE OffloadHandle;
			public uint32 KeyLen;
			public uint8[0] KeyMat;
		}
		[CRepr]
		public struct OFFLOAD_IPSEC_DELETE_SA
		{
			public HANDLE OffloadHandle;
		}
		[CRepr]
		public struct OFFLOAD_IPSEC_UDPESP_ENCAPTYPE_ENTRY
		{
			public UDP_ENCAP_TYPE UdpEncapType;
			public uint16 DstEncapPort;
		}
		[CRepr]
		public struct OFFLOAD_IPSEC_ADD_UDPESP_SA
		{
			public uint32 SrcAddr;
			public uint32 SrcMask;
			public uint32 DstAddr;
			public uint32 DstMask;
			public uint32 Protocol;
			public uint16 SrcPort;
			public uint16 DstPort;
			public uint32 SrcTunnelAddr;
			public uint32 DstTunnelAddr;
			public uint16 Flags;
			public int16 NumSAs;
			public OFFLOAD_SECURITY_ASSOCIATION[3] SecAssoc;
			public HANDLE OffloadHandle;
			public OFFLOAD_IPSEC_UDPESP_ENCAPTYPE_ENTRY EncapTypeEntry;
			public HANDLE EncapTypeEntryOffldHandle;
			public uint32 KeyLen;
			public uint8[0] KeyMat;
		}
		[CRepr]
		public struct OFFLOAD_IPSEC_DELETE_UDPESP_SA
		{
			public HANDLE OffloadHandle;
			public HANDLE EncapTypeEntryOffldHandle;
		}
		[CRepr]
		public struct TRANSPORT_HEADER_OFFSET
		{
			public uint16 ProtocolType;
			public uint16 HeaderOffset;
		}
		[CRepr]
		public struct NETWORK_ADDRESS
		{
			public uint16 AddressLength;
			public uint16 AddressType;
			public uint8[0] Address;
		}
		[CRepr]
		public struct NETWORK_ADDRESS_LIST
		{
			public int32 AddressCount;
			public uint16 AddressType;
			public NETWORK_ADDRESS[0] Address;
		}
		[CRepr]
		public struct NETWORK_ADDRESS_IP
		{
			public uint16 sin_port;
			public uint32 IN_ADDR;
			public uint8[8] sin_zero;
		}
		[CRepr]
		public struct NETWORK_ADDRESS_IP6
		{
			public uint16 sin6_port;
			public uint32 sin6_flowinfo;
			public uint16[8] sin6_addr;
			public uint32 sin6_scope_id;
		}
		[CRepr]
		public struct NETWORK_ADDRESS_IPX
		{
			public uint32 NetworkAddress;
			public uint8[6] NodeAddress;
			public uint16 Socket;
		}
		[CRepr]
		public struct GEN_GET_TIME_CAPS
		{
			public uint32 Flags;
			public uint32 ClockPrecision;
		}
		[CRepr]
		public struct GEN_GET_NETCARD_TIME
		{
			public uint64 ReadTime;
		}
		[CRepr]
		public struct NDIS_PM_PACKET_PATTERN
		{
			public uint32 Priority;
			public uint32 Reserved;
			public uint32 MaskSize;
			public uint32 PatternOffset;
			public uint32 PatternSize;
			public uint32 PatternFlags;
		}
		[CRepr]
		public struct NDIS_PM_WAKE_UP_CAPABILITIES
		{
			public NDIS_DEVICE_POWER_STATE MinMagicPacketWakeUp;
			public NDIS_DEVICE_POWER_STATE MinPatternWakeUp;
			public NDIS_DEVICE_POWER_STATE MinLinkChangeWakeUp;
		}
		[CRepr]
		public struct NDIS_PNP_CAPABILITIES
		{
			public uint32 Flags;
			public NDIS_PM_WAKE_UP_CAPABILITIES WakeUpCapabilities;
		}
		[CRepr]
		public struct NDIS_WAN_PROTOCOL_CAPS
		{
			public uint32 Flags;
			public uint32 Reserved;
		}
		[CRepr]
		public struct NDIS_CO_LINK_SPEED
		{
			public uint32 Outbound;
			public uint32 Inbound;
		}
		[CRepr]
		public struct NDIS_LINK_SPEED
		{
			public uint64 XmitLinkSpeed;
			public uint64 RcvLinkSpeed;
		}
		[CRepr]
		public struct NDIS_GUID
		{
			public Guid Guid;
			public _Anonymous_e__Union Anonymous;
			public uint32 Size;
			public uint32 Flags;
			
			[CRepr, Union]
			public struct _Anonymous_e__Union
			{
				public uint32 Oid;
				public int32 Status;
			}
		}
		[CRepr]
		public struct NDIS_IRDA_PACKET_INFO
		{
			public uint32 ExtraBOFs;
			public uint32 MinTurnAroundTime;
		}
		[CRepr]
		public struct NDIS_LINK_STATE
		{
			public NDIS_OBJECT_HEADER Header;
			public NET_IF_MEDIA_CONNECT_STATE MediaConnectState;
			public NET_IF_MEDIA_DUPLEX_STATE MediaDuplexState;
			public uint64 XmitLinkSpeed;
			public uint64 RcvLinkSpeed;
			public NDIS_SUPPORTED_PAUSE_FUNCTIONS PauseFunctions;
			public uint32 AutoNegotiationFlags;
		}
		[CRepr]
		public struct NDIS_LINK_PARAMETERS
		{
			public NDIS_OBJECT_HEADER Header;
			public NET_IF_MEDIA_DUPLEX_STATE MediaDuplexState;
			public uint64 XmitLinkSpeed;
			public uint64 RcvLinkSpeed;
			public NDIS_SUPPORTED_PAUSE_FUNCTIONS PauseFunctions;
			public uint32 AutoNegotiationFlags;
		}
		[CRepr]
		public struct NDIS_OPER_STATE
		{
			public NDIS_OBJECT_HEADER Header;
			public NET_IF_OPER_STATUS OperationalStatus;
			public uint32 OperationalStatusFlags;
		}
		[CRepr]
		public struct NDIS_IP_OPER_STATUS
		{
			public uint32 AddressFamily;
			public NET_IF_OPER_STATUS OperationalStatus;
			public uint32 OperationalStatusFlags;
		}
		[CRepr]
		public struct NDIS_IP_OPER_STATUS_INFO
		{
			public NDIS_OBJECT_HEADER Header;
			public uint32 Flags;
			public uint32 NumberofAddressFamiliesReturned;
			public NDIS_IP_OPER_STATUS[32] IpOperationalStatus;
		}
		[CRepr]
		public struct NDIS_IP_OPER_STATE
		{
			public NDIS_OBJECT_HEADER Header;
			public uint32 Flags;
			public NDIS_IP_OPER_STATUS IpOperationalStatus;
		}
		[CRepr]
		public struct NDIS_OFFLOAD_PARAMETERS
		{
			public NDIS_OBJECT_HEADER Header;
			public uint8 IPv4Checksum;
			public uint8 TCPIPv4Checksum;
			public uint8 UDPIPv4Checksum;
			public uint8 TCPIPv6Checksum;
			public uint8 UDPIPv6Checksum;
			public uint8 LsoV1;
			public uint8 IPsecV1;
			public uint8 LsoV2IPv4;
			public uint8 LsoV2IPv6;
			public uint8 TcpConnectionIPv4;
			public uint8 TcpConnectionIPv6;
			public uint32 Flags;
		}
		[CRepr]
		public struct NDIS_TCP_LARGE_SEND_OFFLOAD_V1
		{
			public _IPv4_e__Struct IPv4;
			
			[CRepr]
			public struct _IPv4_e__Struct
			{
				public uint32 Encapsulation;
				public uint32 MaxOffLoadSize;
				public uint32 MinSegmentCount;
				public uint32 _bitfield;
			}
		}
		[CRepr]
		public struct NDIS_TCP_IP_CHECKSUM_OFFLOAD
		{
			public _IPv4Transmit_e__Struct IPv4Transmit;
			public _IPv4Receive_e__Struct IPv4Receive;
			public _IPv6Transmit_e__Struct IPv6Transmit;
			public _IPv6Receive_e__Struct IPv6Receive;
			
			[CRepr]
			public struct _IPv6Receive_e__Struct
			{
				public uint32 Encapsulation;
				public uint32 _bitfield;
			}
			[CRepr]
			public struct _IPv4Receive_e__Struct
			{
				public uint32 Encapsulation;
				public uint32 _bitfield;
			}
			[CRepr]
			public struct _IPv6Transmit_e__Struct
			{
				public uint32 Encapsulation;
				public uint32 _bitfield;
			}
			[CRepr]
			public struct _IPv4Transmit_e__Struct
			{
				public uint32 Encapsulation;
				public uint32 _bitfield;
			}
		}
		[CRepr]
		public struct NDIS_IPSEC_OFFLOAD_V1
		{
			public _Supported_e__Struct Supported;
			public _IPv4AH_e__Struct IPv4AH;
			public _IPv4ESP_e__Struct IPv4ESP;
			
			[CRepr]
			public struct _IPv4AH_e__Struct
			{
				public uint32 _bitfield;
			}
			[CRepr]
			public struct _IPv4ESP_e__Struct
			{
				public uint32 _bitfield;
			}
			[CRepr]
			public struct _Supported_e__Struct
			{
				public uint32 Encapsulation;
				public uint32 AhEspCombined;
				public uint32 TransportTunnelCombined;
				public uint32 IPv4Options;
				public uint32 Flags;
			}
		}
		[CRepr]
		public struct NDIS_TCP_LARGE_SEND_OFFLOAD_V2
		{
			public _IPv4_e__Struct IPv4;
			public _IPv6_e__Struct IPv6;
			
			[CRepr]
			public struct _IPv4_e__Struct
			{
				public uint32 Encapsulation;
				public uint32 MaxOffLoadSize;
				public uint32 MinSegmentCount;
			}
			[CRepr]
			public struct _IPv6_e__Struct
			{
				public uint32 Encapsulation;
				public uint32 MaxOffLoadSize;
				public uint32 MinSegmentCount;
				public uint32 _bitfield;
			}
		}
		[CRepr]
		public struct NDIS_OFFLOAD
		{
			public NDIS_OBJECT_HEADER Header;
			public NDIS_TCP_IP_CHECKSUM_OFFLOAD Checksum;
			public NDIS_TCP_LARGE_SEND_OFFLOAD_V1 LsoV1;
			public NDIS_IPSEC_OFFLOAD_V1 IPsecV1;
			public NDIS_TCP_LARGE_SEND_OFFLOAD_V2 LsoV2;
			public uint32 Flags;
		}
		[CRepr]
		public struct NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V1
		{
			public _IPv4_e__Struct IPv4;
			
			[CRepr]
			public struct _IPv4_e__Struct
			{
				public uint32 Encapsulation;
				public uint32 MaxOffLoadSize;
				public uint32 MinSegmentCount;
				public uint32 TcpOptions;
				public uint32 IpOptions;
			}
		}
		[CRepr]
		public struct NDIS_WMI_TCP_IP_CHECKSUM_OFFLOAD
		{
			public _IPv4Transmit_e__Struct IPv4Transmit;
			public _IPv4Receive_e__Struct IPv4Receive;
			public _IPv6Transmit_e__Struct IPv6Transmit;
			public _IPv6Receive_e__Struct IPv6Receive;
			
			[CRepr]
			public struct _IPv6Receive_e__Struct
			{
				public uint32 Encapsulation;
				public uint32 IpExtensionHeadersSupported;
				public uint32 TcpOptionsSupported;
				public uint32 TcpChecksum;
				public uint32 UdpChecksum;
			}
			[CRepr]
			public struct _IPv4Receive_e__Struct
			{
				public uint32 Encapsulation;
				public uint32 IpOptionsSupported;
				public uint32 TcpOptionsSupported;
				public uint32 TcpChecksum;
				public uint32 UdpChecksum;
				public uint32 IpChecksum;
			}
			[CRepr]
			public struct _IPv4Transmit_e__Struct
			{
				public uint32 Encapsulation;
				public uint32 IpOptionsSupported;
				public uint32 TcpOptionsSupported;
				public uint32 TcpChecksum;
				public uint32 UdpChecksum;
				public uint32 IpChecksum;
			}
			[CRepr]
			public struct _IPv6Transmit_e__Struct
			{
				public uint32 Encapsulation;
				public uint32 IpExtensionHeadersSupported;
				public uint32 TcpOptionsSupported;
				public uint32 TcpChecksum;
				public uint32 UdpChecksum;
			}
		}
		[CRepr]
		public struct NDIS_WMI_IPSEC_OFFLOAD_V1
		{
			public _Supported_e__Struct Supported;
			public _IPv4AH_e__Struct IPv4AH;
			public _IPv4ESP_e__Struct IPv4ESP;
			
			[CRepr]
			public struct _IPv4AH_e__Struct
			{
				public uint32 Md5;
				public uint32 Sha_1;
				public uint32 Transport;
				public uint32 Tunnel;
				public uint32 Send;
				public uint32 Receive;
			}
			[CRepr]
			public struct _Supported_e__Struct
			{
				public uint32 Encapsulation;
				public uint32 AhEspCombined;
				public uint32 TransportTunnelCombined;
				public uint32 IPv4Options;
				public uint32 Flags;
			}
			[CRepr]
			public struct _IPv4ESP_e__Struct
			{
				public uint32 Des;
				public uint32 Reserved;
				public uint32 TripleDes;
				public uint32 NullEsp;
				public uint32 Transport;
				public uint32 Tunnel;
				public uint32 Send;
				public uint32 Receive;
			}
		}
		[CRepr]
		public struct NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V2
		{
			public _IPv4_e__Struct IPv4;
			public _IPv6_e__Struct IPv6;
			
			[CRepr]
			public struct _IPv4_e__Struct
			{
				public uint32 Encapsulation;
				public uint32 MaxOffLoadSize;
				public uint32 MinSegmentCount;
			}
			[CRepr]
			public struct _IPv6_e__Struct
			{
				public uint32 Encapsulation;
				public uint32 MaxOffLoadSize;
				public uint32 MinSegmentCount;
				public uint32 IpExtensionHeadersSupported;
				public uint32 TcpOptionsSupported;
			}
		}
		[CRepr]
		public struct NDIS_WMI_OFFLOAD
		{
			public NDIS_OBJECT_HEADER Header;
			public NDIS_WMI_TCP_IP_CHECKSUM_OFFLOAD Checksum;
			public NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V1 LsoV1;
			public NDIS_WMI_IPSEC_OFFLOAD_V1 IPsecV1;
			public NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V2 LsoV2;
			public uint32 Flags;
		}
		[CRepr]
		public struct NDIS_TCP_CONNECTION_OFFLOAD
		{
			public NDIS_OBJECT_HEADER Header;
			public uint32 Encapsulation;
			public uint32 _bitfield;
			public uint32 TcpConnectionOffloadCapacity;
			public uint32 Flags;
		}
		[CRepr]
		public struct NDIS_WMI_TCP_CONNECTION_OFFLOAD
		{
			public NDIS_OBJECT_HEADER Header;
			public uint32 Encapsulation;
			public uint32 SupportIPv4;
			public uint32 SupportIPv6;
			public uint32 SupportIPv6ExtensionHeaders;
			public uint32 SupportSack;
			public uint32 TcpConnectionOffloadCapacity;
			public uint32 Flags;
		}
		[CRepr]
		public struct NDIS_PORT_AUTHENTICATION_PARAMETERS
		{
			public NDIS_OBJECT_HEADER Header;
			public NDIS_PORT_CONTROL_STATE SendControlState;
			public NDIS_PORT_CONTROL_STATE RcvControlState;
			public NDIS_PORT_AUTHORIZATION_STATE SendAuthorizationState;
			public NDIS_PORT_AUTHORIZATION_STATE RcvAuthorizationState;
		}
		[CRepr]
		public struct NDIS_WMI_METHOD_HEADER
		{
			public NDIS_OBJECT_HEADER Header;
			public uint32 PortNumber;
			public NET_LUID_LH NetLuid;
			public uint64 RequestId;
			public uint32 Timeout;
			public uint8[4] Padding;
		}
		[CRepr]
		public struct NDIS_WMI_SET_HEADER
		{
			public NDIS_OBJECT_HEADER Header;
			public uint32 PortNumber;
			public NET_LUID_LH NetLuid;
			public uint64 RequestId;
			public uint32 Timeout;
			public uint8[4] Padding;
		}
		[CRepr]
		public struct NDIS_WMI_EVENT_HEADER
		{
			public NDIS_OBJECT_HEADER Header;
			public uint32 IfIndex;
			public NET_LUID_LH NetLuid;
			public uint64 RequestId;
			public uint32 PortNumber;
			public uint32 DeviceNameLength;
			public uint32 DeviceNameOffset;
			public uint8[4] Padding;
		}
		[CRepr]
		public struct NDIS_WMI_ENUM_ADAPTER
		{
			public NDIS_OBJECT_HEADER Header;
			public uint32 IfIndex;
			public NET_LUID_LH NetLuid;
			public uint16 DeviceNameLength;
			public CHAR[0] DeviceName;
		}
		[CRepr]
		public struct NDIS_WMI_OUTPUT_INFO
		{
			public NDIS_OBJECT_HEADER Header;
			public uint32 Flags;
			public uint8 SupportedRevision;
			public uint32 DataOffset;
		}
		[CRepr]
		public struct NDIS_RECEIVE_SCALE_CAPABILITIES
		{
			public NDIS_OBJECT_HEADER Header;
			public uint32 CapabilitiesFlags;
			public uint32 NumberOfInterruptMessages;
			public uint32 NumberOfReceiveQueues;
		}
		[CRepr]
		public struct NDIS_RECEIVE_SCALE_PARAMETERS
		{
			public NDIS_OBJECT_HEADER Header;
			public uint16 Flags;
			public uint16 BaseCpuNumber;
			public uint32 HashInformation;
			public uint16 IndirectionTableSize;
			public uint32 IndirectionTableOffset;
			public uint16 HashSecretKeySize;
			public uint32 HashSecretKeyOffset;
		}
		[CRepr]
		public struct NDIS_RECEIVE_HASH_PARAMETERS
		{
			public NDIS_OBJECT_HEADER Header;
			public uint32 Flags;
			public uint32 HashInformation;
			public uint16 HashSecretKeySize;
			public uint32 HashSecretKeyOffset;
		}
		[CRepr]
		public struct NDIS_PORT_STATE
		{
			public NDIS_OBJECT_HEADER Header;
			public NET_IF_MEDIA_CONNECT_STATE MediaConnectState;
			public uint64 XmitLinkSpeed;
			public uint64 RcvLinkSpeed;
			public NET_IF_DIRECTION_TYPE Direction;
			public NDIS_PORT_CONTROL_STATE SendControlState;
			public NDIS_PORT_CONTROL_STATE RcvControlState;
			public NDIS_PORT_AUTHORIZATION_STATE SendAuthorizationState;
			public NDIS_PORT_AUTHORIZATION_STATE RcvAuthorizationState;
			public uint32 Flags;
		}
		[CRepr]
		public struct NDIS_PORT_CHARACTERISTICS
		{
			public NDIS_OBJECT_HEADER Header;
			public uint32 PortNumber;
			public uint32 Flags;
			public NDIS_PORT_TYPE Type;
			public NET_IF_MEDIA_CONNECT_STATE MediaConnectState;
			public uint64 XmitLinkSpeed;
			public uint64 RcvLinkSpeed;
			public NET_IF_DIRECTION_TYPE Direction;
			public NDIS_PORT_CONTROL_STATE SendControlState;
			public NDIS_PORT_CONTROL_STATE RcvControlState;
			public NDIS_PORT_AUTHORIZATION_STATE SendAuthorizationState;
			public NDIS_PORT_AUTHORIZATION_STATE RcvAuthorizationState;
		}
		[CRepr]
		public struct NDIS_PORT
		{
			public NDIS_PORT* Next;
			public void* NdisReserved;
			public void* MiniportReserved;
			public void* ProtocolReserved;
			public NDIS_PORT_CHARACTERISTICS PortCharacteristics;
		}
		[CRepr]
		public struct NDIS_PORT_ARRAY
		{
			public NDIS_OBJECT_HEADER Header;
			public uint32 NumberOfPorts;
			public uint32 OffsetFirstPort;
			public uint32 ElementSize;
			public NDIS_PORT_CHARACTERISTICS[0] Ports;
		}
		[CRepr]
		public struct NDIS_TIMESTAMP_CAPABILITY_FLAGS
		{
			public BOOLEAN PtpV2OverUdpIPv4EventMsgReceiveHw;
			public BOOLEAN PtpV2OverUdpIPv4AllMsgReceiveHw;
			public BOOLEAN PtpV2OverUdpIPv4EventMsgTransmitHw;
			public BOOLEAN PtpV2OverUdpIPv4AllMsgTransmitHw;
			public BOOLEAN PtpV2OverUdpIPv6EventMsgReceiveHw;
			public BOOLEAN PtpV2OverUdpIPv6AllMsgReceiveHw;
			public BOOLEAN PtpV2OverUdpIPv6EventMsgTransmitHw;
			public BOOLEAN PtpV2OverUdpIPv6AllMsgTransmitHw;
			public BOOLEAN AllReceiveHw;
			public BOOLEAN AllTransmitHw;
			public BOOLEAN TaggedTransmitHw;
			public BOOLEAN AllReceiveSw;
			public BOOLEAN AllTransmitSw;
			public BOOLEAN TaggedTransmitSw;
		}
		[CRepr]
		public struct NDIS_TIMESTAMP_CAPABILITIES
		{
			public NDIS_OBJECT_HEADER Header;
			public uint64 HardwareClockFrequencyHz;
			public BOOLEAN CrossTimestamp;
			public uint64 Reserved1;
			public uint64 Reserved2;
			public NDIS_TIMESTAMP_CAPABILITY_FLAGS TimestampFlags;
		}
		[CRepr]
		public struct NDIS_HARDWARE_CROSSTIMESTAMP
		{
			public NDIS_OBJECT_HEADER Header;
			public uint32 Flags;
			public uint64 SystemTimestamp1;
			public uint64 HardwareClockTimestamp;
			public uint64 SystemTimestamp2;
		}
		[CRepr]
		public struct NDK_VERSION
		{
			public uint16 Major;
			public uint16 Minor;
		}
		[CRepr]
		public struct NDK_ADAPTER_INFO
		{
			public NDK_VERSION Version;
			public uint32 VendorId;
			public uint32 DeviceId;
			public uint MaxRegistrationSize;
			public uint MaxWindowSize;
			public uint32 FRMRPageCount;
			public uint32 MaxInitiatorRequestSge;
			public uint32 MaxReceiveRequestSge;
			public uint32 MaxReadRequestSge;
			public uint32 MaxTransferLength;
			public uint32 MaxInlineDataSize;
			public uint32 MaxInboundReadLimit;
			public uint32 MaxOutboundReadLimit;
			public uint32 MaxReceiveQueueDepth;
			public uint32 MaxInitiatorQueueDepth;
			public uint32 MaxSrqDepth;
			public uint32 MaxCqDepth;
			public uint32 LargeRequestThreshold;
			public uint32 MaxCallerData;
			public uint32 MaxCalleeData;
			public uint32 AdapterFlags;
			public NDK_RDMA_TECHNOLOGY RdmaTechnology;
		}
		[CRepr]
		public struct DOT11_ADAPTER
		{
			public Guid gAdapterId;
			public PWSTR pszDescription;
			public DOT11_CURRENT_OPERATION_MODE Dot11CurrentOpMode;
		}
		[CRepr]
		public struct DOT11_BSS_LIST
		{
			public uint32 uNumOfBytes;
			public uint8* pucBuffer;
		}
		[CRepr]
		public struct DOT11_PORT_STATE
		{
			public uint8[6] PeerMacAddress;
			public uint32 uSessionId;
			public BOOL bPortControlled;
			public BOOL bPortAuthorized;
		}
		[CRepr, Packed(1)]
		public struct DOT11_SECURITY_PACKET_HEADER
		{
			public uint8[6] PeerMac;
			public uint16 usEtherType;
			public uint8[0] Data;
		}
		[CRepr]
		public struct DOT11_MSSECURITY_SETTINGS
		{
			public DOT11_AUTH_ALGORITHM dot11AuthAlgorithm;
			public DOT11_CIPHER_ALGORITHM dot11CipherAlgorithm;
			public BOOL fOneXEnabled;
			public EAP_METHOD_TYPE eapMethodType;
			public uint32 dwEapConnectionDataLen;
			public uint8* pEapConnectionData;
		}
		[CRepr]
		public struct DOT11EXT_IHV_SSID_LIST
		{
			public uint32 ulCount;
			public DOT11_SSID[0] SSIDs;
		}
		[CRepr]
		public struct DOT11EXT_IHV_PROFILE_PARAMS
		{
			public DOT11EXT_IHV_SSID_LIST* pSsidList;
			public DOT11_BSS_TYPE BssType;
			public DOT11_MSSECURITY_SETTINGS* pMSSecuritySettings;
		}
		[CRepr]
		public struct DOT11EXT_IHV_PARAMS
		{
			public DOT11EXT_IHV_PROFILE_PARAMS dot11ExtIhvProfileParams;
			public char16[256] wstrProfileName;
			public uint32 dwProfileTypeFlags;
			public Guid interfaceGuid;
		}
		[CRepr]
		public struct DOT11_IHV_VERSION_INFO
		{
			public uint32 dwVerMin;
			public uint32 dwVerMax;
		}
		[CRepr]
		public struct DOT11EXT_IHV_UI_REQUEST
		{
			public uint32 dwSessionId;
			public Guid guidUIRequest;
			public Guid UIPageClsid;
			public uint32 dwByteCount;
			public uint8* pvUIRequest;
		}
		[CRepr]
		public struct DOT11_EAP_RESULT
		{
			public uint32 dwFailureReasonCode;
			public EAP_ATTRIBUTES* pAttribArray;
		}
		[CRepr]
		public struct DOT11_MSONEX_RESULT_PARAMS
		{
			public ONEX_AUTH_STATUS Dot11OnexAuthStatus;
			public ONEX_REASON_CODE Dot11OneXReasonCode;
			public uint8* pbMPPESendKey;
			public uint32 dwMPPESendKeyLen;
			public uint8* pbMPPERecvKey;
			public uint32 dwMPPERecvKeyLen;
			public DOT11_EAP_RESULT* pDot11EapResult;
		}
		[CRepr]
		public struct DOT11EXT_IHV_CONNECTIVITY_PROFILE
		{
			public PWSTR pszXmlFragmentIhvConnectivity;
		}
		[CRepr]
		public struct DOT11EXT_IHV_SECURITY_PROFILE
		{
			public PWSTR pszXmlFragmentIhvSecurity;
			public BOOL bUseMSOnex;
		}
		[CRepr]
		public struct DOT11EXT_IHV_DISCOVERY_PROFILE
		{
			public DOT11EXT_IHV_CONNECTIVITY_PROFILE IhvConnectivityProfile;
			public DOT11EXT_IHV_SECURITY_PROFILE IhvSecurityProfile;
		}
		[CRepr]
		public struct DOT11EXT_IHV_DISCOVERY_PROFILE_LIST
		{
			public uint32 dwCount;
			public DOT11EXT_IHV_DISCOVERY_PROFILE* pIhvDiscoveryProfiles;
		}
		[CRepr]
		public struct DOT11EXT_VIRTUAL_STATION_AP_PROPERTY
		{
			public DOT11_SSID dot11SSID;
			public DOT11_AUTH_ALGORITHM dot11AuthAlgo;
			public DOT11_CIPHER_ALGORITHM dot11CipherAlgo;
			public BOOL bIsPassPhrase;
			public uint32 dwKeyLength;
			public uint8[64] ucKeyData;
		}
		[CRepr]
		public struct WDIAG_IHV_WLAN_ID
		{
			public char16[256] strProfileName;
			public DOT11_SSID Ssid;
			public DOT11_BSS_TYPE BssType;
			public uint32 dwFlags;
			public uint32 dwReasonCode;
		}
		[CRepr]
		public struct DOT11EXT_APIS
		{
			public DOT11EXT_ALLOCATE_BUFFER Dot11ExtAllocateBuffer;
			public DOT11EXT_FREE_BUFFER Dot11ExtFreeBuffer;
			public DOT11EXT_SET_PROFILE_CUSTOM_USER_DATA Dot11ExtSetProfileCustomUserData;
			public DOT11EXT_GET_PROFILE_CUSTOM_USER_DATA Dot11ExtGetProfileCustomUserData;
			public DOT11EXT_SET_CURRENT_PROFILE Dot11ExtSetCurrentProfile;
			public DOT11EXT_SEND_UI_REQUEST Dot11ExtSendUIRequest;
			public DOT11EXT_PRE_ASSOCIATE_COMPLETION Dot11ExtPreAssociateCompletion;
			public DOT11EXT_POST_ASSOCIATE_COMPLETION Dot11ExtPostAssociateCompletion;
			public DOT11EXT_SEND_NOTIFICATION Dot11ExtSendNotification;
			public DOT11EXT_SEND_PACKET Dot11ExtSendPacket;
			public DOT11EXT_SET_ETHERTYPE_HANDLING Dot11ExtSetEtherTypeHandling;
			public DOT11EXT_SET_AUTH_ALGORITHM Dot11ExtSetAuthAlgorithm;
			public DOT11EXT_SET_UNICAST_CIPHER_ALGORITHM Dot11ExtSetUnicastCipherAlgorithm;
			public DOT11EXT_SET_MULTICAST_CIPHER_ALGORITHM Dot11ExtSetMulticastCipherAlgorithm;
			public DOT11EXT_SET_DEFAULT_KEY Dot11ExtSetDefaultKey;
			public DOT11EXT_SET_KEY_MAPPING_KEY Dot11ExtSetKeyMappingKey;
			public DOT11EXT_SET_DEFAULT_KEY_ID Dot11ExtSetDefaultKeyId;
			public DOT11EXT_NIC_SPECIFIC_EXTENSION Dot11ExtNicSpecificExtension;
			public DOT11EXT_SET_EXCLUDE_UNENCRYPTED Dot11ExtSetExcludeUnencrypted;
			public DOT11EXT_ONEX_START Dot11ExtStartOneX;
			public DOT11EXT_ONEX_STOP Dot11ExtStopOneX;
			public DOT11EXT_PROCESS_ONEX_PACKET Dot11ExtProcessSecurityPacket;
		}
		[CRepr]
		public struct DOT11EXT_IHV_HANDLERS
		{
			public DOT11EXTIHV_DEINIT_SERVICE Dot11ExtIhvDeinitService;
			public DOT11EXTIHV_INIT_ADAPTER Dot11ExtIhvInitAdapter;
			public DOT11EXTIHV_DEINIT_ADAPTER Dot11ExtIhvDeinitAdapter;
			public DOT11EXTIHV_PERFORM_PRE_ASSOCIATE Dot11ExtIhvPerformPreAssociate;
			public DOT11EXTIHV_ADAPTER_RESET Dot11ExtIhvAdapterReset;
			public DOT11EXTIHV_PERFORM_POST_ASSOCIATE Dot11ExtIhvPerformPostAssociate;
			public DOT11EXTIHV_STOP_POST_ASSOCIATE Dot11ExtIhvStopPostAssociate;
			public DOT11EXTIHV_VALIDATE_PROFILE Dot11ExtIhvValidateProfile;
			public DOT11EXTIHV_PERFORM_CAPABILITY_MATCH Dot11ExtIhvPerformCapabilityMatch;
			public DOT11EXTIHV_CREATE_DISCOVERY_PROFILES Dot11ExtIhvCreateDiscoveryProfiles;
			public DOT11EXTIHV_PROCESS_SESSION_CHANGE Dot11ExtIhvProcessSessionChange;
			public DOT11EXTIHV_RECEIVE_INDICATION Dot11ExtIhvReceiveIndication;
			public DOT11EXTIHV_RECEIVE_PACKET Dot11ExtIhvReceivePacket;
			public DOT11EXTIHV_SEND_PACKET_COMPLETION Dot11ExtIhvSendPacketCompletion;
			public DOT11EXTIHV_IS_UI_REQUEST_PENDING Dot11ExtIhvIsUIRequestPending;
			public DOT11EXTIHV_PROCESS_UI_RESPONSE Dot11ExtIhvProcessUIResponse;
			public DOT11EXTIHV_QUERY_UI_REQUEST Dot11ExtIhvQueryUIRequest;
			public DOT11EXTIHV_ONEX_INDICATE_RESULT Dot11ExtIhvOnexIndicateResult;
			public DOT11EXTIHV_CONTROL Dot11ExtIhvControl;
		}
		[CRepr]
		public struct DOT11EXT_VIRTUAL_STATION_APIS
		{
			public DOT11EXT_REQUEST_VIRTUAL_STATION Dot11ExtRequestVirtualStation;
			public DOT11EXT_RELEASE_VIRTUAL_STATION Dot11ExtReleaseVirtualStation;
			public DOT11EXT_QUERY_VIRTUAL_STATION_PROPERTIES Dot11ExtQueryVirtualStationProperties;
			public DOT11EXT_SET_VIRTUAL_STATION_AP_PROPERTIES Dot11ExtSetVirtualStationAPProperties;
		}
		
	}
}

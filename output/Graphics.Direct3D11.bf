using System;

// namespace Graphics.Direct3D11
namespace Win32
{
	extension Win32
	{
		// --- Constants ---
		
		public const uint32 D3D11_16BIT_INDEX_STRIP_CUT_VALUE = 65535;
		public const uint32 D3D11_32BIT_INDEX_STRIP_CUT_VALUE = 4294967295;
		public const uint32 D3D11_8BIT_INDEX_STRIP_CUT_VALUE = 255;
		public const uint32 D3D11_ARRAY_AXIS_ADDRESS_RANGE_BIT_COUNT = 9;
		public const uint32 D3D11_CLIP_OR_CULL_DISTANCE_COUNT = 8;
		public const uint32 D3D11_CLIP_OR_CULL_DISTANCE_ELEMENT_COUNT = 2;
		public const uint32 D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT = 14;
		public const uint32 D3D11_COMMONSHADER_CONSTANT_BUFFER_COMPONENTS = 4;
		public const uint32 D3D11_COMMONSHADER_CONSTANT_BUFFER_COMPONENT_BIT_COUNT = 32;
		public const uint32 D3D11_COMMONSHADER_CONSTANT_BUFFER_HW_SLOT_COUNT = 15;
		public const uint32 D3D11_COMMONSHADER_CONSTANT_BUFFER_PARTIAL_UPDATE_EXTENTS_BYTE_ALIGNMENT = 16;
		public const uint32 D3D11_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COMPONENTS = 4;
		public const uint32 D3D11_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COUNT = 15;
		public const uint32 D3D11_COMMONSHADER_CONSTANT_BUFFER_REGISTER_READS_PER_INST = 1;
		public const uint32 D3D11_COMMONSHADER_CONSTANT_BUFFER_REGISTER_READ_PORTS = 1;
		public const uint32 D3D11_COMMONSHADER_FLOWCONTROL_NESTING_LIMIT = 64;
		public const uint32 D3D11_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_COMPONENTS = 4;
		public const uint32 D3D11_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_COUNT = 1;
		public const uint32 D3D11_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_READS_PER_INST = 1;
		public const uint32 D3D11_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_READ_PORTS = 1;
		public const uint32 D3D11_COMMONSHADER_IMMEDIATE_VALUE_COMPONENT_BIT_COUNT = 32;
		public const uint32 D3D11_COMMONSHADER_INPUT_RESOURCE_REGISTER_COMPONENTS = 1;
		public const uint32 D3D11_COMMONSHADER_INPUT_RESOURCE_REGISTER_COUNT = 128;
		public const uint32 D3D11_COMMONSHADER_INPUT_RESOURCE_REGISTER_READS_PER_INST = 1;
		public const uint32 D3D11_COMMONSHADER_INPUT_RESOURCE_REGISTER_READ_PORTS = 1;
		public const uint32 D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT = 128;
		public const uint32 D3D11_COMMONSHADER_SAMPLER_REGISTER_COMPONENTS = 1;
		public const uint32 D3D11_COMMONSHADER_SAMPLER_REGISTER_COUNT = 16;
		public const uint32 D3D11_COMMONSHADER_SAMPLER_REGISTER_READS_PER_INST = 1;
		public const uint32 D3D11_COMMONSHADER_SAMPLER_REGISTER_READ_PORTS = 1;
		public const uint32 D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT = 16;
		public const uint32 D3D11_COMMONSHADER_SUBROUTINE_NESTING_LIMIT = 32;
		public const uint32 D3D11_COMMONSHADER_TEMP_REGISTER_COMPONENTS = 4;
		public const uint32 D3D11_COMMONSHADER_TEMP_REGISTER_COMPONENT_BIT_COUNT = 32;
		public const uint32 D3D11_COMMONSHADER_TEMP_REGISTER_COUNT = 4096;
		public const uint32 D3D11_COMMONSHADER_TEMP_REGISTER_READS_PER_INST = 3;
		public const uint32 D3D11_COMMONSHADER_TEMP_REGISTER_READ_PORTS = 3;
		public const uint32 D3D11_COMMONSHADER_TEXCOORD_RANGE_REDUCTION_MAX = 10;
		public const int32 D3D11_COMMONSHADER_TEXCOORD_RANGE_REDUCTION_MIN = -10;
		public const int32 D3D11_COMMONSHADER_TEXEL_OFFSET_MAX_NEGATIVE = -8;
		public const uint32 D3D11_COMMONSHADER_TEXEL_OFFSET_MAX_POSITIVE = 7;
		public const uint32 D3D11_CS_4_X_BUCKET00_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 256;
		public const uint32 D3D11_CS_4_X_BUCKET00_MAX_NUM_THREADS_PER_GROUP = 64;
		public const uint32 D3D11_CS_4_X_BUCKET01_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 240;
		public const uint32 D3D11_CS_4_X_BUCKET01_MAX_NUM_THREADS_PER_GROUP = 68;
		public const uint32 D3D11_CS_4_X_BUCKET02_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 224;
		public const uint32 D3D11_CS_4_X_BUCKET02_MAX_NUM_THREADS_PER_GROUP = 72;
		public const uint32 D3D11_CS_4_X_BUCKET03_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 208;
		public const uint32 D3D11_CS_4_X_BUCKET03_MAX_NUM_THREADS_PER_GROUP = 76;
		public const uint32 D3D11_CS_4_X_BUCKET04_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 192;
		public const uint32 D3D11_CS_4_X_BUCKET04_MAX_NUM_THREADS_PER_GROUP = 84;
		public const uint32 D3D11_CS_4_X_BUCKET05_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 176;
		public const uint32 D3D11_CS_4_X_BUCKET05_MAX_NUM_THREADS_PER_GROUP = 92;
		public const uint32 D3D11_CS_4_X_BUCKET06_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 160;
		public const uint32 D3D11_CS_4_X_BUCKET06_MAX_NUM_THREADS_PER_GROUP = 100;
		public const uint32 D3D11_CS_4_X_BUCKET07_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 144;
		public const uint32 D3D11_CS_4_X_BUCKET07_MAX_NUM_THREADS_PER_GROUP = 112;
		public const uint32 D3D11_CS_4_X_BUCKET08_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 128;
		public const uint32 D3D11_CS_4_X_BUCKET08_MAX_NUM_THREADS_PER_GROUP = 128;
		public const uint32 D3D11_CS_4_X_BUCKET09_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 112;
		public const uint32 D3D11_CS_4_X_BUCKET09_MAX_NUM_THREADS_PER_GROUP = 144;
		public const uint32 D3D11_CS_4_X_BUCKET10_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 96;
		public const uint32 D3D11_CS_4_X_BUCKET10_MAX_NUM_THREADS_PER_GROUP = 168;
		public const uint32 D3D11_CS_4_X_BUCKET11_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 80;
		public const uint32 D3D11_CS_4_X_BUCKET11_MAX_NUM_THREADS_PER_GROUP = 204;
		public const uint32 D3D11_CS_4_X_BUCKET12_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 64;
		public const uint32 D3D11_CS_4_X_BUCKET12_MAX_NUM_THREADS_PER_GROUP = 256;
		public const uint32 D3D11_CS_4_X_BUCKET13_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 48;
		public const uint32 D3D11_CS_4_X_BUCKET13_MAX_NUM_THREADS_PER_GROUP = 340;
		public const uint32 D3D11_CS_4_X_BUCKET14_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 32;
		public const uint32 D3D11_CS_4_X_BUCKET14_MAX_NUM_THREADS_PER_GROUP = 512;
		public const uint32 D3D11_CS_4_X_BUCKET15_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 16;
		public const uint32 D3D11_CS_4_X_BUCKET15_MAX_NUM_THREADS_PER_GROUP = 768;
		public const uint32 D3D11_CS_4_X_DISPATCH_MAX_THREAD_GROUPS_IN_Z_DIMENSION = 1;
		public const uint32 D3D11_CS_4_X_RAW_UAV_BYTE_ALIGNMENT = 256;
		public const uint32 D3D11_CS_4_X_THREAD_GROUP_MAX_THREADS_PER_GROUP = 768;
		public const uint32 D3D11_CS_4_X_THREAD_GROUP_MAX_X = 768;
		public const uint32 D3D11_CS_4_X_THREAD_GROUP_MAX_Y = 768;
		public const uint32 D3D11_CS_4_X_UAV_REGISTER_COUNT = 1;
		public const uint32 D3D11_CS_DISPATCH_MAX_THREAD_GROUPS_PER_DIMENSION = 65535;
		public const uint32 D3D11_CS_TGSM_REGISTER_COUNT = 8192;
		public const uint32 D3D11_CS_TGSM_REGISTER_READS_PER_INST = 1;
		public const uint32 D3D11_CS_TGSM_RESOURCE_REGISTER_COMPONENTS = 1;
		public const uint32 D3D11_CS_TGSM_RESOURCE_REGISTER_READ_PORTS = 1;
		public const uint32 D3D11_CS_THREADGROUPID_REGISTER_COMPONENTS = 3;
		public const uint32 D3D11_CS_THREADGROUPID_REGISTER_COUNT = 1;
		public const uint32 D3D11_CS_THREADIDINGROUPFLATTENED_REGISTER_COMPONENTS = 1;
		public const uint32 D3D11_CS_THREADIDINGROUPFLATTENED_REGISTER_COUNT = 1;
		public const uint32 D3D11_CS_THREADIDINGROUP_REGISTER_COMPONENTS = 3;
		public const uint32 D3D11_CS_THREADIDINGROUP_REGISTER_COUNT = 1;
		public const uint32 D3D11_CS_THREADID_REGISTER_COMPONENTS = 3;
		public const uint32 D3D11_CS_THREADID_REGISTER_COUNT = 1;
		public const uint32 D3D11_CS_THREAD_GROUP_MAX_THREADS_PER_GROUP = 1024;
		public const uint32 D3D11_CS_THREAD_GROUP_MAX_X = 1024;
		public const uint32 D3D11_CS_THREAD_GROUP_MAX_Y = 1024;
		public const uint32 D3D11_CS_THREAD_GROUP_MAX_Z = 64;
		public const uint32 D3D11_CS_THREAD_GROUP_MIN_X = 1;
		public const uint32 D3D11_CS_THREAD_GROUP_MIN_Y = 1;
		public const uint32 D3D11_CS_THREAD_GROUP_MIN_Z = 1;
		public const uint32 D3D11_CS_THREAD_LOCAL_TEMP_REGISTER_POOL = 16384;
		public const float D3D11_DEFAULT_BLEND_FACTOR_ALPHA = 1f;
		public const float D3D11_DEFAULT_BLEND_FACTOR_BLUE = 1f;
		public const float D3D11_DEFAULT_BLEND_FACTOR_GREEN = 1f;
		public const float D3D11_DEFAULT_BLEND_FACTOR_RED = 1f;
		public const float D3D11_DEFAULT_BORDER_COLOR_COMPONENT = 0f;
		public const uint32 D3D11_DEFAULT_DEPTH_BIAS = 0;
		public const float D3D11_DEFAULT_DEPTH_BIAS_CLAMP = 0f;
		public const uint32 D3D11_DEFAULT_MAX_ANISOTROPY = 16;
		public const float D3D11_DEFAULT_MIP_LOD_BIAS = 0f;
		public const uint32 D3D11_DEFAULT_RENDER_TARGET_ARRAY_INDEX = 0;
		public const uint32 D3D11_DEFAULT_SAMPLE_MASK = 4294967295;
		public const uint32 D3D11_DEFAULT_SCISSOR_ENDX = 0;
		public const uint32 D3D11_DEFAULT_SCISSOR_ENDY = 0;
		public const uint32 D3D11_DEFAULT_SCISSOR_STARTX = 0;
		public const uint32 D3D11_DEFAULT_SCISSOR_STARTY = 0;
		public const float D3D11_DEFAULT_SLOPE_SCALED_DEPTH_BIAS = 0f;
		public const uint32 D3D11_DEFAULT_STENCIL_READ_MASK = 255;
		public const uint32 D3D11_DEFAULT_STENCIL_REFERENCE = 0;
		public const uint32 D3D11_DEFAULT_STENCIL_WRITE_MASK = 255;
		public const uint32 D3D11_DEFAULT_VIEWPORT_AND_SCISSORRECT_INDEX = 0;
		public const uint32 D3D11_DEFAULT_VIEWPORT_HEIGHT = 0;
		public const float D3D11_DEFAULT_VIEWPORT_MAX_DEPTH = 0f;
		public const float D3D11_DEFAULT_VIEWPORT_MIN_DEPTH = 0f;
		public const uint32 D3D11_DEFAULT_VIEWPORT_TOPLEFTX = 0;
		public const uint32 D3D11_DEFAULT_VIEWPORT_TOPLEFTY = 0;
		public const uint32 D3D11_DEFAULT_VIEWPORT_WIDTH = 0;
		public const uint32 D3D11_DS_INPUT_CONTROL_POINTS_MAX_TOTAL_SCALARS = 3968;
		public const uint32 D3D11_DS_INPUT_CONTROL_POINT_REGISTER_COMPONENTS = 4;
		public const uint32 D3D11_DS_INPUT_CONTROL_POINT_REGISTER_COMPONENT_BIT_COUNT = 32;
		public const uint32 D3D11_DS_INPUT_CONTROL_POINT_REGISTER_COUNT = 32;
		public const uint32 D3D11_DS_INPUT_CONTROL_POINT_REGISTER_READS_PER_INST = 2;
		public const uint32 D3D11_DS_INPUT_CONTROL_POINT_REGISTER_READ_PORTS = 1;
		public const uint32 D3D11_DS_INPUT_DOMAIN_POINT_REGISTER_COMPONENTS = 3;
		public const uint32 D3D11_DS_INPUT_DOMAIN_POINT_REGISTER_COMPONENT_BIT_COUNT = 32;
		public const uint32 D3D11_DS_INPUT_DOMAIN_POINT_REGISTER_COUNT = 1;
		public const uint32 D3D11_DS_INPUT_DOMAIN_POINT_REGISTER_READS_PER_INST = 2;
		public const uint32 D3D11_DS_INPUT_DOMAIN_POINT_REGISTER_READ_PORTS = 1;
		public const uint32 D3D11_DS_INPUT_PATCH_CONSTANT_REGISTER_COMPONENTS = 4;
		public const uint32 D3D11_DS_INPUT_PATCH_CONSTANT_REGISTER_COMPONENT_BIT_COUNT = 32;
		public const uint32 D3D11_DS_INPUT_PATCH_CONSTANT_REGISTER_COUNT = 32;
		public const uint32 D3D11_DS_INPUT_PATCH_CONSTANT_REGISTER_READS_PER_INST = 2;
		public const uint32 D3D11_DS_INPUT_PATCH_CONSTANT_REGISTER_READ_PORTS = 1;
		public const uint32 D3D11_DS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENTS = 1;
		public const uint32 D3D11_DS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENT_BIT_COUNT = 32;
		public const uint32 D3D11_DS_INPUT_PRIMITIVE_ID_REGISTER_COUNT = 1;
		public const uint32 D3D11_DS_INPUT_PRIMITIVE_ID_REGISTER_READS_PER_INST = 2;
		public const uint32 D3D11_DS_INPUT_PRIMITIVE_ID_REGISTER_READ_PORTS = 1;
		public const uint32 D3D11_DS_OUTPUT_REGISTER_COMPONENTS = 4;
		public const uint32 D3D11_DS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT = 32;
		public const uint32 D3D11_DS_OUTPUT_REGISTER_COUNT = 32;
		public const double D3D11_FLOAT16_FUSED_TOLERANCE_IN_ULP = 0.6;
		public const float D3D11_FLOAT32_MAX = 3.4028235e+38f;
		public const float D3D11_FLOAT32_TO_INTEGER_TOLERANCE_IN_ULP = 0.6f;
		public const float D3D11_FLOAT_TO_SRGB_EXPONENT_DENOMINATOR = 2.4f;
		public const float D3D11_FLOAT_TO_SRGB_EXPONENT_NUMERATOR = 1f;
		public const float D3D11_FLOAT_TO_SRGB_OFFSET = 0.055f;
		public const float D3D11_FLOAT_TO_SRGB_SCALE_1 = 12.92f;
		public const float D3D11_FLOAT_TO_SRGB_SCALE_2 = 1.055f;
		public const float D3D11_FLOAT_TO_SRGB_THRESHOLD = 0.0031308f;
		public const float D3D11_FTOI_INSTRUCTION_MAX_INPUT = 2147483600.0f;
		public const float D3D11_FTOI_INSTRUCTION_MIN_INPUT = -2147483600.0f;
		public const float D3D11_FTOU_INSTRUCTION_MAX_INPUT = 4294967300.0f;
		public const float D3D11_FTOU_INSTRUCTION_MIN_INPUT = 0f;
		public const uint32 D3D11_GS_INPUT_INSTANCE_ID_READS_PER_INST = 2;
		public const uint32 D3D11_GS_INPUT_INSTANCE_ID_READ_PORTS = 1;
		public const uint32 D3D11_GS_INPUT_INSTANCE_ID_REGISTER_COMPONENTS = 1;
		public const uint32 D3D11_GS_INPUT_INSTANCE_ID_REGISTER_COMPONENT_BIT_COUNT = 32;
		public const uint32 D3D11_GS_INPUT_INSTANCE_ID_REGISTER_COUNT = 1;
		public const uint32 D3D11_GS_INPUT_PRIM_CONST_REGISTER_COMPONENTS = 1;
		public const uint32 D3D11_GS_INPUT_PRIM_CONST_REGISTER_COMPONENT_BIT_COUNT = 32;
		public const uint32 D3D11_GS_INPUT_PRIM_CONST_REGISTER_COUNT = 1;
		public const uint32 D3D11_GS_INPUT_PRIM_CONST_REGISTER_READS_PER_INST = 2;
		public const uint32 D3D11_GS_INPUT_PRIM_CONST_REGISTER_READ_PORTS = 1;
		public const uint32 D3D11_GS_INPUT_REGISTER_COMPONENTS = 4;
		public const uint32 D3D11_GS_INPUT_REGISTER_COMPONENT_BIT_COUNT = 32;
		public const uint32 D3D11_GS_INPUT_REGISTER_COUNT = 32;
		public const uint32 D3D11_GS_INPUT_REGISTER_READS_PER_INST = 2;
		public const uint32 D3D11_GS_INPUT_REGISTER_READ_PORTS = 1;
		public const uint32 D3D11_GS_INPUT_REGISTER_VERTICES = 32;
		public const uint32 D3D11_GS_MAX_INSTANCE_COUNT = 32;
		public const uint32 D3D11_GS_MAX_OUTPUT_VERTEX_COUNT_ACROSS_INSTANCES = 1024;
		public const uint32 D3D11_GS_OUTPUT_ELEMENTS = 32;
		public const uint32 D3D11_GS_OUTPUT_REGISTER_COMPONENTS = 4;
		public const uint32 D3D11_GS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT = 32;
		public const uint32 D3D11_GS_OUTPUT_REGISTER_COUNT = 32;
		public const uint32 D3D11_HS_CONTROL_POINT_PHASE_INPUT_REGISTER_COUNT = 32;
		public const uint32 D3D11_HS_CONTROL_POINT_PHASE_OUTPUT_REGISTER_COUNT = 32;
		public const uint32 D3D11_HS_CONTROL_POINT_REGISTER_COMPONENTS = 4;
		public const uint32 D3D11_HS_CONTROL_POINT_REGISTER_COMPONENT_BIT_COUNT = 32;
		public const uint32 D3D11_HS_CONTROL_POINT_REGISTER_READS_PER_INST = 2;
		public const uint32 D3D11_HS_CONTROL_POINT_REGISTER_READ_PORTS = 1;
		public const uint32 D3D11_HS_FORK_PHASE_INSTANCE_COUNT_UPPER_BOUND = 4294967295;
		public const uint32 D3D11_HS_INPUT_FORK_INSTANCE_ID_REGISTER_COMPONENTS = 1;
		public const uint32 D3D11_HS_INPUT_FORK_INSTANCE_ID_REGISTER_COMPONENT_BIT_COUNT = 32;
		public const uint32 D3D11_HS_INPUT_FORK_INSTANCE_ID_REGISTER_COUNT = 1;
		public const uint32 D3D11_HS_INPUT_FORK_INSTANCE_ID_REGISTER_READS_PER_INST = 2;
		public const uint32 D3D11_HS_INPUT_FORK_INSTANCE_ID_REGISTER_READ_PORTS = 1;
		public const uint32 D3D11_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_COMPONENTS = 1;
		public const uint32 D3D11_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_COMPONENT_BIT_COUNT = 32;
		public const uint32 D3D11_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_COUNT = 1;
		public const uint32 D3D11_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_READS_PER_INST = 2;
		public const uint32 D3D11_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_READ_PORTS = 1;
		public const uint32 D3D11_HS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENTS = 1;
		public const uint32 D3D11_HS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENT_BIT_COUNT = 32;
		public const uint32 D3D11_HS_INPUT_PRIMITIVE_ID_REGISTER_COUNT = 1;
		public const uint32 D3D11_HS_INPUT_PRIMITIVE_ID_REGISTER_READS_PER_INST = 2;
		public const uint32 D3D11_HS_INPUT_PRIMITIVE_ID_REGISTER_READ_PORTS = 1;
		public const uint32 D3D11_HS_JOIN_PHASE_INSTANCE_COUNT_UPPER_BOUND = 4294967295;
		public const float D3D11_HS_MAXTESSFACTOR_LOWER_BOUND = 1f;
		public const float D3D11_HS_MAXTESSFACTOR_UPPER_BOUND = 64f;
		public const uint32 D3D11_HS_OUTPUT_CONTROL_POINTS_MAX_TOTAL_SCALARS = 3968;
		public const uint32 D3D11_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_COMPONENTS = 1;
		public const uint32 D3D11_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_COMPONENT_BIT_COUNT = 32;
		public const uint32 D3D11_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_COUNT = 1;
		public const uint32 D3D11_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_READS_PER_INST = 2;
		public const uint32 D3D11_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_READ_PORTS = 1;
		public const uint32 D3D11_HS_OUTPUT_PATCH_CONSTANT_REGISTER_COMPONENTS = 4;
		public const uint32 D3D11_HS_OUTPUT_PATCH_CONSTANT_REGISTER_COMPONENT_BIT_COUNT = 32;
		public const uint32 D3D11_HS_OUTPUT_PATCH_CONSTANT_REGISTER_COUNT = 32;
		public const uint32 D3D11_HS_OUTPUT_PATCH_CONSTANT_REGISTER_READS_PER_INST = 2;
		public const uint32 D3D11_HS_OUTPUT_PATCH_CONSTANT_REGISTER_READ_PORTS = 1;
		public const uint32 D3D11_HS_OUTPUT_PATCH_CONSTANT_REGISTER_SCALAR_COMPONENTS = 128;
		public const uint32 D3D11_IA_DEFAULT_INDEX_BUFFER_OFFSET_IN_BYTES = 0;
		public const uint32 D3D11_IA_DEFAULT_PRIMITIVE_TOPOLOGY = 0;
		public const uint32 D3D11_IA_DEFAULT_VERTEX_BUFFER_OFFSET_IN_BYTES = 0;
		public const uint32 D3D11_IA_INDEX_INPUT_RESOURCE_SLOT_COUNT = 1;
		public const uint32 D3D11_IA_INSTANCE_ID_BIT_COUNT = 32;
		public const uint32 D3D11_IA_INTEGER_ARITHMETIC_BIT_COUNT = 32;
		public const uint32 D3D11_IA_PATCH_MAX_CONTROL_POINT_COUNT = 32;
		public const uint32 D3D11_IA_PRIMITIVE_ID_BIT_COUNT = 32;
		public const uint32 D3D11_IA_VERTEX_ID_BIT_COUNT = 32;
		public const uint32 D3D11_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT = 32;
		public const uint32 D3D11_IA_VERTEX_INPUT_STRUCTURE_ELEMENTS_COMPONENTS = 128;
		public const uint32 D3D11_IA_VERTEX_INPUT_STRUCTURE_ELEMENT_COUNT = 32;
		public const uint32 D3D11_INTEGER_DIVIDE_BY_ZERO_QUOTIENT = 4294967295;
		public const uint32 D3D11_INTEGER_DIVIDE_BY_ZERO_REMAINDER = 4294967295;
		public const uint32 D3D11_KEEP_RENDER_TARGETS_AND_DEPTH_STENCIL = 4294967295;
		public const uint32 D3D11_KEEP_UNORDERED_ACCESS_VIEWS = 4294967295;
		public const float D3D11_LINEAR_GAMMA = 1f;
		public const uint32 D3D11_MAJOR_VERSION = 11;
		public const float D3D11_MAX_BORDER_COLOR_COMPONENT = 1f;
		public const float D3D11_MAX_DEPTH = 1f;
		public const uint32 D3D11_MAX_MAXANISOTROPY = 16;
		public const uint32 D3D11_MAX_MULTISAMPLE_SAMPLE_COUNT = 32;
		public const float D3D11_MAX_POSITION_VALUE = 3.4028236e+34f;
		public const uint32 D3D11_MAX_TEXTURE_DIMENSION_2_TO_EXP = 17;
		public const uint32 D3D11_MINOR_VERSION = 0;
		public const float D3D11_MIN_BORDER_COLOR_COMPONENT = 0f;
		public const float D3D11_MIN_DEPTH = 0f;
		public const uint32 D3D11_MIN_MAXANISOTROPY = 0;
		public const float D3D11_MIP_LOD_BIAS_MAX = 15.99f;
		public const float D3D11_MIP_LOD_BIAS_MIN = -16f;
		public const uint32 D3D11_MIP_LOD_FRACTIONAL_BIT_COUNT = 8;
		public const uint32 D3D11_MIP_LOD_RANGE_BIT_COUNT = 8;
		public const float D3D11_MULTISAMPLE_ANTIALIAS_LINE_WIDTH = 1.4f;
		public const uint32 D3D11_NONSAMPLE_FETCH_OUT_OF_RANGE_ACCESS_RESULT = 0;
		public const uint32 D3D11_PIXEL_ADDRESS_RANGE_BIT_COUNT = 15;
		public const uint32 D3D11_PRE_SCISSOR_PIXEL_ADDRESS_RANGE_BIT_COUNT = 16;
		public const uint32 D3D11_PS_CS_UAV_REGISTER_COMPONENTS = 1;
		public const uint32 D3D11_PS_CS_UAV_REGISTER_COUNT = 8;
		public const uint32 D3D11_PS_CS_UAV_REGISTER_READS_PER_INST = 1;
		public const uint32 D3D11_PS_CS_UAV_REGISTER_READ_PORTS = 1;
		public const uint32 D3D11_PS_FRONTFACING_DEFAULT_VALUE = 4294967295;
		public const uint32 D3D11_PS_FRONTFACING_FALSE_VALUE = 0;
		public const uint32 D3D11_PS_FRONTFACING_TRUE_VALUE = 4294967295;
		public const uint32 D3D11_PS_INPUT_REGISTER_COMPONENTS = 4;
		public const uint32 D3D11_PS_INPUT_REGISTER_COMPONENT_BIT_COUNT = 32;
		public const uint32 D3D11_PS_INPUT_REGISTER_COUNT = 32;
		public const uint32 D3D11_PS_INPUT_REGISTER_READS_PER_INST = 2;
		public const uint32 D3D11_PS_INPUT_REGISTER_READ_PORTS = 1;
		public const float D3D11_PS_LEGACY_PIXEL_CENTER_FRACTIONAL_COMPONENT = 0f;
		public const uint32 D3D11_PS_OUTPUT_DEPTH_REGISTER_COMPONENTS = 1;
		public const uint32 D3D11_PS_OUTPUT_DEPTH_REGISTER_COMPONENT_BIT_COUNT = 32;
		public const uint32 D3D11_PS_OUTPUT_DEPTH_REGISTER_COUNT = 1;
		public const uint32 D3D11_PS_OUTPUT_MASK_REGISTER_COMPONENTS = 1;
		public const uint32 D3D11_PS_OUTPUT_MASK_REGISTER_COMPONENT_BIT_COUNT = 32;
		public const uint32 D3D11_PS_OUTPUT_MASK_REGISTER_COUNT = 1;
		public const uint32 D3D11_PS_OUTPUT_REGISTER_COMPONENTS = 4;
		public const uint32 D3D11_PS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT = 32;
		public const uint32 D3D11_PS_OUTPUT_REGISTER_COUNT = 8;
		public const float D3D11_PS_PIXEL_CENTER_FRACTIONAL_COMPONENT = 0.5f;
		public const uint32 D3D11_RAW_UAV_SRV_BYTE_ALIGNMENT = 16;
		public const uint32 D3D11_REQ_BLEND_OBJECT_COUNT_PER_DEVICE = 4096;
		public const uint32 D3D11_REQ_BUFFER_RESOURCE_TEXEL_COUNT_2_TO_EXP = 27;
		public const uint32 D3D11_REQ_CONSTANT_BUFFER_ELEMENT_COUNT = 4096;
		public const uint32 D3D11_REQ_DEPTH_STENCIL_OBJECT_COUNT_PER_DEVICE = 4096;
		public const uint32 D3D11_REQ_DRAWINDEXED_INDEX_COUNT_2_TO_EXP = 32;
		public const uint32 D3D11_REQ_DRAW_VERTEX_COUNT_2_TO_EXP = 32;
		public const uint32 D3D11_REQ_FILTERING_HW_ADDRESSABLE_RESOURCE_DIMENSION = 16384;
		public const uint32 D3D11_REQ_GS_INVOCATION_32BIT_OUTPUT_COMPONENT_LIMIT = 1024;
		public const uint32 D3D11_REQ_IMMEDIATE_CONSTANT_BUFFER_ELEMENT_COUNT = 4096;
		public const uint32 D3D11_REQ_MAXANISOTROPY = 16;
		public const uint32 D3D11_REQ_MIP_LEVELS = 15;
		public const uint32 D3D11_REQ_MULTI_ELEMENT_STRUCTURE_SIZE_IN_BYTES = 2048;
		public const uint32 D3D11_REQ_RASTERIZER_OBJECT_COUNT_PER_DEVICE = 4096;
		public const uint32 D3D11_REQ_RENDER_TO_BUFFER_WINDOW_WIDTH = 16384;
		public const uint32 D3D11_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_A_TERM = 128;
		public const float D3D11_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_B_TERM = 0.25f;
		public const uint32 D3D11_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_C_TERM = 2048;
		public const uint32 D3D11_REQ_RESOURCE_VIEW_COUNT_PER_DEVICE_2_TO_EXP = 20;
		public const uint32 D3D11_REQ_SAMPLER_OBJECT_COUNT_PER_DEVICE = 4096;
		public const uint32 D3D11_REQ_TEXTURE1D_ARRAY_AXIS_DIMENSION = 2048;
		public const uint32 D3D11_REQ_TEXTURE1D_U_DIMENSION = 16384;
		public const uint32 D3D11_REQ_TEXTURE2D_ARRAY_AXIS_DIMENSION = 2048;
		public const uint32 D3D11_REQ_TEXTURE2D_U_OR_V_DIMENSION = 16384;
		public const uint32 D3D11_REQ_TEXTURE3D_U_V_OR_W_DIMENSION = 2048;
		public const uint32 D3D11_REQ_TEXTURECUBE_DIMENSION = 16384;
		public const uint32 D3D11_RESINFO_INSTRUCTION_MISSING_COMPONENT_RETVAL = 0;
		public const uint32 D3D11_SHADER_MAJOR_VERSION = 5;
		public const uint32 D3D11_SHADER_MAX_INSTANCES = 65535;
		public const uint32 D3D11_SHADER_MAX_INTERFACES = 253;
		public const uint32 D3D11_SHADER_MAX_INTERFACE_CALL_SITES = 4096;
		public const uint32 D3D11_SHADER_MAX_TYPES = 65535;
		public const uint32 D3D11_SHADER_MINOR_VERSION = 0;
		public const uint32 D3D11_SHIFT_INSTRUCTION_PAD_VALUE = 0;
		public const uint32 D3D11_SHIFT_INSTRUCTION_SHIFT_VALUE_BIT_COUNT = 5;
		public const uint32 D3D11_SIMULTANEOUS_RENDER_TARGET_COUNT = 8;
		public const uint32 D3D11_SO_BUFFER_MAX_STRIDE_IN_BYTES = 2048;
		public const uint32 D3D11_SO_BUFFER_MAX_WRITE_WINDOW_IN_BYTES = 512;
		public const uint32 D3D11_SO_BUFFER_SLOT_COUNT = 4;
		public const uint32 D3D11_SO_DDI_REGISTER_INDEX_DENOTING_GAP = 4294967295;
		public const uint32 D3D11_SO_NO_RASTERIZED_STREAM = 4294967295;
		public const uint32 D3D11_SO_OUTPUT_COMPONENT_COUNT = 128;
		public const uint32 D3D11_SO_STREAM_COUNT = 4;
		public const uint32 D3D11_SPEC_DATE_DAY = 16;
		public const uint32 D3D11_SPEC_DATE_MONTH = 5;
		public const uint32 D3D11_SPEC_DATE_YEAR = 2011;
		public const double D3D11_SPEC_VERSION = 1.07;
		public const float D3D11_SRGB_GAMMA = 2.2f;
		public const float D3D11_SRGB_TO_FLOAT_DENOMINATOR_1 = 12.92f;
		public const float D3D11_SRGB_TO_FLOAT_DENOMINATOR_2 = 1.055f;
		public const float D3D11_SRGB_TO_FLOAT_EXPONENT = 2.4f;
		public const float D3D11_SRGB_TO_FLOAT_OFFSET = 0.055f;
		public const float D3D11_SRGB_TO_FLOAT_THRESHOLD = 0.04045f;
		public const float D3D11_SRGB_TO_FLOAT_TOLERANCE_IN_ULP = 0.5f;
		public const uint32 D3D11_STANDARD_COMPONENT_BIT_COUNT = 32;
		public const uint32 D3D11_STANDARD_COMPONENT_BIT_COUNT_DOUBLED = 64;
		public const uint32 D3D11_STANDARD_MAXIMUM_ELEMENT_ALIGNMENT_BYTE_MULTIPLE = 4;
		public const uint32 D3D11_STANDARD_PIXEL_COMPONENT_COUNT = 128;
		public const uint32 D3D11_STANDARD_PIXEL_ELEMENT_COUNT = 32;
		public const uint32 D3D11_STANDARD_VECTOR_SIZE = 4;
		public const uint32 D3D11_STANDARD_VERTEX_ELEMENT_COUNT = 32;
		public const uint32 D3D11_STANDARD_VERTEX_TOTAL_COMPONENT_COUNT = 64;
		public const uint32 D3D11_SUBPIXEL_FRACTIONAL_BIT_COUNT = 8;
		public const uint32 D3D11_SUBTEXEL_FRACTIONAL_BIT_COUNT = 8;
		public const uint32 D3D11_TESSELLATOR_MAX_EVEN_TESSELLATION_FACTOR = 64;
		public const uint32 D3D11_TESSELLATOR_MAX_ISOLINE_DENSITY_TESSELLATION_FACTOR = 64;
		public const uint32 D3D11_TESSELLATOR_MAX_ODD_TESSELLATION_FACTOR = 63;
		public const uint32 D3D11_TESSELLATOR_MAX_TESSELLATION_FACTOR = 64;
		public const uint32 D3D11_TESSELLATOR_MIN_EVEN_TESSELLATION_FACTOR = 2;
		public const uint32 D3D11_TESSELLATOR_MIN_ISOLINE_DENSITY_TESSELLATION_FACTOR = 1;
		public const uint32 D3D11_TESSELLATOR_MIN_ODD_TESSELLATION_FACTOR = 1;
		public const uint32 D3D11_TEXEL_ADDRESS_RANGE_BIT_COUNT = 16;
		public const uint32 D3D11_UNBOUND_MEMORY_ACCESS_RESULT = 0;
		public const uint32 D3D11_VIEWPORT_AND_SCISSORRECT_MAX_INDEX = 15;
		public const uint32 D3D11_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE = 16;
		public const uint32 D3D11_VIEWPORT_BOUNDS_MAX = 32767;
		public const int32 D3D11_VIEWPORT_BOUNDS_MIN = -32768;
		public const uint32 D3D11_VS_INPUT_REGISTER_COMPONENTS = 4;
		public const uint32 D3D11_VS_INPUT_REGISTER_COMPONENT_BIT_COUNT = 32;
		public const uint32 D3D11_VS_INPUT_REGISTER_COUNT = 32;
		public const uint32 D3D11_VS_INPUT_REGISTER_READS_PER_INST = 2;
		public const uint32 D3D11_VS_INPUT_REGISTER_READ_PORTS = 1;
		public const uint32 D3D11_VS_OUTPUT_REGISTER_COMPONENTS = 4;
		public const uint32 D3D11_VS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT = 32;
		public const uint32 D3D11_VS_OUTPUT_REGISTER_COUNT = 32;
		public const uint32 D3D11_WHQL_CONTEXT_COUNT_FOR_RESOURCE_LIMIT = 10;
		public const uint32 D3D11_WHQL_DRAWINDEXED_INDEX_COUNT_2_TO_EXP = 25;
		public const uint32 D3D11_WHQL_DRAW_VERTEX_COUNT_2_TO_EXP = 25;
		public const uint32 D3D11_1_UAV_SLOT_COUNT = 64;
		public const uint32 D3D11_2_TILED_RESOURCE_TILE_SIZE_IN_BYTES = 65536;
		public const uint32 D3D11_4_VIDEO_DECODER_MAX_HISTOGRAM_COMPONENTS = 4;
		public const uint32 D3D11_4_VIDEO_DECODER_HISTOGRAM_OFFSET_ALIGNMENT = 256;
		public const uint32 _FACD3D11 = 2172;
		public const uint32 D3D11_APPEND_ALIGNED_ELEMENT = 4294967295;
		public const uint32 D3D11_FILTER_REDUCTION_TYPE_MASK = 3;
		public const uint32 D3D11_FILTER_REDUCTION_TYPE_SHIFT = 7;
		public const uint32 D3D11_FILTER_TYPE_MASK = 3;
		public const uint32 D3D11_MIN_FILTER_SHIFT = 4;
		public const uint32 D3D11_MAG_FILTER_SHIFT = 2;
		public const uint32 D3D11_MIP_FILTER_SHIFT = 0;
		public const uint32 D3D11_COMPARISON_FILTERING_BIT = 128;
		public const uint32 D3D11_ANISOTROPIC_FILTERING_BIT = 64;
		public const Guid D3D11_DECODER_PROFILE_MPEG2_MOCOMP = .(0xe6a9f44b, 0x61b0, 0x4563, 0x9e, 0xa4, 0x63, 0xd2, 0xa3, 0xc6, 0xfe, 0x66);
		public const Guid D3D11_DECODER_PROFILE_MPEG2_IDCT = .(0xbf22ad00, 0x03ea, 0x4690, 0x80, 0x77, 0x47, 0x33, 0x46, 0x20, 0x9b, 0x7e);
		public const Guid D3D11_DECODER_PROFILE_MPEG2_VLD = .(0xee27417f, 0x5e28, 0x4e65, 0xbe, 0xea, 0x1d, 0x26, 0xb5, 0x08, 0xad, 0xc9);
		public const Guid D3D11_DECODER_PROFILE_MPEG1_VLD = .(0x6f3ec719, 0x3735, 0x42cc, 0x80, 0x63, 0x65, 0xcc, 0x3c, 0xb3, 0x66, 0x16);
		public const Guid D3D11_DECODER_PROFILE_MPEG2and1_VLD = .(0x86695f12, 0x340e, 0x4f04, 0x9f, 0xd3, 0x92, 0x53, 0xdd, 0x32, 0x74, 0x60);
		public const Guid D3D11_DECODER_PROFILE_H264_MOCOMP_NOFGT = .(0x1b81be64, 0xa0c7, 0x11d3, 0xb9, 0x84, 0x00, 0xc0, 0x4f, 0x2e, 0x73, 0xc5);
		public const Guid D3D11_DECODER_PROFILE_H264_MOCOMP_FGT = .(0x1b81be65, 0xa0c7, 0x11d3, 0xb9, 0x84, 0x00, 0xc0, 0x4f, 0x2e, 0x73, 0xc5);
		public const Guid D3D11_DECODER_PROFILE_H264_IDCT_NOFGT = .(0x1b81be66, 0xa0c7, 0x11d3, 0xb9, 0x84, 0x00, 0xc0, 0x4f, 0x2e, 0x73, 0xc5);
		public const Guid D3D11_DECODER_PROFILE_H264_IDCT_FGT = .(0x1b81be67, 0xa0c7, 0x11d3, 0xb9, 0x84, 0x00, 0xc0, 0x4f, 0x2e, 0x73, 0xc5);
		public const Guid D3D11_DECODER_PROFILE_H264_VLD_NOFGT = .(0x1b81be68, 0xa0c7, 0x11d3, 0xb9, 0x84, 0x00, 0xc0, 0x4f, 0x2e, 0x73, 0xc5);
		public const Guid D3D11_DECODER_PROFILE_H264_VLD_FGT = .(0x1b81be69, 0xa0c7, 0x11d3, 0xb9, 0x84, 0x00, 0xc0, 0x4f, 0x2e, 0x73, 0xc5);
		public const Guid D3D11_DECODER_PROFILE_H264_VLD_WITHFMOASO_NOFGT = .(0xd5f04ff9, 0x3418, 0x45d8, 0x95, 0x61, 0x32, 0xa7, 0x6a, 0xae, 0x2d, 0xdd);
		public const Guid D3D11_DECODER_PROFILE_H264_VLD_STEREO_PROGRESSIVE_NOFGT = .(0xd79be8da, 0x0cf1, 0x4c81, 0xb8, 0x2a, 0x69, 0xa4, 0xe2, 0x36, 0xf4, 0x3d);
		public const Guid D3D11_DECODER_PROFILE_H264_VLD_STEREO_NOFGT = .(0xf9aaccbb, 0xc2b6, 0x4cfc, 0x87, 0x79, 0x57, 0x07, 0xb1, 0x76, 0x05, 0x52);
		public const Guid D3D11_DECODER_PROFILE_H264_VLD_MULTIVIEW_NOFGT = .(0x705b9d82, 0x76cf, 0x49d6, 0xb7, 0xe6, 0xac, 0x88, 0x72, 0xdb, 0x01, 0x3c);
		public const Guid D3D11_DECODER_PROFILE_WMV8_POSTPROC = .(0x1b81be80, 0xa0c7, 0x11d3, 0xb9, 0x84, 0x00, 0xc0, 0x4f, 0x2e, 0x73, 0xc5);
		public const Guid D3D11_DECODER_PROFILE_WMV8_MOCOMP = .(0x1b81be81, 0xa0c7, 0x11d3, 0xb9, 0x84, 0x00, 0xc0, 0x4f, 0x2e, 0x73, 0xc5);
		public const Guid D3D11_DECODER_PROFILE_WMV9_POSTPROC = .(0x1b81be90, 0xa0c7, 0x11d3, 0xb9, 0x84, 0x00, 0xc0, 0x4f, 0x2e, 0x73, 0xc5);
		public const Guid D3D11_DECODER_PROFILE_WMV9_MOCOMP = .(0x1b81be91, 0xa0c7, 0x11d3, 0xb9, 0x84, 0x00, 0xc0, 0x4f, 0x2e, 0x73, 0xc5);
		public const Guid D3D11_DECODER_PROFILE_WMV9_IDCT = .(0x1b81be94, 0xa0c7, 0x11d3, 0xb9, 0x84, 0x00, 0xc0, 0x4f, 0x2e, 0x73, 0xc5);
		public const Guid D3D11_DECODER_PROFILE_VC1_POSTPROC = .(0x1b81bea0, 0xa0c7, 0x11d3, 0xb9, 0x84, 0x00, 0xc0, 0x4f, 0x2e, 0x73, 0xc5);
		public const Guid D3D11_DECODER_PROFILE_VC1_MOCOMP = .(0x1b81bea1, 0xa0c7, 0x11d3, 0xb9, 0x84, 0x00, 0xc0, 0x4f, 0x2e, 0x73, 0xc5);
		public const Guid D3D11_DECODER_PROFILE_VC1_IDCT = .(0x1b81bea2, 0xa0c7, 0x11d3, 0xb9, 0x84, 0x00, 0xc0, 0x4f, 0x2e, 0x73, 0xc5);
		public const Guid D3D11_DECODER_PROFILE_VC1_VLD = .(0x1b81bea3, 0xa0c7, 0x11d3, 0xb9, 0x84, 0x00, 0xc0, 0x4f, 0x2e, 0x73, 0xc5);
		public const Guid D3D11_DECODER_PROFILE_VC1_D2010 = .(0x1b81bea4, 0xa0c7, 0x11d3, 0xb9, 0x84, 0x00, 0xc0, 0x4f, 0x2e, 0x73, 0xc5);
		public const Guid D3D11_DECODER_PROFILE_MPEG4PT2_VLD_SIMPLE = .(0xefd64d74, 0xc9e8, 0x41d7, 0xa5, 0xe9, 0xe9, 0xb0, 0xe3, 0x9f, 0xa3, 0x19);
		public const Guid D3D11_DECODER_PROFILE_MPEG4PT2_VLD_ADVSIMPLE_NOGMC = .(0xed418a9f, 0x010d, 0x4eda, 0x9a, 0xe3, 0x9a, 0x65, 0x35, 0x8d, 0x8d, 0x2e);
		public const Guid D3D11_DECODER_PROFILE_MPEG4PT2_VLD_ADVSIMPLE_GMC = .(0xab998b5b, 0x4258, 0x44a9, 0x9f, 0xeb, 0x94, 0xe5, 0x97, 0xa6, 0xba, 0xae);
		public const Guid D3D11_DECODER_PROFILE_HEVC_VLD_MAIN = .(0x5b11d51b, 0x2f4c, 0x4452, 0xbc, 0xc3, 0x09, 0xf2, 0xa1, 0x16, 0x0c, 0xc0);
		public const Guid D3D11_DECODER_PROFILE_HEVC_VLD_MAIN10 = .(0x107af0e0, 0xef1a, 0x4d19, 0xab, 0xa8, 0x67, 0xa1, 0x63, 0x07, 0x3d, 0x13);
		public const Guid D3D11_DECODER_PROFILE_VP9_VLD_PROFILE0 = .(0x463707f8, 0xa1d0, 0x4585, 0x87, 0x6d, 0x83, 0xaa, 0x6d, 0x60, 0xb8, 0x9e);
		public const Guid D3D11_DECODER_PROFILE_VP9_VLD_10BIT_PROFILE2 = .(0xa4c749ef, 0x6ecf, 0x48aa, 0x84, 0x48, 0x50, 0xa7, 0xa1, 0x16, 0x5f, 0xf7);
		public const Guid D3D11_DECODER_PROFILE_VP8_VLD = .(0x90b899ea, 0x3a62, 0x4705, 0x88, 0xb3, 0x8d, 0xf0, 0x4b, 0x27, 0x44, 0xe7);
		public const Guid D3D11_DECODER_PROFILE_AV1_VLD_PROFILE0 = .(0xb8be4ccb, 0xcf53, 0x46ba, 0x8d, 0x59, 0xd6, 0xb8, 0xa6, 0xda, 0x5d, 0x2a);
		public const Guid D3D11_DECODER_PROFILE_AV1_VLD_PROFILE1 = .(0x6936ff0f, 0x45b1, 0x4163, 0x9c, 0xc1, 0x64, 0x6e, 0xf6, 0x94, 0x61, 0x08);
		public const Guid D3D11_DECODER_PROFILE_AV1_VLD_PROFILE2 = .(0x0c5f2aa1, 0xe541, 0x4089, 0xbb, 0x7b, 0x98, 0x11, 0x0a, 0x19, 0xd7, 0xc8);
		public const Guid D3D11_DECODER_PROFILE_AV1_VLD_12BIT_PROFILE2 = .(0x17127009, 0xa00f, 0x4ce1, 0x99, 0x4e, 0xbf, 0x40, 0x81, 0xf6, 0xf3, 0xf0);
		public const Guid D3D11_DECODER_PROFILE_AV1_VLD_12BIT_PROFILE2_420 = .(0x2d80bed6, 0x9cac, 0x4835, 0x9e, 0x91, 0x32, 0x7b, 0xbc, 0x4f, 0x9e, 0xe8);
		public const Guid D3D11_CRYPTO_TYPE_AES128_CTR = .(0x9b6bd711, 0x4f74, 0x41c9, 0x9e, 0x7b, 0x0b, 0xe2, 0xd7, 0xd9, 0x3b, 0x4f);
		public const Guid D3D11_DECODER_ENCRYPTION_HW_CENC = .(0x89d6ac4f, 0x09f2, 0x4229, 0xb2, 0xcd, 0x37, 0x74, 0x0a, 0x6d, 0xfd, 0x81);
		public const Guid D3D11_DECODER_BITSTREAM_ENCRYPTION_TYPE_CENC = .(0xb0405235, 0xc13d, 0x44f2, 0x9a, 0xe5, 0xdd, 0x48, 0xe0, 0x8e, 0x5b, 0x67);
		public const Guid D3D11_DECODER_BITSTREAM_ENCRYPTION_TYPE_CBCS = .(0x422d9319, 0x9d21, 0x4bb7, 0x93, 0x71, 0xfa, 0xf5, 0xa8, 0x2c, 0x3e, 0x04);
		public const Guid D3D11_KEY_EXCHANGE_HW_PROTECTION = .(0xb1170d8a, 0x628d, 0x4da3, 0xad, 0x3b, 0x82, 0xdd, 0xb0, 0x8b, 0x49, 0x70);
		public const Guid D3D11_AUTHENTICATED_QUERY_PROTECTION = .(0xa84eb584, 0xc495, 0x48aa, 0xb9, 0x4d, 0x8b, 0xd2, 0xd6, 0xfb, 0xce, 0x05);
		public const Guid D3D11_AUTHENTICATED_QUERY_CHANNEL_TYPE = .(0xbc1b18a5, 0xb1fb, 0x42ab, 0xbd, 0x94, 0xb5, 0x82, 0x8b, 0x4b, 0xf7, 0xbe);
		public const Guid D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE = .(0xec1c539d, 0x8cff, 0x4e2a, 0xbc, 0xc4, 0xf5, 0x69, 0x2f, 0x99, 0xf4, 0x80);
		public const Guid D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION = .(0x2634499e, 0xd018, 0x4d74, 0xac, 0x17, 0x7f, 0x72, 0x40, 0x59, 0x52, 0x8d);
		public const Guid D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_COUNT = .(0x0db207b3, 0x9450, 0x46a6, 0x82, 0xde, 0x1b, 0x96, 0xd4, 0x4f, 0x9c, 0xf2);
		public const Guid D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS = .(0x649bbadb, 0xf0f4, 0x4639, 0xa1, 0x5b, 0x24, 0x39, 0x3f, 0xc3, 0xab, 0xac);
		public const Guid D3D11_AUTHENTICATED_QUERY_UNRESTRICTED_PROTECTED_SHARED_RESOURCE_COUNT = .(0x012f0bd6, 0xe662, 0x4474, 0xbe, 0xfd, 0xaa, 0x53, 0xe5, 0x14, 0x3c, 0x6d);
		public const Guid D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT = .(0x2c042b5e, 0x8c07, 0x46d5, 0xaa, 0xbe, 0x8f, 0x75, 0xcb, 0xad, 0x4c, 0x31);
		public const Guid D3D11_AUTHENTICATED_QUERY_OUTPUT_ID = .(0x839ddca3, 0x9b4e, 0x41e4, 0xb0, 0x53, 0x89, 0x2b, 0xd2, 0xa1, 0x1e, 0xe7);
		public const Guid D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ATTRIBUTES = .(0x6214d9d2, 0x432c, 0x4abb, 0x9f, 0xce, 0x21, 0x6e, 0xea, 0x26, 0x9e, 0x3b);
		public const Guid D3D11_AUTHENTICATED_QUERY_ENCRYPTION_WHEN_ACCESSIBLE_GUID_COUNT = .(0xb30f7066, 0x203c, 0x4b07, 0x93, 0xfc, 0xce, 0xaa, 0xfd, 0x61, 0x24, 0x1e);
		public const Guid D3D11_AUTHENTICATED_QUERY_ENCRYPTION_WHEN_ACCESSIBLE_GUID = .(0xf83a5958, 0xe986, 0x4bda, 0xbe, 0xb0, 0x41, 0x1f, 0x6a, 0x7a, 0x01, 0xb7);
		public const Guid D3D11_AUTHENTICATED_QUERY_CURRENT_ENCRYPTION_WHEN_ACCESSIBLE = .(0xec1791c7, 0xdad3, 0x4f15, 0x9e, 0xc3, 0xfa, 0xa9, 0x3d, 0x60, 0xd4, 0xf0);
		public const Guid D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE = .(0x06114bdb, 0x3523, 0x470a, 0x8d, 0xca, 0xfb, 0xc2, 0x84, 0x51, 0x54, 0xf0);
		public const Guid D3D11_AUTHENTICATED_CONFIGURE_PROTECTION = .(0x50455658, 0x3f47, 0x4362, 0xbf, 0x99, 0xbf, 0xdf, 0xcd, 0xe9, 0xed, 0x29);
		public const Guid D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION = .(0x6346cc54, 0x2cfc, 0x4ad4, 0x82, 0x24, 0xd1, 0x58, 0x37, 0xde, 0x77, 0x00);
		public const Guid D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE = .(0x0772d047, 0x1b40, 0x48e8, 0x9c, 0xa6, 0xb5, 0xf5, 0x10, 0xde, 0x9f, 0x01);
		public const Guid D3D11_AUTHENTICATED_CONFIGURE_ENCRYPTION_WHEN_ACCESSIBLE = .(0x41fff286, 0x6ae0, 0x4d43, 0x9d, 0x55, 0xa4, 0x6e, 0x9e, 0xfd, 0x15, 0x8a);
		public const Guid D3D11_KEY_EXCHANGE_RSAES_OAEP = .(0xc1949895, 0xd72a, 0x4a1d, 0x8e, 0x5d, 0xed, 0x85, 0x7d, 0x17, 0x15, 0x20);
		public const uint32 D3D11_SDK_VERSION = 7;
		public const uint32 D3D11_PACKED_TILE = 4294967295;
		public const uint32 D3D11_SDK_LAYERS_VERSION = 1;
		public const uint32 D3D11_DEBUG_FEATURE_FLUSH_PER_RENDER_OP = 1;
		public const uint32 D3D11_DEBUG_FEATURE_FINISH_PER_RENDER_OP = 2;
		public const uint32 D3D11_DEBUG_FEATURE_PRESENT_PER_RENDER_OP = 4;
		public const uint32 D3D11_DEBUG_FEATURE_ALWAYS_DISCARD_OFFERED_RESOURCE = 8;
		public const uint32 D3D11_DEBUG_FEATURE_NEVER_DISCARD_OFFERED_RESOURCE = 16;
		public const uint32 D3D11_DEBUG_FEATURE_AVOID_BEHAVIOR_CHANGING_DEBUG_AIDS = 64;
		public const uint32 D3D11_DEBUG_FEATURE_DISABLE_TILED_RESOURCE_MAPPING_TRACKING_AND_VALIDATION = 128;
		public const Guid DXGI_DEBUG_D3D11 = .(0x4b99317b, 0xac39, 0x4aa6, 0xbb, 0x0b, 0xba, 0xa0, 0x47, 0x84, 0x79, 0x8f);
		public const uint32 D3D11_INFO_QUEUE_DEFAULT_MESSAGE_COUNT_LIMIT = 1024;
		public const int32 D3D_RETURN_PARAMETER_INDEX = -1;
		public const uint32 D3D_SHADER_REQUIRES_DOUBLES = 1;
		public const uint32 D3D_SHADER_REQUIRES_EARLY_DEPTH_STENCIL = 2;
		public const uint32 D3D_SHADER_REQUIRES_UAVS_AT_EVERY_STAGE = 4;
		public const uint32 D3D_SHADER_REQUIRES_64_UAVS = 8;
		public const uint32 D3D_SHADER_REQUIRES_MINIMUM_PRECISION = 16;
		public const uint32 D3D_SHADER_REQUIRES_11_1_DOUBLE_EXTENSIONS = 32;
		public const uint32 D3D_SHADER_REQUIRES_11_1_SHADER_EXTENSIONS = 64;
		public const uint32 D3D_SHADER_REQUIRES_LEVEL_9_COMPARISON_FILTERING = 128;
		public const uint32 D3D_SHADER_REQUIRES_TILED_RESOURCES = 256;
		public const uint32 D3D11_TRACE_COMPONENT_X = 1;
		public const uint32 D3D11_TRACE_COMPONENT_Y = 2;
		public const uint32 D3D11_TRACE_COMPONENT_Z = 4;
		public const uint32 D3D11_TRACE_COMPONENT_W = 8;
		public const uint32 D3D11_SHADER_TRACE_FLAG_RECORD_REGISTER_WRITES = 1;
		public const uint32 D3D11_SHADER_TRACE_FLAG_RECORD_REGISTER_READS = 2;
		public const uint32 D3D11_TRACE_REGISTER_FLAGS_RELATIVE_INDEXING = 1;
		public const uint32 D3D11_TRACE_MISC_GS_EMIT = 1;
		public const uint32 D3D11_TRACE_MISC_GS_CUT = 2;
		public const uint32 D3D11_TRACE_MISC_PS_DISCARD = 4;
		public const uint32 D3D11_TRACE_MISC_GS_EMIT_STREAM = 8;
		public const uint32 D3D11_TRACE_MISC_GS_CUT_STREAM = 16;
		public const uint32 D3D11_TRACE_MISC_HALT = 32;
		public const uint32 D3D11_TRACE_MISC_MESSAGE = 64;
		public const uint32 D3DX11_FFT_MAX_PRECOMPUTE_BUFFERS = 4;
		public const uint32 D3DX11_FFT_MAX_TEMP_BUFFERS = 4;
		public const uint32 D3DX11_FFT_MAX_DIMENSIONS = 32;
		
		// --- Enums ---
		
		[AllowDuplicates]
		public enum D3D11_INPUT_CLASSIFICATION : int32
		{
			D3D11_INPUT_PER_VERTEX_DATA = 0,
			D3D11_INPUT_PER_INSTANCE_DATA = 1,
		}
		[AllowDuplicates]
		public enum D3D11_FILL_MODE : int32
		{
			D3D11_FILL_WIREFRAME = 2,
			D3D11_FILL_SOLID = 3,
		}
		[AllowDuplicates]
		public enum D3D11_CULL_MODE : int32
		{
			D3D11_CULL_NONE = 1,
			D3D11_CULL_FRONT = 2,
			D3D11_CULL_BACK = 3,
		}
		[AllowDuplicates]
		public enum D3D11_RESOURCE_DIMENSION : int32
		{
			D3D11_RESOURCE_DIMENSION_UNKNOWN = 0,
			D3D11_RESOURCE_DIMENSION_BUFFER = 1,
			D3D11_RESOURCE_DIMENSION_TEXTURE1D = 2,
			D3D11_RESOURCE_DIMENSION_TEXTURE2D = 3,
			D3D11_RESOURCE_DIMENSION_TEXTURE3D = 4,
		}
		[AllowDuplicates]
		public enum D3D11_DSV_DIMENSION : int32
		{
			D3D11_DSV_DIMENSION_UNKNOWN = 0,
			D3D11_DSV_DIMENSION_TEXTURE1D = 1,
			D3D11_DSV_DIMENSION_TEXTURE1DARRAY = 2,
			D3D11_DSV_DIMENSION_TEXTURE2D = 3,
			D3D11_DSV_DIMENSION_TEXTURE2DARRAY = 4,
			D3D11_DSV_DIMENSION_TEXTURE2DMS = 5,
			D3D11_DSV_DIMENSION_TEXTURE2DMSARRAY = 6,
		}
		[AllowDuplicates]
		public enum D3D11_RTV_DIMENSION : int32
		{
			D3D11_RTV_DIMENSION_UNKNOWN = 0,
			D3D11_RTV_DIMENSION_BUFFER = 1,
			D3D11_RTV_DIMENSION_TEXTURE1D = 2,
			D3D11_RTV_DIMENSION_TEXTURE1DARRAY = 3,
			D3D11_RTV_DIMENSION_TEXTURE2D = 4,
			D3D11_RTV_DIMENSION_TEXTURE2DARRAY = 5,
			D3D11_RTV_DIMENSION_TEXTURE2DMS = 6,
			D3D11_RTV_DIMENSION_TEXTURE2DMSARRAY = 7,
			D3D11_RTV_DIMENSION_TEXTURE3D = 8,
		}
		[AllowDuplicates]
		public enum D3D11_UAV_DIMENSION : int32
		{
			D3D11_UAV_DIMENSION_UNKNOWN = 0,
			D3D11_UAV_DIMENSION_BUFFER = 1,
			D3D11_UAV_DIMENSION_TEXTURE1D = 2,
			D3D11_UAV_DIMENSION_TEXTURE1DARRAY = 3,
			D3D11_UAV_DIMENSION_TEXTURE2D = 4,
			D3D11_UAV_DIMENSION_TEXTURE2DARRAY = 5,
			D3D11_UAV_DIMENSION_TEXTURE3D = 8,
		}
		[AllowDuplicates]
		public enum D3D11_USAGE : int32
		{
			D3D11_USAGE_DEFAULT = 0,
			D3D11_USAGE_IMMUTABLE = 1,
			D3D11_USAGE_DYNAMIC = 2,
			D3D11_USAGE_STAGING = 3,
		}
		[AllowDuplicates]
		public enum D3D11_BIND_FLAG : uint32
		{
			D3D11_BIND_VERTEX_BUFFER = 1,
			D3D11_BIND_INDEX_BUFFER = 2,
			D3D11_BIND_CONSTANT_BUFFER = 4,
			D3D11_BIND_SHADER_RESOURCE = 8,
			D3D11_BIND_STREAM_OUTPUT = 16,
			D3D11_BIND_RENDER_TARGET = 32,
			D3D11_BIND_DEPTH_STENCIL = 64,
			D3D11_BIND_UNORDERED_ACCESS = 128,
			D3D11_BIND_DECODER = 512,
			D3D11_BIND_VIDEO_ENCODER = 1024,
		}
		[AllowDuplicates]
		public enum D3D11_CPU_ACCESS_FLAG : uint32
		{
			D3D11_CPU_ACCESS_WRITE = 65536,
			D3D11_CPU_ACCESS_READ = 131072,
		}
		[AllowDuplicates]
		public enum D3D11_RESOURCE_MISC_FLAG : uint32
		{
			D3D11_RESOURCE_MISC_GENERATE_MIPS = 1,
			D3D11_RESOURCE_MISC_SHARED = 2,
			D3D11_RESOURCE_MISC_TEXTURECUBE = 4,
			D3D11_RESOURCE_MISC_DRAWINDIRECT_ARGS = 16,
			D3D11_RESOURCE_MISC_BUFFER_ALLOW_RAW_VIEWS = 32,
			D3D11_RESOURCE_MISC_BUFFER_STRUCTURED = 64,
			D3D11_RESOURCE_MISC_RESOURCE_CLAMP = 128,
			D3D11_RESOURCE_MISC_SHARED_KEYEDMUTEX = 256,
			D3D11_RESOURCE_MISC_GDI_COMPATIBLE = 512,
			D3D11_RESOURCE_MISC_SHARED_NTHANDLE = 2048,
			D3D11_RESOURCE_MISC_RESTRICTED_CONTENT = 4096,
			D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE = 8192,
			D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE_DRIVER = 16384,
			D3D11_RESOURCE_MISC_GUARDED = 32768,
			D3D11_RESOURCE_MISC_TILE_POOL = 131072,
			D3D11_RESOURCE_MISC_TILED = 262144,
			D3D11_RESOURCE_MISC_HW_PROTECTED = 524288,
			D3D11_RESOURCE_MISC_SHARED_DISPLAYABLE = 1048576,
			D3D11_RESOURCE_MISC_SHARED_EXCLUSIVE_WRITER = 2097152,
		}
		[AllowDuplicates]
		public enum D3D11_MAP : int32
		{
			D3D11_MAP_READ = 1,
			D3D11_MAP_WRITE = 2,
			D3D11_MAP_READ_WRITE = 3,
			D3D11_MAP_WRITE_DISCARD = 4,
			D3D11_MAP_WRITE_NO_OVERWRITE = 5,
		}
		[AllowDuplicates]
		public enum D3D11_MAP_FLAG : int32
		{
			D3D11_MAP_FLAG_DO_NOT_WAIT = 1048576,
		}
		[AllowDuplicates]
		public enum D3D11_RAISE_FLAG : int32
		{
			D3D11_RAISE_FLAG_DRIVER_INTERNAL_ERROR = 1,
		}
		[AllowDuplicates]
		public enum D3D11_CLEAR_FLAG : int32
		{
			D3D11_CLEAR_DEPTH = 1,
			D3D11_CLEAR_STENCIL = 2,
		}
		[AllowDuplicates]
		public enum D3D11_COMPARISON_FUNC : int32
		{
			D3D11_COMPARISON_NEVER = 1,
			D3D11_COMPARISON_LESS = 2,
			D3D11_COMPARISON_EQUAL = 3,
			D3D11_COMPARISON_LESS_EQUAL = 4,
			D3D11_COMPARISON_GREATER = 5,
			D3D11_COMPARISON_NOT_EQUAL = 6,
			D3D11_COMPARISON_GREATER_EQUAL = 7,
			D3D11_COMPARISON_ALWAYS = 8,
		}
		[AllowDuplicates]
		public enum D3D11_DEPTH_WRITE_MASK : int32
		{
			D3D11_DEPTH_WRITE_MASK_ZERO = 0,
			D3D11_DEPTH_WRITE_MASK_ALL = 1,
		}
		[AllowDuplicates]
		public enum D3D11_STENCIL_OP : int32
		{
			D3D11_STENCIL_OP_KEEP = 1,
			D3D11_STENCIL_OP_ZERO = 2,
			D3D11_STENCIL_OP_REPLACE = 3,
			D3D11_STENCIL_OP_INCR_SAT = 4,
			D3D11_STENCIL_OP_DECR_SAT = 5,
			D3D11_STENCIL_OP_INVERT = 6,
			D3D11_STENCIL_OP_INCR = 7,
			D3D11_STENCIL_OP_DECR = 8,
		}
		[AllowDuplicates]
		public enum D3D11_BLEND : int32
		{
			D3D11_BLEND_ZERO = 1,
			D3D11_BLEND_ONE = 2,
			D3D11_BLEND_SRC_COLOR = 3,
			D3D11_BLEND_INV_SRC_COLOR = 4,
			D3D11_BLEND_SRC_ALPHA = 5,
			D3D11_BLEND_INV_SRC_ALPHA = 6,
			D3D11_BLEND_DEST_ALPHA = 7,
			D3D11_BLEND_INV_DEST_ALPHA = 8,
			D3D11_BLEND_DEST_COLOR = 9,
			D3D11_BLEND_INV_DEST_COLOR = 10,
			D3D11_BLEND_SRC_ALPHA_SAT = 11,
			D3D11_BLEND_BLEND_FACTOR = 14,
			D3D11_BLEND_INV_BLEND_FACTOR = 15,
			D3D11_BLEND_SRC1_COLOR = 16,
			D3D11_BLEND_INV_SRC1_COLOR = 17,
			D3D11_BLEND_SRC1_ALPHA = 18,
			D3D11_BLEND_INV_SRC1_ALPHA = 19,
		}
		[AllowDuplicates]
		public enum D3D11_BLEND_OP : int32
		{
			D3D11_BLEND_OP_ADD = 1,
			D3D11_BLEND_OP_SUBTRACT = 2,
			D3D11_BLEND_OP_REV_SUBTRACT = 3,
			D3D11_BLEND_OP_MIN = 4,
			D3D11_BLEND_OP_MAX = 5,
		}
		[AllowDuplicates]
		public enum D3D11_COLOR_WRITE_ENABLE : int32
		{
			D3D11_COLOR_WRITE_ENABLE_RED = 1,
			D3D11_COLOR_WRITE_ENABLE_GREEN = 2,
			D3D11_COLOR_WRITE_ENABLE_BLUE = 4,
			D3D11_COLOR_WRITE_ENABLE_ALPHA = 8,
			D3D11_COLOR_WRITE_ENABLE_ALL = 15,
		}
		[AllowDuplicates]
		public enum D3D11_TEXTURECUBE_FACE : int32
		{
			D3D11_TEXTURECUBE_FACE_POSITIVE_X = 0,
			D3D11_TEXTURECUBE_FACE_NEGATIVE_X = 1,
			D3D11_TEXTURECUBE_FACE_POSITIVE_Y = 2,
			D3D11_TEXTURECUBE_FACE_NEGATIVE_Y = 3,
			D3D11_TEXTURECUBE_FACE_POSITIVE_Z = 4,
			D3D11_TEXTURECUBE_FACE_NEGATIVE_Z = 5,
		}
		[AllowDuplicates]
		public enum D3D11_BUFFEREX_SRV_FLAG : int32
		{
			D3D11_BUFFEREX_SRV_FLAG_RAW = 1,
		}
		[AllowDuplicates]
		public enum D3D11_DSV_FLAG : int32
		{
			D3D11_DSV_READ_ONLY_DEPTH = 1,
			D3D11_DSV_READ_ONLY_STENCIL = 2,
		}
		[AllowDuplicates]
		public enum D3D11_BUFFER_UAV_FLAG : int32
		{
			D3D11_BUFFER_UAV_FLAG_RAW = 1,
			D3D11_BUFFER_UAV_FLAG_APPEND = 2,
			D3D11_BUFFER_UAV_FLAG_COUNTER = 4,
		}
		[AllowDuplicates]
		public enum D3D11_FILTER : int32
		{
			D3D11_FILTER_MIN_MAG_MIP_POINT = 0,
			D3D11_FILTER_MIN_MAG_POINT_MIP_LINEAR = 1,
			D3D11_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT = 4,
			D3D11_FILTER_MIN_POINT_MAG_MIP_LINEAR = 5,
			D3D11_FILTER_MIN_LINEAR_MAG_MIP_POINT = 16,
			D3D11_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR = 17,
			D3D11_FILTER_MIN_MAG_LINEAR_MIP_POINT = 20,
			D3D11_FILTER_MIN_MAG_MIP_LINEAR = 21,
			D3D11_FILTER_ANISOTROPIC = 85,
			D3D11_FILTER_COMPARISON_MIN_MAG_MIP_POINT = 128,
			D3D11_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR = 129,
			D3D11_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT = 132,
			D3D11_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR = 133,
			D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT = 144,
			D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR = 145,
			D3D11_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT = 148,
			D3D11_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR = 149,
			D3D11_FILTER_COMPARISON_ANISOTROPIC = 213,
			D3D11_FILTER_MINIMUM_MIN_MAG_MIP_POINT = 256,
			D3D11_FILTER_MINIMUM_MIN_MAG_POINT_MIP_LINEAR = 257,
			D3D11_FILTER_MINIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT = 260,
			D3D11_FILTER_MINIMUM_MIN_POINT_MAG_MIP_LINEAR = 261,
			D3D11_FILTER_MINIMUM_MIN_LINEAR_MAG_MIP_POINT = 272,
			D3D11_FILTER_MINIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR = 273,
			D3D11_FILTER_MINIMUM_MIN_MAG_LINEAR_MIP_POINT = 276,
			D3D11_FILTER_MINIMUM_MIN_MAG_MIP_LINEAR = 277,
			D3D11_FILTER_MINIMUM_ANISOTROPIC = 341,
			D3D11_FILTER_MAXIMUM_MIN_MAG_MIP_POINT = 384,
			D3D11_FILTER_MAXIMUM_MIN_MAG_POINT_MIP_LINEAR = 385,
			D3D11_FILTER_MAXIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT = 388,
			D3D11_FILTER_MAXIMUM_MIN_POINT_MAG_MIP_LINEAR = 389,
			D3D11_FILTER_MAXIMUM_MIN_LINEAR_MAG_MIP_POINT = 400,
			D3D11_FILTER_MAXIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR = 401,
			D3D11_FILTER_MAXIMUM_MIN_MAG_LINEAR_MIP_POINT = 404,
			D3D11_FILTER_MAXIMUM_MIN_MAG_MIP_LINEAR = 405,
			D3D11_FILTER_MAXIMUM_ANISOTROPIC = 469,
		}
		[AllowDuplicates]
		public enum D3D11_FILTER_TYPE : int32
		{
			D3D11_FILTER_TYPE_POINT = 0,
			D3D11_FILTER_TYPE_LINEAR = 1,
		}
		[AllowDuplicates]
		public enum D3D11_FILTER_REDUCTION_TYPE : int32
		{
			D3D11_FILTER_REDUCTION_TYPE_STANDARD = 0,
			D3D11_FILTER_REDUCTION_TYPE_COMPARISON = 1,
			D3D11_FILTER_REDUCTION_TYPE_MINIMUM = 2,
			D3D11_FILTER_REDUCTION_TYPE_MAXIMUM = 3,
		}
		[AllowDuplicates]
		public enum D3D11_TEXTURE_ADDRESS_MODE : int32
		{
			D3D11_TEXTURE_ADDRESS_WRAP = 1,
			D3D11_TEXTURE_ADDRESS_MIRROR = 2,
			D3D11_TEXTURE_ADDRESS_CLAMP = 3,
			D3D11_TEXTURE_ADDRESS_BORDER = 4,
			D3D11_TEXTURE_ADDRESS_MIRROR_ONCE = 5,
		}
		[AllowDuplicates]
		public enum D3D11_FORMAT_SUPPORT : int32
		{
			D3D11_FORMAT_SUPPORT_BUFFER = 1,
			D3D11_FORMAT_SUPPORT_IA_VERTEX_BUFFER = 2,
			D3D11_FORMAT_SUPPORT_IA_INDEX_BUFFER = 4,
			D3D11_FORMAT_SUPPORT_SO_BUFFER = 8,
			D3D11_FORMAT_SUPPORT_TEXTURE1D = 16,
			D3D11_FORMAT_SUPPORT_TEXTURE2D = 32,
			D3D11_FORMAT_SUPPORT_TEXTURE3D = 64,
			D3D11_FORMAT_SUPPORT_TEXTURECUBE = 128,
			D3D11_FORMAT_SUPPORT_SHADER_LOAD = 256,
			D3D11_FORMAT_SUPPORT_SHADER_SAMPLE = 512,
			D3D11_FORMAT_SUPPORT_SHADER_SAMPLE_COMPARISON = 1024,
			D3D11_FORMAT_SUPPORT_SHADER_SAMPLE_MONO_TEXT = 2048,
			D3D11_FORMAT_SUPPORT_MIP = 4096,
			D3D11_FORMAT_SUPPORT_MIP_AUTOGEN = 8192,
			D3D11_FORMAT_SUPPORT_RENDER_TARGET = 16384,
			D3D11_FORMAT_SUPPORT_BLENDABLE = 32768,
			D3D11_FORMAT_SUPPORT_DEPTH_STENCIL = 65536,
			D3D11_FORMAT_SUPPORT_CPU_LOCKABLE = 131072,
			D3D11_FORMAT_SUPPORT_MULTISAMPLE_RESOLVE = 262144,
			D3D11_FORMAT_SUPPORT_DISPLAY = 524288,
			D3D11_FORMAT_SUPPORT_CAST_WITHIN_BIT_LAYOUT = 1048576,
			D3D11_FORMAT_SUPPORT_MULTISAMPLE_RENDERTARGET = 2097152,
			D3D11_FORMAT_SUPPORT_MULTISAMPLE_LOAD = 4194304,
			D3D11_FORMAT_SUPPORT_SHADER_GATHER = 8388608,
			D3D11_FORMAT_SUPPORT_BACK_BUFFER_CAST = 16777216,
			D3D11_FORMAT_SUPPORT_TYPED_UNORDERED_ACCESS_VIEW = 33554432,
			D3D11_FORMAT_SUPPORT_SHADER_GATHER_COMPARISON = 67108864,
			D3D11_FORMAT_SUPPORT_DECODER_OUTPUT = 134217728,
			D3D11_FORMAT_SUPPORT_VIDEO_PROCESSOR_OUTPUT = 268435456,
			D3D11_FORMAT_SUPPORT_VIDEO_PROCESSOR_INPUT = 536870912,
			D3D11_FORMAT_SUPPORT_VIDEO_ENCODER = 1073741824,
		}
		[AllowDuplicates]
		public enum D3D11_FORMAT_SUPPORT2 : int32
		{
			D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_ADD = 1,
			D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_BITWISE_OPS = 2,
			D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_COMPARE_STORE_OR_COMPARE_EXCHANGE = 4,
			D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_EXCHANGE = 8,
			D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_SIGNED_MIN_OR_MAX = 16,
			D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_UNSIGNED_MIN_OR_MAX = 32,
			D3D11_FORMAT_SUPPORT2_UAV_TYPED_LOAD = 64,
			D3D11_FORMAT_SUPPORT2_UAV_TYPED_STORE = 128,
			D3D11_FORMAT_SUPPORT2_OUTPUT_MERGER_LOGIC_OP = 256,
			D3D11_FORMAT_SUPPORT2_TILED = 512,
			D3D11_FORMAT_SUPPORT2_SHAREABLE = 1024,
			D3D11_FORMAT_SUPPORT2_MULTIPLANE_OVERLAY = 16384,
		}
		[AllowDuplicates]
		public enum D3D11_ASYNC_GETDATA_FLAG : int32
		{
			D3D11_ASYNC_GETDATA_DONOTFLUSH = 1,
		}
		[AllowDuplicates]
		public enum D3D11_QUERY : int32
		{
			D3D11_QUERY_EVENT = 0,
			D3D11_QUERY_OCCLUSION = 1,
			D3D11_QUERY_TIMESTAMP = 2,
			D3D11_QUERY_TIMESTAMP_DISJOINT = 3,
			D3D11_QUERY_PIPELINE_STATISTICS = 4,
			D3D11_QUERY_OCCLUSION_PREDICATE = 5,
			D3D11_QUERY_SO_STATISTICS = 6,
			D3D11_QUERY_SO_OVERFLOW_PREDICATE = 7,
			D3D11_QUERY_SO_STATISTICS_STREAM0 = 8,
			D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM0 = 9,
			D3D11_QUERY_SO_STATISTICS_STREAM1 = 10,
			D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM1 = 11,
			D3D11_QUERY_SO_STATISTICS_STREAM2 = 12,
			D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM2 = 13,
			D3D11_QUERY_SO_STATISTICS_STREAM3 = 14,
			D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM3 = 15,
		}
		[AllowDuplicates]
		public enum D3D11_QUERY_MISC_FLAG : int32
		{
			D3D11_QUERY_MISC_PREDICATEHINT = 1,
		}
		[AllowDuplicates]
		public enum D3D11_COUNTER : int32
		{
			D3D11_COUNTER_DEVICE_DEPENDENT_0 = 1073741824,
		}
		[AllowDuplicates]
		public enum D3D11_COUNTER_TYPE : int32
		{
			D3D11_COUNTER_TYPE_FLOAT32 = 0,
			D3D11_COUNTER_TYPE_UINT16 = 1,
			D3D11_COUNTER_TYPE_UINT32 = 2,
			D3D11_COUNTER_TYPE_UINT64 = 3,
		}
		[AllowDuplicates]
		public enum D3D11_STANDARD_MULTISAMPLE_QUALITY_LEVELS : int32
		{
			D3D11_STANDARD_MULTISAMPLE_PATTERN = -1,
			D3D11_CENTER_MULTISAMPLE_PATTERN = -2,
		}
		[AllowDuplicates]
		public enum D3D11_DEVICE_CONTEXT_TYPE : int32
		{
			D3D11_DEVICE_CONTEXT_IMMEDIATE = 0,
			D3D11_DEVICE_CONTEXT_DEFERRED = 1,
		}
		[AllowDuplicates]
		public enum D3D11_FEATURE : int32
		{
			D3D11_FEATURE_THREADING = 0,
			D3D11_FEATURE_DOUBLES = 1,
			D3D11_FEATURE_FORMAT_SUPPORT = 2,
			D3D11_FEATURE_FORMAT_SUPPORT2 = 3,
			D3D11_FEATURE_D3D10_X_HARDWARE_OPTIONS = 4,
			D3D11_FEATURE_D3D11_OPTIONS = 5,
			D3D11_FEATURE_ARCHITECTURE_INFO = 6,
			D3D11_FEATURE_D3D9_OPTIONS = 7,
			D3D11_FEATURE_SHADER_MIN_PRECISION_SUPPORT = 8,
			D3D11_FEATURE_D3D9_SHADOW_SUPPORT = 9,
			D3D11_FEATURE_D3D11_OPTIONS1 = 10,
			D3D11_FEATURE_D3D9_SIMPLE_INSTANCING_SUPPORT = 11,
			D3D11_FEATURE_MARKER_SUPPORT = 12,
			D3D11_FEATURE_D3D9_OPTIONS1 = 13,
			D3D11_FEATURE_D3D11_OPTIONS2 = 14,
			D3D11_FEATURE_D3D11_OPTIONS3 = 15,
			D3D11_FEATURE_GPU_VIRTUAL_ADDRESS_SUPPORT = 16,
			D3D11_FEATURE_D3D11_OPTIONS4 = 17,
			D3D11_FEATURE_SHADER_CACHE = 18,
			D3D11_FEATURE_D3D11_OPTIONS5 = 19,
			D3D11_FEATURE_DISPLAYABLE = 20,
		}
		[AllowDuplicates]
		public enum D3D11_SHADER_MIN_PRECISION_SUPPORT : int32
		{
			D3D11_SHADER_MIN_PRECISION_10_BIT = 1,
			D3D11_SHADER_MIN_PRECISION_16_BIT = 2,
		}
		[AllowDuplicates]
		public enum D3D11_TILED_RESOURCES_TIER : int32
		{
			D3D11_TILED_RESOURCES_NOT_SUPPORTED = 0,
			D3D11_TILED_RESOURCES_TIER_1 = 1,
			D3D11_TILED_RESOURCES_TIER_2 = 2,
			D3D11_TILED_RESOURCES_TIER_3 = 3,
		}
		[AllowDuplicates]
		public enum D3D11_CONSERVATIVE_RASTERIZATION_TIER : int32
		{
			D3D11_CONSERVATIVE_RASTERIZATION_NOT_SUPPORTED = 0,
			D3D11_CONSERVATIVE_RASTERIZATION_TIER_1 = 1,
			D3D11_CONSERVATIVE_RASTERIZATION_TIER_2 = 2,
			D3D11_CONSERVATIVE_RASTERIZATION_TIER_3 = 3,
		}
		[AllowDuplicates]
		public enum D3D11_SHADER_CACHE_SUPPORT_FLAGS : int32
		{
			D3D11_SHADER_CACHE_SUPPORT_NONE = 0,
			D3D11_SHADER_CACHE_SUPPORT_AUTOMATIC_INPROC_CACHE = 1,
			D3D11_SHADER_CACHE_SUPPORT_AUTOMATIC_DISK_CACHE = 2,
		}
		[AllowDuplicates]
		public enum D3D11_SHARED_RESOURCE_TIER : int32
		{
			D3D11_SHARED_RESOURCE_TIER_0 = 0,
			D3D11_SHARED_RESOURCE_TIER_1 = 1,
			D3D11_SHARED_RESOURCE_TIER_2 = 2,
			D3D11_SHARED_RESOURCE_TIER_3 = 3,
		}
		[AllowDuplicates]
		public enum D3D11_VIDEO_DECODER_BUFFER_TYPE : int32
		{
			D3D11_VIDEO_DECODER_BUFFER_PICTURE_PARAMETERS = 0,
			D3D11_VIDEO_DECODER_BUFFER_MACROBLOCK_CONTROL = 1,
			D3D11_VIDEO_DECODER_BUFFER_RESIDUAL_DIFFERENCE = 2,
			D3D11_VIDEO_DECODER_BUFFER_DEBLOCKING_CONTROL = 3,
			D3D11_VIDEO_DECODER_BUFFER_INVERSE_QUANTIZATION_MATRIX = 4,
			D3D11_VIDEO_DECODER_BUFFER_SLICE_CONTROL = 5,
			D3D11_VIDEO_DECODER_BUFFER_BITSTREAM = 6,
			D3D11_VIDEO_DECODER_BUFFER_MOTION_VECTOR = 7,
			D3D11_VIDEO_DECODER_BUFFER_FILM_GRAIN = 8,
		}
		[AllowDuplicates]
		public enum D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT : int32
		{
			D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT_INPUT = 1,
			D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT_OUTPUT = 2,
		}
		[AllowDuplicates]
		public enum D3D11_VIDEO_PROCESSOR_DEVICE_CAPS : int32
		{
			D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_LINEAR_SPACE = 1,
			D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_xvYCC = 2,
			D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_RGB_RANGE_CONVERSION = 4,
			D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_YCbCr_MATRIX_CONVERSION = 8,
			D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_NOMINAL_RANGE = 16,
		}
		[AllowDuplicates]
		public enum D3D11_VIDEO_PROCESSOR_FEATURE_CAPS : int32
		{
			D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_FILL = 1,
			D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_CONSTRICTION = 2,
			D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_LUMA_KEY = 4,
			D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_PALETTE = 8,
			D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_LEGACY = 16,
			D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_STEREO = 32,
			D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ROTATION = 64,
			D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_STREAM = 128,
			D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_PIXEL_ASPECT_RATIO = 256,
			D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_MIRROR = 512,
			D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_SHADER_USAGE = 1024,
			D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_METADATA_HDR10 = 2048,
		}
		[AllowDuplicates]
		public enum D3D11_VIDEO_PROCESSOR_FILTER_CAPS : int32
		{
			D3D11_VIDEO_PROCESSOR_FILTER_CAPS_BRIGHTNESS = 1,
			D3D11_VIDEO_PROCESSOR_FILTER_CAPS_CONTRAST = 2,
			D3D11_VIDEO_PROCESSOR_FILTER_CAPS_HUE = 4,
			D3D11_VIDEO_PROCESSOR_FILTER_CAPS_SATURATION = 8,
			D3D11_VIDEO_PROCESSOR_FILTER_CAPS_NOISE_REDUCTION = 16,
			D3D11_VIDEO_PROCESSOR_FILTER_CAPS_EDGE_ENHANCEMENT = 32,
			D3D11_VIDEO_PROCESSOR_FILTER_CAPS_ANAMORPHIC_SCALING = 64,
			D3D11_VIDEO_PROCESSOR_FILTER_CAPS_STEREO_ADJUSTMENT = 128,
		}
		[AllowDuplicates]
		public enum D3D11_VIDEO_PROCESSOR_FORMAT_CAPS : int32
		{
			D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_INTERLACED = 1,
			D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_PROCAMP = 2,
			D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_LUMA_KEY = 4,
			D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_PALETTE_INTERLACED = 8,
		}
		[AllowDuplicates]
		public enum D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS : int32
		{
			D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_DENOISE = 1,
			D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_DERINGING = 2,
			D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_EDGE_ENHANCEMENT = 4,
			D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_COLOR_CORRECTION = 8,
			D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_FLESH_TONE_MAPPING = 16,
			D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_IMAGE_STABILIZATION = 32,
			D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_SUPER_RESOLUTION = 64,
			D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_ANAMORPHIC_SCALING = 128,
		}
		[AllowDuplicates]
		public enum D3D11_VIDEO_PROCESSOR_STEREO_CAPS : int32
		{
			D3D11_VIDEO_PROCESSOR_STEREO_CAPS_MONO_OFFSET = 1,
			D3D11_VIDEO_PROCESSOR_STEREO_CAPS_ROW_INTERLEAVED = 2,
			D3D11_VIDEO_PROCESSOR_STEREO_CAPS_COLUMN_INTERLEAVED = 4,
			D3D11_VIDEO_PROCESSOR_STEREO_CAPS_CHECKERBOARD = 8,
			D3D11_VIDEO_PROCESSOR_STEREO_CAPS_FLIP_MODE = 16,
		}
		[AllowDuplicates]
		public enum D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS : int32
		{
			D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_BLEND = 1,
			D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_BOB = 2,
			D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_ADAPTIVE = 4,
			D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_MOTION_COMPENSATION = 8,
			D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_INVERSE_TELECINE = 16,
			D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_FRAME_RATE_CONVERSION = 32,
		}
		[AllowDuplicates]
		public enum D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS : int32
		{
			D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_32 = 1,
			D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_22 = 2,
			D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_2224 = 4,
			D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_2332 = 8,
			D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_32322 = 16,
			D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_55 = 32,
			D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_64 = 64,
			D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_87 = 128,
			D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_222222222223 = 256,
			D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_OTHER = -2147483648,
		}
		[AllowDuplicates]
		public enum D3D11_CONTENT_PROTECTION_CAPS : int32
		{
			D3D11_CONTENT_PROTECTION_CAPS_SOFTWARE = 1,
			D3D11_CONTENT_PROTECTION_CAPS_HARDWARE = 2,
			D3D11_CONTENT_PROTECTION_CAPS_PROTECTION_ALWAYS_ON = 4,
			D3D11_CONTENT_PROTECTION_CAPS_PARTIAL_DECRYPTION = 8,
			D3D11_CONTENT_PROTECTION_CAPS_CONTENT_KEY = 16,
			D3D11_CONTENT_PROTECTION_CAPS_FRESHEN_SESSION_KEY = 32,
			D3D11_CONTENT_PROTECTION_CAPS_ENCRYPTED_READ_BACK = 64,
			D3D11_CONTENT_PROTECTION_CAPS_ENCRYPTED_READ_BACK_KEY = 128,
			D3D11_CONTENT_PROTECTION_CAPS_SEQUENTIAL_CTR_IV = 256,
			D3D11_CONTENT_PROTECTION_CAPS_ENCRYPT_SLICEDATA_ONLY = 512,
			D3D11_CONTENT_PROTECTION_CAPS_DECRYPTION_BLT = 1024,
			D3D11_CONTENT_PROTECTION_CAPS_HARDWARE_PROTECT_UNCOMPRESSED = 2048,
			D3D11_CONTENT_PROTECTION_CAPS_HARDWARE_PROTECTED_MEMORY_PAGEABLE = 4096,
			D3D11_CONTENT_PROTECTION_CAPS_HARDWARE_TEARDOWN = 8192,
			D3D11_CONTENT_PROTECTION_CAPS_HARDWARE_DRM_COMMUNICATION = 16384,
			D3D11_CONTENT_PROTECTION_CAPS_HARDWARE_DRM_COMMUNICATION_MULTI_THREADED = 32768,
		}
		[AllowDuplicates]
		public enum D3D11_VIDEO_PROCESSOR_FILTER : int32
		{
			D3D11_VIDEO_PROCESSOR_FILTER_BRIGHTNESS = 0,
			D3D11_VIDEO_PROCESSOR_FILTER_CONTRAST = 1,
			D3D11_VIDEO_PROCESSOR_FILTER_HUE = 2,
			D3D11_VIDEO_PROCESSOR_FILTER_SATURATION = 3,
			D3D11_VIDEO_PROCESSOR_FILTER_NOISE_REDUCTION = 4,
			D3D11_VIDEO_PROCESSOR_FILTER_EDGE_ENHANCEMENT = 5,
			D3D11_VIDEO_PROCESSOR_FILTER_ANAMORPHIC_SCALING = 6,
			D3D11_VIDEO_PROCESSOR_FILTER_STEREO_ADJUSTMENT = 7,
		}
		[AllowDuplicates]
		public enum D3D11_VIDEO_FRAME_FORMAT : int32
		{
			D3D11_VIDEO_FRAME_FORMAT_PROGRESSIVE = 0,
			D3D11_VIDEO_FRAME_FORMAT_INTERLACED_TOP_FIELD_FIRST = 1,
			D3D11_VIDEO_FRAME_FORMAT_INTERLACED_BOTTOM_FIELD_FIRST = 2,
		}
		[AllowDuplicates]
		public enum D3D11_VIDEO_USAGE : int32
		{
			D3D11_VIDEO_USAGE_PLAYBACK_NORMAL = 0,
			D3D11_VIDEO_USAGE_OPTIMAL_SPEED = 1,
			D3D11_VIDEO_USAGE_OPTIMAL_QUALITY = 2,
		}
		[AllowDuplicates]
		public enum D3D11_VIDEO_PROCESSOR_NOMINAL_RANGE : int32
		{
			D3D11_VIDEO_PROCESSOR_NOMINAL_RANGE_UNDEFINED = 0,
			D3D11_VIDEO_PROCESSOR_NOMINAL_RANGE_16_235 = 1,
			D3D11_VIDEO_PROCESSOR_NOMINAL_RANGE_0_255 = 2,
		}
		[AllowDuplicates]
		public enum D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE : int32
		{
			D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_OPAQUE = 0,
			D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_BACKGROUND = 1,
			D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_DESTINATION = 2,
			D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_SOURCE_STREAM = 3,
		}
		[AllowDuplicates]
		public enum D3D11_VIDEO_PROCESSOR_OUTPUT_RATE : int32
		{
			D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_NORMAL = 0,
			D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_HALF = 1,
			D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_CUSTOM = 2,
		}
		[AllowDuplicates]
		public enum D3D11_VIDEO_PROCESSOR_STEREO_FORMAT : int32
		{
			D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_MONO = 0,
			D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_HORIZONTAL = 1,
			D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_VERTICAL = 2,
			D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_SEPARATE = 3,
			D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_MONO_OFFSET = 4,
			D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_ROW_INTERLEAVED = 5,
			D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_COLUMN_INTERLEAVED = 6,
			D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_CHECKERBOARD = 7,
		}
		[AllowDuplicates]
		public enum D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE : int32
		{
			D3D11_VIDEO_PROCESSOR_STEREO_FLIP_NONE = 0,
			D3D11_VIDEO_PROCESSOR_STEREO_FLIP_FRAME0 = 1,
			D3D11_VIDEO_PROCESSOR_STEREO_FLIP_FRAME1 = 2,
		}
		[AllowDuplicates]
		public enum D3D11_VIDEO_PROCESSOR_ROTATION : int32
		{
			D3D11_VIDEO_PROCESSOR_ROTATION_IDENTITY = 0,
			D3D11_VIDEO_PROCESSOR_ROTATION_90 = 1,
			D3D11_VIDEO_PROCESSOR_ROTATION_180 = 2,
			D3D11_VIDEO_PROCESSOR_ROTATION_270 = 3,
		}
		[AllowDuplicates]
		public enum D3D11_AUTHENTICATED_CHANNEL_TYPE : int32
		{
			D3D11_AUTHENTICATED_CHANNEL_D3D11 = 1,
			D3D11_AUTHENTICATED_CHANNEL_DRIVER_SOFTWARE = 2,
			D3D11_AUTHENTICATED_CHANNEL_DRIVER_HARDWARE = 3,
		}
		[AllowDuplicates]
		public enum D3D11_AUTHENTICATED_PROCESS_IDENTIFIER_TYPE : int32
		{
			D3D11_PROCESSIDTYPE_UNKNOWN = 0,
			D3D11_PROCESSIDTYPE_DWM = 1,
			D3D11_PROCESSIDTYPE_HANDLE = 2,
		}
		[AllowDuplicates]
		public enum D3D11_BUS_TYPE : int32
		{
			D3D11_BUS_TYPE_OTHER = 0,
			D3D11_BUS_TYPE_PCI = 1,
			D3D11_BUS_TYPE_PCIX = 2,
			D3D11_BUS_TYPE_PCIEXPRESS = 3,
			D3D11_BUS_TYPE_AGP = 4,
			D3D11_BUS_IMPL_MODIFIER_INSIDE_OF_CHIPSET = 65536,
			D3D11_BUS_IMPL_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_CHIP = 131072,
			D3D11_BUS_IMPL_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_SOCKET = 196608,
			D3D11_BUS_IMPL_MODIFIER_DAUGHTER_BOARD_CONNECTOR = 262144,
			D3D11_BUS_IMPL_MODIFIER_DAUGHTER_BOARD_CONNECTOR_INSIDE_OF_NUAE = 327680,
			D3D11_BUS_IMPL_MODIFIER_NON_STANDARD = -2147483648,
		}
		[AllowDuplicates]
		public enum D3D11_VDOV_DIMENSION : int32
		{
			D3D11_VDOV_DIMENSION_UNKNOWN = 0,
			D3D11_VDOV_DIMENSION_TEXTURE2D = 1,
		}
		[AllowDuplicates]
		public enum D3D11_VPIV_DIMENSION : int32
		{
			D3D11_VPIV_DIMENSION_UNKNOWN = 0,
			D3D11_VPIV_DIMENSION_TEXTURE2D = 1,
		}
		[AllowDuplicates]
		public enum D3D11_VPOV_DIMENSION : int32
		{
			D3D11_VPOV_DIMENSION_UNKNOWN = 0,
			D3D11_VPOV_DIMENSION_TEXTURE2D = 1,
			D3D11_VPOV_DIMENSION_TEXTURE2DARRAY = 2,
		}
		[AllowDuplicates]
		public enum D3D11_CREATE_DEVICE_FLAG : uint32
		{
			D3D11_CREATE_DEVICE_SINGLETHREADED = 1,
			D3D11_CREATE_DEVICE_DEBUG = 2,
			D3D11_CREATE_DEVICE_SWITCH_TO_REF = 4,
			D3D11_CREATE_DEVICE_PREVENT_INTERNAL_THREADING_OPTIMIZATIONS = 8,
			D3D11_CREATE_DEVICE_BGRA_SUPPORT = 32,
			D3D11_CREATE_DEVICE_DEBUGGABLE = 64,
			D3D11_CREATE_DEVICE_PREVENT_ALTERING_LAYER_SETTINGS_FROM_REGISTRY = 128,
			D3D11_CREATE_DEVICE_DISABLE_GPU_TIMEOUT = 256,
			D3D11_CREATE_DEVICE_VIDEO_SUPPORT = 2048,
		}
		[AllowDuplicates]
		public enum D3D11_RLDO_FLAGS : int32
		{
			D3D11_RLDO_SUMMARY = 1,
			D3D11_RLDO_DETAIL = 2,
			D3D11_RLDO_IGNORE_INTERNAL = 4,
		}
		[AllowDuplicates]
		public enum D3D11_SHADER_TRACKING_RESOURCE_TYPE : int32
		{
			D3D11_SHADER_TRACKING_RESOURCE_TYPE_NONE = 0,
			D3D11_SHADER_TRACKING_RESOURCE_TYPE_UAV_DEVICEMEMORY = 1,
			D3D11_SHADER_TRACKING_RESOURCE_TYPE_NON_UAV_DEVICEMEMORY = 2,
			D3D11_SHADER_TRACKING_RESOURCE_TYPE_ALL_DEVICEMEMORY = 3,
			D3D11_SHADER_TRACKING_RESOURCE_TYPE_GROUPSHARED_MEMORY = 4,
			D3D11_SHADER_TRACKING_RESOURCE_TYPE_ALL_SHARED_MEMORY = 5,
			D3D11_SHADER_TRACKING_RESOURCE_TYPE_GROUPSHARED_NON_UAV = 6,
			D3D11_SHADER_TRACKING_RESOURCE_TYPE_ALL = 7,
		}
		[AllowDuplicates]
		public enum D3D11_SHADER_TRACKING_OPTIONS : int32
		{
			D3D11_SHADER_TRACKING_OPTION_IGNORE = 0,
			D3D11_SHADER_TRACKING_OPTION_TRACK_UNINITIALIZED = 1,
			D3D11_SHADER_TRACKING_OPTION_TRACK_RAW = 2,
			D3D11_SHADER_TRACKING_OPTION_TRACK_WAR = 4,
			D3D11_SHADER_TRACKING_OPTION_TRACK_WAW = 8,
			D3D11_SHADER_TRACKING_OPTION_ALLOW_SAME = 16,
			D3D11_SHADER_TRACKING_OPTION_TRACK_ATOMIC_CONSISTENCY = 32,
			D3D11_SHADER_TRACKING_OPTION_TRACK_RAW_ACROSS_THREADGROUPS = 64,
			D3D11_SHADER_TRACKING_OPTION_TRACK_WAR_ACROSS_THREADGROUPS = 128,
			D3D11_SHADER_TRACKING_OPTION_TRACK_WAW_ACROSS_THREADGROUPS = 256,
			D3D11_SHADER_TRACKING_OPTION_TRACK_ATOMIC_CONSISTENCY_ACROSS_THREADGROUPS = 512,
			D3D11_SHADER_TRACKING_OPTION_UAV_SPECIFIC_FLAGS = 960,
			D3D11_SHADER_TRACKING_OPTION_ALL_HAZARDS = 1006,
			D3D11_SHADER_TRACKING_OPTION_ALL_HAZARDS_ALLOWING_SAME = 1022,
			D3D11_SHADER_TRACKING_OPTION_ALL_OPTIONS = 1023,
		}
		[AllowDuplicates]
		public enum D3D11_MESSAGE_CATEGORY : int32
		{
			D3D11_MESSAGE_CATEGORY_APPLICATION_DEFINED = 0,
			D3D11_MESSAGE_CATEGORY_MISCELLANEOUS = 1,
			D3D11_MESSAGE_CATEGORY_INITIALIZATION = 2,
			D3D11_MESSAGE_CATEGORY_CLEANUP = 3,
			D3D11_MESSAGE_CATEGORY_COMPILATION = 4,
			D3D11_MESSAGE_CATEGORY_STATE_CREATION = 5,
			D3D11_MESSAGE_CATEGORY_STATE_SETTING = 6,
			D3D11_MESSAGE_CATEGORY_STATE_GETTING = 7,
			D3D11_MESSAGE_CATEGORY_RESOURCE_MANIPULATION = 8,
			D3D11_MESSAGE_CATEGORY_EXECUTION = 9,
			D3D11_MESSAGE_CATEGORY_SHADER = 10,
		}
		[AllowDuplicates]
		public enum D3D11_MESSAGE_SEVERITY : int32
		{
			D3D11_MESSAGE_SEVERITY_CORRUPTION = 0,
			D3D11_MESSAGE_SEVERITY_ERROR = 1,
			D3D11_MESSAGE_SEVERITY_WARNING = 2,
			D3D11_MESSAGE_SEVERITY_INFO = 3,
			D3D11_MESSAGE_SEVERITY_MESSAGE = 4,
		}
		[AllowDuplicates]
		public enum D3D11_MESSAGE_ID : int32
		{
			D3D11_MESSAGE_ID_UNKNOWN = 0,
			D3D11_MESSAGE_ID_DEVICE_IASETVERTEXBUFFERS_HAZARD = 1,
			D3D11_MESSAGE_ID_DEVICE_IASETINDEXBUFFER_HAZARD = 2,
			D3D11_MESSAGE_ID_DEVICE_VSSETSHADERRESOURCES_HAZARD = 3,
			D3D11_MESSAGE_ID_DEVICE_VSSETCONSTANTBUFFERS_HAZARD = 4,
			D3D11_MESSAGE_ID_DEVICE_GSSETSHADERRESOURCES_HAZARD = 5,
			D3D11_MESSAGE_ID_DEVICE_GSSETCONSTANTBUFFERS_HAZARD = 6,
			D3D11_MESSAGE_ID_DEVICE_PSSETSHADERRESOURCES_HAZARD = 7,
			D3D11_MESSAGE_ID_DEVICE_PSSETCONSTANTBUFFERS_HAZARD = 8,
			D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETS_HAZARD = 9,
			D3D11_MESSAGE_ID_DEVICE_SOSETTARGETS_HAZARD = 10,
			D3D11_MESSAGE_ID_STRING_FROM_APPLICATION = 11,
			D3D11_MESSAGE_ID_CORRUPTED_THIS = 12,
			D3D11_MESSAGE_ID_CORRUPTED_PARAMETER1 = 13,
			D3D11_MESSAGE_ID_CORRUPTED_PARAMETER2 = 14,
			D3D11_MESSAGE_ID_CORRUPTED_PARAMETER3 = 15,
			D3D11_MESSAGE_ID_CORRUPTED_PARAMETER4 = 16,
			D3D11_MESSAGE_ID_CORRUPTED_PARAMETER5 = 17,
			D3D11_MESSAGE_ID_CORRUPTED_PARAMETER6 = 18,
			D3D11_MESSAGE_ID_CORRUPTED_PARAMETER7 = 19,
			D3D11_MESSAGE_ID_CORRUPTED_PARAMETER8 = 20,
			D3D11_MESSAGE_ID_CORRUPTED_PARAMETER9 = 21,
			D3D11_MESSAGE_ID_CORRUPTED_PARAMETER10 = 22,
			D3D11_MESSAGE_ID_CORRUPTED_PARAMETER11 = 23,
			D3D11_MESSAGE_ID_CORRUPTED_PARAMETER12 = 24,
			D3D11_MESSAGE_ID_CORRUPTED_PARAMETER13 = 25,
			D3D11_MESSAGE_ID_CORRUPTED_PARAMETER14 = 26,
			D3D11_MESSAGE_ID_CORRUPTED_PARAMETER15 = 27,
			D3D11_MESSAGE_ID_CORRUPTED_MULTITHREADING = 28,
			D3D11_MESSAGE_ID_MESSAGE_REPORTING_OUTOFMEMORY = 29,
			D3D11_MESSAGE_ID_IASETINPUTLAYOUT_UNBINDDELETINGOBJECT = 30,
			D3D11_MESSAGE_ID_IASETVERTEXBUFFERS_UNBINDDELETINGOBJECT = 31,
			D3D11_MESSAGE_ID_IASETINDEXBUFFER_UNBINDDELETINGOBJECT = 32,
			D3D11_MESSAGE_ID_VSSETSHADER_UNBINDDELETINGOBJECT = 33,
			D3D11_MESSAGE_ID_VSSETSHADERRESOURCES_UNBINDDELETINGOBJECT = 34,
			D3D11_MESSAGE_ID_VSSETCONSTANTBUFFERS_UNBINDDELETINGOBJECT = 35,
			D3D11_MESSAGE_ID_VSSETSAMPLERS_UNBINDDELETINGOBJECT = 36,
			D3D11_MESSAGE_ID_GSSETSHADER_UNBINDDELETINGOBJECT = 37,
			D3D11_MESSAGE_ID_GSSETSHADERRESOURCES_UNBINDDELETINGOBJECT = 38,
			D3D11_MESSAGE_ID_GSSETCONSTANTBUFFERS_UNBINDDELETINGOBJECT = 39,
			D3D11_MESSAGE_ID_GSSETSAMPLERS_UNBINDDELETINGOBJECT = 40,
			D3D11_MESSAGE_ID_SOSETTARGETS_UNBINDDELETINGOBJECT = 41,
			D3D11_MESSAGE_ID_PSSETSHADER_UNBINDDELETINGOBJECT = 42,
			D3D11_MESSAGE_ID_PSSETSHADERRESOURCES_UNBINDDELETINGOBJECT = 43,
			D3D11_MESSAGE_ID_PSSETCONSTANTBUFFERS_UNBINDDELETINGOBJECT = 44,
			D3D11_MESSAGE_ID_PSSETSAMPLERS_UNBINDDELETINGOBJECT = 45,
			D3D11_MESSAGE_ID_RSSETSTATE_UNBINDDELETINGOBJECT = 46,
			D3D11_MESSAGE_ID_OMSETBLENDSTATE_UNBINDDELETINGOBJECT = 47,
			D3D11_MESSAGE_ID_OMSETDEPTHSTENCILSTATE_UNBINDDELETINGOBJECT = 48,
			D3D11_MESSAGE_ID_OMSETRENDERTARGETS_UNBINDDELETINGOBJECT = 49,
			D3D11_MESSAGE_ID_SETPREDICATION_UNBINDDELETINGOBJECT = 50,
			D3D11_MESSAGE_ID_GETPRIVATEDATA_MOREDATA = 51,
			D3D11_MESSAGE_ID_SETPRIVATEDATA_INVALIDFREEDATA = 52,
			D3D11_MESSAGE_ID_SETPRIVATEDATA_INVALIDIUNKNOWN = 53,
			D3D11_MESSAGE_ID_SETPRIVATEDATA_INVALIDFLAGS = 54,
			D3D11_MESSAGE_ID_SETPRIVATEDATA_CHANGINGPARAMS = 55,
			D3D11_MESSAGE_ID_SETPRIVATEDATA_OUTOFMEMORY = 56,
			D3D11_MESSAGE_ID_CREATEBUFFER_UNRECOGNIZEDFORMAT = 57,
			D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDSAMPLES = 58,
			D3D11_MESSAGE_ID_CREATEBUFFER_UNRECOGNIZEDUSAGE = 59,
			D3D11_MESSAGE_ID_CREATEBUFFER_UNRECOGNIZEDBINDFLAGS = 60,
			D3D11_MESSAGE_ID_CREATEBUFFER_UNRECOGNIZEDCPUACCESSFLAGS = 61,
			D3D11_MESSAGE_ID_CREATEBUFFER_UNRECOGNIZEDMISCFLAGS = 62,
			D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDCPUACCESSFLAGS = 63,
			D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDBINDFLAGS = 64,
			D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDINITIALDATA = 65,
			D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDDIMENSIONS = 66,
			D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDMIPLEVELS = 67,
			D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDMISCFLAGS = 68,
			D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDARG_RETURN = 69,
			D3D11_MESSAGE_ID_CREATEBUFFER_OUTOFMEMORY_RETURN = 70,
			D3D11_MESSAGE_ID_CREATEBUFFER_NULLDESC = 71,
			D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDCONSTANTBUFFERBINDINGS = 72,
			D3D11_MESSAGE_ID_CREATEBUFFER_LARGEALLOCATION = 73,
			D3D11_MESSAGE_ID_CREATETEXTURE1D_UNRECOGNIZEDFORMAT = 74,
			D3D11_MESSAGE_ID_CREATETEXTURE1D_UNSUPPORTEDFORMAT = 75,
			D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDSAMPLES = 76,
			D3D11_MESSAGE_ID_CREATETEXTURE1D_UNRECOGNIZEDUSAGE = 77,
			D3D11_MESSAGE_ID_CREATETEXTURE1D_UNRECOGNIZEDBINDFLAGS = 78,
			D3D11_MESSAGE_ID_CREATETEXTURE1D_UNRECOGNIZEDCPUACCESSFLAGS = 79,
			D3D11_MESSAGE_ID_CREATETEXTURE1D_UNRECOGNIZEDMISCFLAGS = 80,
			D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDCPUACCESSFLAGS = 81,
			D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDBINDFLAGS = 82,
			D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDINITIALDATA = 83,
			D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDDIMENSIONS = 84,
			D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDMIPLEVELS = 85,
			D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDMISCFLAGS = 86,
			D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDARG_RETURN = 87,
			D3D11_MESSAGE_ID_CREATETEXTURE1D_OUTOFMEMORY_RETURN = 88,
			D3D11_MESSAGE_ID_CREATETEXTURE1D_NULLDESC = 89,
			D3D11_MESSAGE_ID_CREATETEXTURE1D_LARGEALLOCATION = 90,
			D3D11_MESSAGE_ID_CREATETEXTURE2D_UNRECOGNIZEDFORMAT = 91,
			D3D11_MESSAGE_ID_CREATETEXTURE2D_UNSUPPORTEDFORMAT = 92,
			D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDSAMPLES = 93,
			D3D11_MESSAGE_ID_CREATETEXTURE2D_UNRECOGNIZEDUSAGE = 94,
			D3D11_MESSAGE_ID_CREATETEXTURE2D_UNRECOGNIZEDBINDFLAGS = 95,
			D3D11_MESSAGE_ID_CREATETEXTURE2D_UNRECOGNIZEDCPUACCESSFLAGS = 96,
			D3D11_MESSAGE_ID_CREATETEXTURE2D_UNRECOGNIZEDMISCFLAGS = 97,
			D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDCPUACCESSFLAGS = 98,
			D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDBINDFLAGS = 99,
			D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDINITIALDATA = 100,
			D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDDIMENSIONS = 101,
			D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDMIPLEVELS = 102,
			D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDMISCFLAGS = 103,
			D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDARG_RETURN = 104,
			D3D11_MESSAGE_ID_CREATETEXTURE2D_OUTOFMEMORY_RETURN = 105,
			D3D11_MESSAGE_ID_CREATETEXTURE2D_NULLDESC = 106,
			D3D11_MESSAGE_ID_CREATETEXTURE2D_LARGEALLOCATION = 107,
			D3D11_MESSAGE_ID_CREATETEXTURE3D_UNRECOGNIZEDFORMAT = 108,
			D3D11_MESSAGE_ID_CREATETEXTURE3D_UNSUPPORTEDFORMAT = 109,
			D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDSAMPLES = 110,
			D3D11_MESSAGE_ID_CREATETEXTURE3D_UNRECOGNIZEDUSAGE = 111,
			D3D11_MESSAGE_ID_CREATETEXTURE3D_UNRECOGNIZEDBINDFLAGS = 112,
			D3D11_MESSAGE_ID_CREATETEXTURE3D_UNRECOGNIZEDCPUACCESSFLAGS = 113,
			D3D11_MESSAGE_ID_CREATETEXTURE3D_UNRECOGNIZEDMISCFLAGS = 114,
			D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDCPUACCESSFLAGS = 115,
			D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDBINDFLAGS = 116,
			D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDINITIALDATA = 117,
			D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDDIMENSIONS = 118,
			D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDMIPLEVELS = 119,
			D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDMISCFLAGS = 120,
			D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDARG_RETURN = 121,
			D3D11_MESSAGE_ID_CREATETEXTURE3D_OUTOFMEMORY_RETURN = 122,
			D3D11_MESSAGE_ID_CREATETEXTURE3D_NULLDESC = 123,
			D3D11_MESSAGE_ID_CREATETEXTURE3D_LARGEALLOCATION = 124,
			D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_UNRECOGNIZEDFORMAT = 125,
			D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDDESC = 126,
			D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDFORMAT = 127,
			D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDDIMENSIONS = 128,
			D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDRESOURCE = 129,
			D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_TOOMANYOBJECTS = 130,
			D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDARG_RETURN = 131,
			D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_OUTOFMEMORY_RETURN = 132,
			D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_UNRECOGNIZEDFORMAT = 133,
			D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_UNSUPPORTEDFORMAT = 134,
			D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDDESC = 135,
			D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDFORMAT = 136,
			D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDDIMENSIONS = 137,
			D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDRESOURCE = 138,
			D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_TOOMANYOBJECTS = 139,
			D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDARG_RETURN = 140,
			D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_OUTOFMEMORY_RETURN = 141,
			D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_UNRECOGNIZEDFORMAT = 142,
			D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDDESC = 143,
			D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDFORMAT = 144,
			D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDDIMENSIONS = 145,
			D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDRESOURCE = 146,
			D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_TOOMANYOBJECTS = 147,
			D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDARG_RETURN = 148,
			D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_OUTOFMEMORY_RETURN = 149,
			D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_OUTOFMEMORY = 150,
			D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_TOOMANYELEMENTS = 151,
			D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDFORMAT = 152,
			D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INCOMPATIBLEFORMAT = 153,
			D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSLOT = 154,
			D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDINPUTSLOTCLASS = 155,
			D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_STEPRATESLOTCLASSMISMATCH = 156,
			D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSLOTCLASSCHANGE = 157,
			D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSTEPRATECHANGE = 158,
			D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDALIGNMENT = 159,
			D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_DUPLICATESEMANTIC = 160,
			D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_UNPARSEABLEINPUTSIGNATURE = 161,
			D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_NULLSEMANTIC = 162,
			D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_MISSINGELEMENT = 163,
			D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_NULLDESC = 164,
			D3D11_MESSAGE_ID_CREATEVERTEXSHADER_OUTOFMEMORY = 165,
			D3D11_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDSHADERBYTECODE = 166,
			D3D11_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDSHADERTYPE = 167,
			D3D11_MESSAGE_ID_CREATEGEOMETRYSHADER_OUTOFMEMORY = 168,
			D3D11_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDSHADERBYTECODE = 169,
			D3D11_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDSHADERTYPE = 170,
			D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTOFMEMORY = 171,
			D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSHADERBYTECODE = 172,
			D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSHADERTYPE = 173,
			D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDNUMENTRIES = 174,
			D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTPUTSTREAMSTRIDEUNUSED = 175,
			D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDDECL = 176,
			D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_EXPECTEDDECL = 177,
			D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTPUTSLOT0EXPECTED = 178,
			D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDOUTPUTSLOT = 179,
			D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_ONLYONEELEMENTPERSLOT = 180,
			D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDCOMPONENTCOUNT = 181,
			D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTARTCOMPONENTANDCOMPONENTCOUNT = 182,
			D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDGAPDEFINITION = 183,
			D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_REPEATEDOUTPUT = 184,
			D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDOUTPUTSTREAMSTRIDE = 185,
			D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MISSINGSEMANTIC = 186,
			D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MASKMISMATCH = 187,
			D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_CANTHAVEONLYGAPS = 188,
			D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DECLTOOCOMPLEX = 189,
			D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MISSINGOUTPUTSIGNATURE = 190,
			D3D11_MESSAGE_ID_CREATEPIXELSHADER_OUTOFMEMORY = 191,
			D3D11_MESSAGE_ID_CREATEPIXELSHADER_INVALIDSHADERBYTECODE = 192,
			D3D11_MESSAGE_ID_CREATEPIXELSHADER_INVALIDSHADERTYPE = 193,
			D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDFILLMODE = 194,
			D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDCULLMODE = 195,
			D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDDEPTHBIASCLAMP = 196,
			D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDSLOPESCALEDDEPTHBIAS = 197,
			D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_TOOMANYOBJECTS = 198,
			D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_NULLDESC = 199,
			D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDDEPTHWRITEMASK = 200,
			D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDDEPTHFUNC = 201,
			D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILFAILOP = 202,
			D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILZFAILOP = 203,
			D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILPASSOP = 204,
			D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILFUNC = 205,
			D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILFAILOP = 206,
			D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILZFAILOP = 207,
			D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILPASSOP = 208,
			D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILFUNC = 209,
			D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_TOOMANYOBJECTS = 210,
			D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_NULLDESC = 211,
			D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDSRCBLEND = 212,
			D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDDESTBLEND = 213,
			D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDBLENDOP = 214,
			D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDSRCBLENDALPHA = 215,
			D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDDESTBLENDALPHA = 216,
			D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDBLENDOPALPHA = 217,
			D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDRENDERTARGETWRITEMASK = 218,
			D3D11_MESSAGE_ID_CREATEBLENDSTATE_TOOMANYOBJECTS = 219,
			D3D11_MESSAGE_ID_CREATEBLENDSTATE_NULLDESC = 220,
			D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDFILTER = 221,
			D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDADDRESSU = 222,
			D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDADDRESSV = 223,
			D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDADDRESSW = 224,
			D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDMIPLODBIAS = 225,
			D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDMAXANISOTROPY = 226,
			D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDCOMPARISONFUNC = 227,
			D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDMINLOD = 228,
			D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDMAXLOD = 229,
			D3D11_MESSAGE_ID_CREATESAMPLERSTATE_TOOMANYOBJECTS = 230,
			D3D11_MESSAGE_ID_CREATESAMPLERSTATE_NULLDESC = 231,
			D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_INVALIDQUERY = 232,
			D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_INVALIDMISCFLAGS = 233,
			D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_UNEXPECTEDMISCFLAG = 234,
			D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_NULLDESC = 235,
			D3D11_MESSAGE_ID_DEVICE_IASETPRIMITIVETOPOLOGY_TOPOLOGY_UNRECOGNIZED = 236,
			D3D11_MESSAGE_ID_DEVICE_IASETPRIMITIVETOPOLOGY_TOPOLOGY_UNDEFINED = 237,
			D3D11_MESSAGE_ID_IASETVERTEXBUFFERS_INVALIDBUFFER = 238,
			D3D11_MESSAGE_ID_DEVICE_IASETVERTEXBUFFERS_OFFSET_TOO_LARGE = 239,
			D3D11_MESSAGE_ID_DEVICE_IASETVERTEXBUFFERS_BUFFERS_EMPTY = 240,
			D3D11_MESSAGE_ID_IASETINDEXBUFFER_INVALIDBUFFER = 241,
			D3D11_MESSAGE_ID_DEVICE_IASETINDEXBUFFER_FORMAT_INVALID = 242,
			D3D11_MESSAGE_ID_DEVICE_IASETINDEXBUFFER_OFFSET_TOO_LARGE = 243,
			D3D11_MESSAGE_ID_DEVICE_IASETINDEXBUFFER_OFFSET_UNALIGNED = 244,
			D3D11_MESSAGE_ID_DEVICE_VSSETSHADERRESOURCES_VIEWS_EMPTY = 245,
			D3D11_MESSAGE_ID_VSSETCONSTANTBUFFERS_INVALIDBUFFER = 246,
			D3D11_MESSAGE_ID_DEVICE_VSSETCONSTANTBUFFERS_BUFFERS_EMPTY = 247,
			D3D11_MESSAGE_ID_DEVICE_VSSETSAMPLERS_SAMPLERS_EMPTY = 248,
			D3D11_MESSAGE_ID_DEVICE_GSSETSHADERRESOURCES_VIEWS_EMPTY = 249,
			D3D11_MESSAGE_ID_GSSETCONSTANTBUFFERS_INVALIDBUFFER = 250,
			D3D11_MESSAGE_ID_DEVICE_GSSETCONSTANTBUFFERS_BUFFERS_EMPTY = 251,
			D3D11_MESSAGE_ID_DEVICE_GSSETSAMPLERS_SAMPLERS_EMPTY = 252,
			D3D11_MESSAGE_ID_SOSETTARGETS_INVALIDBUFFER = 253,
			D3D11_MESSAGE_ID_DEVICE_SOSETTARGETS_OFFSET_UNALIGNED = 254,
			D3D11_MESSAGE_ID_DEVICE_PSSETSHADERRESOURCES_VIEWS_EMPTY = 255,
			D3D11_MESSAGE_ID_PSSETCONSTANTBUFFERS_INVALIDBUFFER = 256,
			D3D11_MESSAGE_ID_DEVICE_PSSETCONSTANTBUFFERS_BUFFERS_EMPTY = 257,
			D3D11_MESSAGE_ID_DEVICE_PSSETSAMPLERS_SAMPLERS_EMPTY = 258,
			D3D11_MESSAGE_ID_DEVICE_RSSETVIEWPORTS_INVALIDVIEWPORT = 259,
			D3D11_MESSAGE_ID_DEVICE_RSSETSCISSORRECTS_INVALIDSCISSOR = 260,
			D3D11_MESSAGE_ID_CLEARRENDERTARGETVIEW_DENORMFLUSH = 261,
			D3D11_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_DENORMFLUSH = 262,
			D3D11_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_INVALID = 263,
			D3D11_MESSAGE_ID_DEVICE_IAGETVERTEXBUFFERS_BUFFERS_EMPTY = 264,
			D3D11_MESSAGE_ID_DEVICE_VSGETSHADERRESOURCES_VIEWS_EMPTY = 265,
			D3D11_MESSAGE_ID_DEVICE_VSGETCONSTANTBUFFERS_BUFFERS_EMPTY = 266,
			D3D11_MESSAGE_ID_DEVICE_VSGETSAMPLERS_SAMPLERS_EMPTY = 267,
			D3D11_MESSAGE_ID_DEVICE_GSGETSHADERRESOURCES_VIEWS_EMPTY = 268,
			D3D11_MESSAGE_ID_DEVICE_GSGETCONSTANTBUFFERS_BUFFERS_EMPTY = 269,
			D3D11_MESSAGE_ID_DEVICE_GSGETSAMPLERS_SAMPLERS_EMPTY = 270,
			D3D11_MESSAGE_ID_DEVICE_SOGETTARGETS_BUFFERS_EMPTY = 271,
			D3D11_MESSAGE_ID_DEVICE_PSGETSHADERRESOURCES_VIEWS_EMPTY = 272,
			D3D11_MESSAGE_ID_DEVICE_PSGETCONSTANTBUFFERS_BUFFERS_EMPTY = 273,
			D3D11_MESSAGE_ID_DEVICE_PSGETSAMPLERS_SAMPLERS_EMPTY = 274,
			D3D11_MESSAGE_ID_DEVICE_RSGETVIEWPORTS_VIEWPORTS_EMPTY = 275,
			D3D11_MESSAGE_ID_DEVICE_RSGETSCISSORRECTS_RECTS_EMPTY = 276,
			D3D11_MESSAGE_ID_DEVICE_GENERATEMIPS_RESOURCE_INVALID = 277,
			D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_INVALIDDESTINATIONSUBRESOURCE = 278,
			D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_INVALIDSOURCESUBRESOURCE = 279,
			D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_INVALIDSOURCEBOX = 280,
			D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_INVALIDSOURCE = 281,
			D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_INVALIDDESTINATIONSTATE = 282,
			D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_INVALIDSOURCESTATE = 283,
			D3D11_MESSAGE_ID_COPYRESOURCE_INVALIDSOURCE = 284,
			D3D11_MESSAGE_ID_COPYRESOURCE_INVALIDDESTINATIONSTATE = 285,
			D3D11_MESSAGE_ID_COPYRESOURCE_INVALIDSOURCESTATE = 286,
			D3D11_MESSAGE_ID_UPDATESUBRESOURCE_INVALIDDESTINATIONSUBRESOURCE = 287,
			D3D11_MESSAGE_ID_UPDATESUBRESOURCE_INVALIDDESTINATIONBOX = 288,
			D3D11_MESSAGE_ID_UPDATESUBRESOURCE_INVALIDDESTINATIONSTATE = 289,
			D3D11_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_DESTINATION_INVALID = 290,
			D3D11_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_DESTINATION_SUBRESOURCE_INVALID = 291,
			D3D11_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_SOURCE_INVALID = 292,
			D3D11_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_SOURCE_SUBRESOURCE_INVALID = 293,
			D3D11_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_FORMAT_INVALID = 294,
			D3D11_MESSAGE_ID_BUFFER_MAP_INVALIDMAPTYPE = 295,
			D3D11_MESSAGE_ID_BUFFER_MAP_INVALIDFLAGS = 296,
			D3D11_MESSAGE_ID_BUFFER_MAP_ALREADYMAPPED = 297,
			D3D11_MESSAGE_ID_BUFFER_MAP_DEVICEREMOVED_RETURN = 298,
			D3D11_MESSAGE_ID_BUFFER_UNMAP_NOTMAPPED = 299,
			D3D11_MESSAGE_ID_TEXTURE1D_MAP_INVALIDMAPTYPE = 300,
			D3D11_MESSAGE_ID_TEXTURE1D_MAP_INVALIDSUBRESOURCE = 301,
			D3D11_MESSAGE_ID_TEXTURE1D_MAP_INVALIDFLAGS = 302,
			D3D11_MESSAGE_ID_TEXTURE1D_MAP_ALREADYMAPPED = 303,
			D3D11_MESSAGE_ID_TEXTURE1D_MAP_DEVICEREMOVED_RETURN = 304,
			D3D11_MESSAGE_ID_TEXTURE1D_UNMAP_INVALIDSUBRESOURCE = 305,
			D3D11_MESSAGE_ID_TEXTURE1D_UNMAP_NOTMAPPED = 306,
			D3D11_MESSAGE_ID_TEXTURE2D_MAP_INVALIDMAPTYPE = 307,
			D3D11_MESSAGE_ID_TEXTURE2D_MAP_INVALIDSUBRESOURCE = 308,
			D3D11_MESSAGE_ID_TEXTURE2D_MAP_INVALIDFLAGS = 309,
			D3D11_MESSAGE_ID_TEXTURE2D_MAP_ALREADYMAPPED = 310,
			D3D11_MESSAGE_ID_TEXTURE2D_MAP_DEVICEREMOVED_RETURN = 311,
			D3D11_MESSAGE_ID_TEXTURE2D_UNMAP_INVALIDSUBRESOURCE = 312,
			D3D11_MESSAGE_ID_TEXTURE2D_UNMAP_NOTMAPPED = 313,
			D3D11_MESSAGE_ID_TEXTURE3D_MAP_INVALIDMAPTYPE = 314,
			D3D11_MESSAGE_ID_TEXTURE3D_MAP_INVALIDSUBRESOURCE = 315,
			D3D11_MESSAGE_ID_TEXTURE3D_MAP_INVALIDFLAGS = 316,
			D3D11_MESSAGE_ID_TEXTURE3D_MAP_ALREADYMAPPED = 317,
			D3D11_MESSAGE_ID_TEXTURE3D_MAP_DEVICEREMOVED_RETURN = 318,
			D3D11_MESSAGE_ID_TEXTURE3D_UNMAP_INVALIDSUBRESOURCE = 319,
			D3D11_MESSAGE_ID_TEXTURE3D_UNMAP_NOTMAPPED = 320,
			D3D11_MESSAGE_ID_CHECKFORMATSUPPORT_FORMAT_DEPRECATED = 321,
			D3D11_MESSAGE_ID_CHECKMULTISAMPLEQUALITYLEVELS_FORMAT_DEPRECATED = 322,
			D3D11_MESSAGE_ID_SETEXCEPTIONMODE_UNRECOGNIZEDFLAGS = 323,
			D3D11_MESSAGE_ID_SETEXCEPTIONMODE_INVALIDARG_RETURN = 324,
			D3D11_MESSAGE_ID_SETEXCEPTIONMODE_DEVICEREMOVED_RETURN = 325,
			D3D11_MESSAGE_ID_REF_SIMULATING_INFINITELY_FAST_HARDWARE = 326,
			D3D11_MESSAGE_ID_REF_THREADING_MODE = 327,
			D3D11_MESSAGE_ID_REF_UMDRIVER_EXCEPTION = 328,
			D3D11_MESSAGE_ID_REF_KMDRIVER_EXCEPTION = 329,
			D3D11_MESSAGE_ID_REF_HARDWARE_EXCEPTION = 330,
			D3D11_MESSAGE_ID_REF_ACCESSING_INDEXABLE_TEMP_OUT_OF_RANGE = 331,
			D3D11_MESSAGE_ID_REF_PROBLEM_PARSING_SHADER = 332,
			D3D11_MESSAGE_ID_REF_OUT_OF_MEMORY = 333,
			D3D11_MESSAGE_ID_REF_INFO = 334,
			D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEXPOS_OVERFLOW = 335,
			D3D11_MESSAGE_ID_DEVICE_DRAWINDEXED_INDEXPOS_OVERFLOW = 336,
			D3D11_MESSAGE_ID_DEVICE_DRAWINSTANCED_VERTEXPOS_OVERFLOW = 337,
			D3D11_MESSAGE_ID_DEVICE_DRAWINSTANCED_INSTANCEPOS_OVERFLOW = 338,
			D3D11_MESSAGE_ID_DEVICE_DRAWINDEXEDINSTANCED_INSTANCEPOS_OVERFLOW = 339,
			D3D11_MESSAGE_ID_DEVICE_DRAWINDEXEDINSTANCED_INDEXPOS_OVERFLOW = 340,
			D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEX_SHADER_NOT_SET = 341,
			D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_SEMANTICNAME_NOT_FOUND = 342,
			D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_REGISTERINDEX = 343,
			D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_COMPONENTTYPE = 344,
			D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_REGISTERMASK = 345,
			D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_SYSTEMVALUE = 346,
			D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_NEVERWRITTEN_ALWAYSREADS = 347,
			D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEX_BUFFER_NOT_SET = 348,
			D3D11_MESSAGE_ID_DEVICE_DRAW_INPUTLAYOUT_NOT_SET = 349,
			D3D11_MESSAGE_ID_DEVICE_DRAW_CONSTANT_BUFFER_NOT_SET = 350,
			D3D11_MESSAGE_ID_DEVICE_DRAW_CONSTANT_BUFFER_TOO_SMALL = 351,
			D3D11_MESSAGE_ID_DEVICE_DRAW_SAMPLER_NOT_SET = 352,
			D3D11_MESSAGE_ID_DEVICE_DRAW_SHADERRESOURCEVIEW_NOT_SET = 353,
			D3D11_MESSAGE_ID_DEVICE_DRAW_VIEW_DIMENSION_MISMATCH = 354,
			D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEX_BUFFER_STRIDE_TOO_SMALL = 355,
			D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEX_BUFFER_TOO_SMALL = 356,
			D3D11_MESSAGE_ID_DEVICE_DRAW_INDEX_BUFFER_NOT_SET = 357,
			D3D11_MESSAGE_ID_DEVICE_DRAW_INDEX_BUFFER_FORMAT_INVALID = 358,
			D3D11_MESSAGE_ID_DEVICE_DRAW_INDEX_BUFFER_TOO_SMALL = 359,
			D3D11_MESSAGE_ID_DEVICE_DRAW_GS_INPUT_PRIMITIVE_MISMATCH = 360,
			D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_RETURN_TYPE_MISMATCH = 361,
			D3D11_MESSAGE_ID_DEVICE_DRAW_POSITION_NOT_PRESENT = 362,
			D3D11_MESSAGE_ID_DEVICE_DRAW_OUTPUT_STREAM_NOT_SET = 363,
			D3D11_MESSAGE_ID_DEVICE_DRAW_BOUND_RESOURCE_MAPPED = 364,
			D3D11_MESSAGE_ID_DEVICE_DRAW_INVALID_PRIMITIVETOPOLOGY = 365,
			D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEX_OFFSET_UNALIGNED = 366,
			D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEX_STRIDE_UNALIGNED = 367,
			D3D11_MESSAGE_ID_DEVICE_DRAW_INDEX_OFFSET_UNALIGNED = 368,
			D3D11_MESSAGE_ID_DEVICE_DRAW_OUTPUT_STREAM_OFFSET_UNALIGNED = 369,
			D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_FORMAT_LD_UNSUPPORTED = 370,
			D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_FORMAT_SAMPLE_UNSUPPORTED = 371,
			D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_FORMAT_SAMPLE_C_UNSUPPORTED = 372,
			D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_MULTISAMPLE_UNSUPPORTED = 373,
			D3D11_MESSAGE_ID_DEVICE_DRAW_SO_TARGETS_BOUND_WITHOUT_SOURCE = 374,
			D3D11_MESSAGE_ID_DEVICE_DRAW_SO_STRIDE_LARGER_THAN_BUFFER = 375,
			D3D11_MESSAGE_ID_DEVICE_DRAW_OM_RENDER_TARGET_DOES_NOT_SUPPORT_BLENDING = 376,
			D3D11_MESSAGE_ID_DEVICE_DRAW_OM_DUAL_SOURCE_BLENDING_CAN_ONLY_HAVE_RENDER_TARGET_0 = 377,
			D3D11_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_AT_FAULT = 378,
			D3D11_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_POSSIBLY_AT_FAULT = 379,
			D3D11_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_NOT_AT_FAULT = 380,
			D3D11_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE_INVALIDARG_RETURN = 381,
			D3D11_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE_OUTOFMEMORY_RETURN = 382,
			D3D11_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE_BADINTERFACE_RETURN = 383,
			D3D11_MESSAGE_ID_DEVICE_DRAW_VIEWPORT_NOT_SET = 384,
			D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_TRAILING_DIGIT_IN_SEMANTIC = 385,
			D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_TRAILING_DIGIT_IN_SEMANTIC = 386,
			D3D11_MESSAGE_ID_DEVICE_RSSETVIEWPORTS_DENORMFLUSH = 387,
			D3D11_MESSAGE_ID_OMSETRENDERTARGETS_INVALIDVIEW = 388,
			D3D11_MESSAGE_ID_DEVICE_SETTEXTFILTERSIZE_INVALIDDIMENSIONS = 389,
			D3D11_MESSAGE_ID_DEVICE_DRAW_SAMPLER_MISMATCH = 390,
			D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_TYPE_MISMATCH = 391,
			D3D11_MESSAGE_ID_BLENDSTATE_GETDESC_LEGACY = 392,
			D3D11_MESSAGE_ID_SHADERRESOURCEVIEW_GETDESC_LEGACY = 393,
			D3D11_MESSAGE_ID_CREATEQUERY_OUTOFMEMORY_RETURN = 394,
			D3D11_MESSAGE_ID_CREATEPREDICATE_OUTOFMEMORY_RETURN = 395,
			D3D11_MESSAGE_ID_CREATECOUNTER_OUTOFRANGE_COUNTER = 396,
			D3D11_MESSAGE_ID_CREATECOUNTER_SIMULTANEOUS_ACTIVE_COUNTERS_EXHAUSTED = 397,
			D3D11_MESSAGE_ID_CREATECOUNTER_UNSUPPORTED_WELLKNOWN_COUNTER = 398,
			D3D11_MESSAGE_ID_CREATECOUNTER_OUTOFMEMORY_RETURN = 399,
			D3D11_MESSAGE_ID_CREATECOUNTER_NONEXCLUSIVE_RETURN = 400,
			D3D11_MESSAGE_ID_CREATECOUNTER_NULLDESC = 401,
			D3D11_MESSAGE_ID_CHECKCOUNTER_OUTOFRANGE_COUNTER = 402,
			D3D11_MESSAGE_ID_CHECKCOUNTER_UNSUPPORTED_WELLKNOWN_COUNTER = 403,
			D3D11_MESSAGE_ID_SETPREDICATION_INVALID_PREDICATE_STATE = 404,
			D3D11_MESSAGE_ID_QUERY_BEGIN_UNSUPPORTED = 405,
			D3D11_MESSAGE_ID_PREDICATE_BEGIN_DURING_PREDICATION = 406,
			D3D11_MESSAGE_ID_QUERY_BEGIN_DUPLICATE = 407,
			D3D11_MESSAGE_ID_QUERY_BEGIN_ABANDONING_PREVIOUS_RESULTS = 408,
			D3D11_MESSAGE_ID_PREDICATE_END_DURING_PREDICATION = 409,
			D3D11_MESSAGE_ID_QUERY_END_ABANDONING_PREVIOUS_RESULTS = 410,
			D3D11_MESSAGE_ID_QUERY_END_WITHOUT_BEGIN = 411,
			D3D11_MESSAGE_ID_QUERY_GETDATA_INVALID_DATASIZE = 412,
			D3D11_MESSAGE_ID_QUERY_GETDATA_INVALID_FLAGS = 413,
			D3D11_MESSAGE_ID_QUERY_GETDATA_INVALID_CALL = 414,
			D3D11_MESSAGE_ID_DEVICE_DRAW_PS_OUTPUT_TYPE_MISMATCH = 415,
			D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_FORMAT_GATHER_UNSUPPORTED = 416,
			D3D11_MESSAGE_ID_DEVICE_DRAW_INVALID_USE_OF_CENTER_MULTISAMPLE_PATTERN = 417,
			D3D11_MESSAGE_ID_DEVICE_IASETVERTEXBUFFERS_STRIDE_TOO_LARGE = 418,
			D3D11_MESSAGE_ID_DEVICE_IASETVERTEXBUFFERS_INVALIDRANGE = 419,
			D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_EMPTY_LAYOUT = 420,
			D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_SAMPLE_COUNT_MISMATCH = 421,
			D3D11_MESSAGE_ID_LIVE_OBJECT_SUMMARY = 422,
			D3D11_MESSAGE_ID_LIVE_BUFFER = 423,
			D3D11_MESSAGE_ID_LIVE_TEXTURE1D = 424,
			D3D11_MESSAGE_ID_LIVE_TEXTURE2D = 425,
			D3D11_MESSAGE_ID_LIVE_TEXTURE3D = 426,
			D3D11_MESSAGE_ID_LIVE_SHADERRESOURCEVIEW = 427,
			D3D11_MESSAGE_ID_LIVE_RENDERTARGETVIEW = 428,
			D3D11_MESSAGE_ID_LIVE_DEPTHSTENCILVIEW = 429,
			D3D11_MESSAGE_ID_LIVE_VERTEXSHADER = 430,
			D3D11_MESSAGE_ID_LIVE_GEOMETRYSHADER = 431,
			D3D11_MESSAGE_ID_LIVE_PIXELSHADER = 432,
			D3D11_MESSAGE_ID_LIVE_INPUTLAYOUT = 433,
			D3D11_MESSAGE_ID_LIVE_SAMPLER = 434,
			D3D11_MESSAGE_ID_LIVE_BLENDSTATE = 435,
			D3D11_MESSAGE_ID_LIVE_DEPTHSTENCILSTATE = 436,
			D3D11_MESSAGE_ID_LIVE_RASTERIZERSTATE = 437,
			D3D11_MESSAGE_ID_LIVE_QUERY = 438,
			D3D11_MESSAGE_ID_LIVE_PREDICATE = 439,
			D3D11_MESSAGE_ID_LIVE_COUNTER = 440,
			D3D11_MESSAGE_ID_LIVE_DEVICE = 441,
			D3D11_MESSAGE_ID_LIVE_SWAPCHAIN = 442,
			D3D11_MESSAGE_ID_D3D10_MESSAGES_END = 443,
			D3D11_MESSAGE_ID_D3D10L9_MESSAGES_START = 1048576,
			D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_STENCIL_NO_TWO_SIDED = 1048577,
			D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_DepthBiasClamp_NOT_SUPPORTED = 1048578,
			D3D11_MESSAGE_ID_CREATESAMPLERSTATE_NO_COMPARISON_SUPPORT = 1048579,
			D3D11_MESSAGE_ID_CREATESAMPLERSTATE_EXCESSIVE_ANISOTROPY = 1048580,
			D3D11_MESSAGE_ID_CREATESAMPLERSTATE_BORDER_OUT_OF_RANGE = 1048581,
			D3D11_MESSAGE_ID_VSSETSAMPLERS_NOT_SUPPORTED = 1048582,
			D3D11_MESSAGE_ID_VSSETSAMPLERS_TOO_MANY_SAMPLERS = 1048583,
			D3D11_MESSAGE_ID_PSSETSAMPLERS_TOO_MANY_SAMPLERS = 1048584,
			D3D11_MESSAGE_ID_CREATERESOURCE_NO_ARRAYS = 1048585,
			D3D11_MESSAGE_ID_CREATERESOURCE_NO_VB_AND_IB_BIND = 1048586,
			D3D11_MESSAGE_ID_CREATERESOURCE_NO_TEXTURE_1D = 1048587,
			D3D11_MESSAGE_ID_CREATERESOURCE_DIMENSION_OUT_OF_RANGE = 1048588,
			D3D11_MESSAGE_ID_CREATERESOURCE_NOT_BINDABLE_AS_SHADER_RESOURCE = 1048589,
			D3D11_MESSAGE_ID_OMSETRENDERTARGETS_TOO_MANY_RENDER_TARGETS = 1048590,
			D3D11_MESSAGE_ID_OMSETRENDERTARGETS_NO_DIFFERING_BIT_DEPTHS = 1048591,
			D3D11_MESSAGE_ID_IASETVERTEXBUFFERS_BAD_BUFFER_INDEX = 1048592,
			D3D11_MESSAGE_ID_DEVICE_RSSETVIEWPORTS_TOO_MANY_VIEWPORTS = 1048593,
			D3D11_MESSAGE_ID_DEVICE_IASETPRIMITIVETOPOLOGY_ADJACENCY_UNSUPPORTED = 1048594,
			D3D11_MESSAGE_ID_DEVICE_RSSETSCISSORRECTS_TOO_MANY_SCISSORS = 1048595,
			D3D11_MESSAGE_ID_COPYRESOURCE_ONLY_TEXTURE_2D_WITHIN_GPU_MEMORY = 1048596,
			D3D11_MESSAGE_ID_COPYRESOURCE_NO_TEXTURE_3D_READBACK = 1048597,
			D3D11_MESSAGE_ID_COPYRESOURCE_NO_TEXTURE_ONLY_READBACK = 1048598,
			D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_UNSUPPORTED_FORMAT = 1048599,
			D3D11_MESSAGE_ID_CREATEBLENDSTATE_NO_ALPHA_TO_COVERAGE = 1048600,
			D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_DepthClipEnable_MUST_BE_TRUE = 1048601,
			D3D11_MESSAGE_ID_DRAWINDEXED_STARTINDEXLOCATION_MUST_BE_POSITIVE = 1048602,
			D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_MUST_USE_LOWEST_LOD = 1048603,
			D3D11_MESSAGE_ID_CREATESAMPLERSTATE_MINLOD_MUST_NOT_BE_FRACTIONAL = 1048604,
			D3D11_MESSAGE_ID_CREATESAMPLERSTATE_MAXLOD_MUST_BE_FLT_MAX = 1048605,
			D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_FIRSTARRAYSLICE_MUST_BE_ZERO = 1048606,
			D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_CUBES_MUST_HAVE_6_SIDES = 1048607,
			D3D11_MESSAGE_ID_CREATERESOURCE_NOT_BINDABLE_AS_RENDER_TARGET = 1048608,
			D3D11_MESSAGE_ID_CREATERESOURCE_NO_DWORD_INDEX_BUFFER = 1048609,
			D3D11_MESSAGE_ID_CREATERESOURCE_MSAA_PRECLUDES_SHADER_RESOURCE = 1048610,
			D3D11_MESSAGE_ID_CREATERESOURCE_PRESENTATION_PRECLUDES_SHADER_RESOURCE = 1048611,
			D3D11_MESSAGE_ID_CREATEBLENDSTATE_NO_INDEPENDENT_BLEND_ENABLE = 1048612,
			D3D11_MESSAGE_ID_CREATEBLENDSTATE_NO_INDEPENDENT_WRITE_MASKS = 1048613,
			D3D11_MESSAGE_ID_CREATERESOURCE_NO_STREAM_OUT = 1048614,
			D3D11_MESSAGE_ID_CREATERESOURCE_ONLY_VB_IB_FOR_BUFFERS = 1048615,
			D3D11_MESSAGE_ID_CREATERESOURCE_NO_AUTOGEN_FOR_VOLUMES = 1048616,
			D3D11_MESSAGE_ID_CREATERESOURCE_DXGI_FORMAT_R8G8B8A8_CANNOT_BE_SHARED = 1048617,
			D3D11_MESSAGE_ID_VSSHADERRESOURCES_NOT_SUPPORTED = 1048618,
			D3D11_MESSAGE_ID_GEOMETRY_SHADER_NOT_SUPPORTED = 1048619,
			D3D11_MESSAGE_ID_STREAM_OUT_NOT_SUPPORTED = 1048620,
			D3D11_MESSAGE_ID_TEXT_FILTER_NOT_SUPPORTED = 1048621,
			D3D11_MESSAGE_ID_CREATEBLENDSTATE_NO_SEPARATE_ALPHA_BLEND = 1048622,
			D3D11_MESSAGE_ID_CREATEBLENDSTATE_NO_MRT_BLEND = 1048623,
			D3D11_MESSAGE_ID_CREATEBLENDSTATE_OPERATION_NOT_SUPPORTED = 1048624,
			D3D11_MESSAGE_ID_CREATESAMPLERSTATE_NO_MIRRORONCE = 1048625,
			D3D11_MESSAGE_ID_DRAWINSTANCED_NOT_SUPPORTED = 1048626,
			D3D11_MESSAGE_ID_DRAWINDEXEDINSTANCED_NOT_SUPPORTED_BELOW_9_3 = 1048627,
			D3D11_MESSAGE_ID_DRAWINDEXED_POINTLIST_UNSUPPORTED = 1048628,
			D3D11_MESSAGE_ID_SETBLENDSTATE_SAMPLE_MASK_CANNOT_BE_ZERO = 1048629,
			D3D11_MESSAGE_ID_CREATERESOURCE_DIMENSION_EXCEEDS_FEATURE_LEVEL_DEFINITION = 1048630,
			D3D11_MESSAGE_ID_CREATERESOURCE_ONLY_SINGLE_MIP_LEVEL_DEPTH_STENCIL_SUPPORTED = 1048631,
			D3D11_MESSAGE_ID_DEVICE_RSSETSCISSORRECTS_NEGATIVESCISSOR = 1048632,
			D3D11_MESSAGE_ID_SLOT_ZERO_MUST_BE_D3D10_INPUT_PER_VERTEX_DATA = 1048633,
			D3D11_MESSAGE_ID_CREATERESOURCE_NON_POW_2_MIPMAP = 1048634,
			D3D11_MESSAGE_ID_CREATESAMPLERSTATE_BORDER_NOT_SUPPORTED = 1048635,
			D3D11_MESSAGE_ID_OMSETRENDERTARGETS_NO_SRGB_MRT = 1048636,
			D3D11_MESSAGE_ID_COPYRESOURCE_NO_3D_MISMATCHED_UPDATES = 1048637,
			D3D11_MESSAGE_ID_D3D10L9_MESSAGES_END = 1048638,
			D3D11_MESSAGE_ID_D3D11_MESSAGES_START = 2097152,
			D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDFLAGS = 2097153,
			D3D11_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDCLASSLINKAGE = 2097154,
			D3D11_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDCLASSLINKAGE = 2097155,
			D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDNUMSTREAMS = 2097156,
			D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTREAMTORASTERIZER = 2097157,
			D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDSTREAMS = 2097158,
			D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDCLASSLINKAGE = 2097159,
			D3D11_MESSAGE_ID_CREATEPIXELSHADER_INVALIDCLASSLINKAGE = 2097160,
			D3D11_MESSAGE_ID_CREATEDEFERREDCONTEXT_INVALID_COMMANDLISTFLAGS = 2097161,
			D3D11_MESSAGE_ID_CREATEDEFERREDCONTEXT_SINGLETHREADED = 2097162,
			D3D11_MESSAGE_ID_CREATEDEFERREDCONTEXT_INVALIDARG_RETURN = 2097163,
			D3D11_MESSAGE_ID_CREATEDEFERREDCONTEXT_INVALID_CALL_RETURN = 2097164,
			D3D11_MESSAGE_ID_CREATEDEFERREDCONTEXT_OUTOFMEMORY_RETURN = 2097165,
			D3D11_MESSAGE_ID_FINISHDISPLAYLIST_ONIMMEDIATECONTEXT = 2097166,
			D3D11_MESSAGE_ID_FINISHDISPLAYLIST_OUTOFMEMORY_RETURN = 2097167,
			D3D11_MESSAGE_ID_FINISHDISPLAYLIST_INVALID_CALL_RETURN = 2097168,
			D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTREAM = 2097169,
			D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDENTRIES = 2097170,
			D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDSTRIDES = 2097171,
			D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDNUMSTRIDES = 2097172,
			D3D11_MESSAGE_ID_DEVICE_HSSETSHADERRESOURCES_HAZARD = 2097173,
			D3D11_MESSAGE_ID_DEVICE_HSSETCONSTANTBUFFERS_HAZARD = 2097174,
			D3D11_MESSAGE_ID_HSSETSHADERRESOURCES_UNBINDDELETINGOBJECT = 2097175,
			D3D11_MESSAGE_ID_HSSETCONSTANTBUFFERS_UNBINDDELETINGOBJECT = 2097176,
			D3D11_MESSAGE_ID_CREATEHULLSHADER_INVALIDCALL = 2097177,
			D3D11_MESSAGE_ID_CREATEHULLSHADER_OUTOFMEMORY = 2097178,
			D3D11_MESSAGE_ID_CREATEHULLSHADER_INVALIDSHADERBYTECODE = 2097179,
			D3D11_MESSAGE_ID_CREATEHULLSHADER_INVALIDSHADERTYPE = 2097180,
			D3D11_MESSAGE_ID_CREATEHULLSHADER_INVALIDCLASSLINKAGE = 2097181,
			D3D11_MESSAGE_ID_DEVICE_HSSETSHADERRESOURCES_VIEWS_EMPTY = 2097182,
			D3D11_MESSAGE_ID_HSSETCONSTANTBUFFERS_INVALIDBUFFER = 2097183,
			D3D11_MESSAGE_ID_DEVICE_HSSETCONSTANTBUFFERS_BUFFERS_EMPTY = 2097184,
			D3D11_MESSAGE_ID_DEVICE_HSSETSAMPLERS_SAMPLERS_EMPTY = 2097185,
			D3D11_MESSAGE_ID_DEVICE_HSGETSHADERRESOURCES_VIEWS_EMPTY = 2097186,
			D3D11_MESSAGE_ID_DEVICE_HSGETCONSTANTBUFFERS_BUFFERS_EMPTY = 2097187,
			D3D11_MESSAGE_ID_DEVICE_HSGETSAMPLERS_SAMPLERS_EMPTY = 2097188,
			D3D11_MESSAGE_ID_DEVICE_DSSETSHADERRESOURCES_HAZARD = 2097189,
			D3D11_MESSAGE_ID_DEVICE_DSSETCONSTANTBUFFERS_HAZARD = 2097190,
			D3D11_MESSAGE_ID_DSSETSHADERRESOURCES_UNBINDDELETINGOBJECT = 2097191,
			D3D11_MESSAGE_ID_DSSETCONSTANTBUFFERS_UNBINDDELETINGOBJECT = 2097192,
			D3D11_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDCALL = 2097193,
			D3D11_MESSAGE_ID_CREATEDOMAINSHADER_OUTOFMEMORY = 2097194,
			D3D11_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDSHADERBYTECODE = 2097195,
			D3D11_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDSHADERTYPE = 2097196,
			D3D11_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDCLASSLINKAGE = 2097197,
			D3D11_MESSAGE_ID_DEVICE_DSSETSHADERRESOURCES_VIEWS_EMPTY = 2097198,
			D3D11_MESSAGE_ID_DSSETCONSTANTBUFFERS_INVALIDBUFFER = 2097199,
			D3D11_MESSAGE_ID_DEVICE_DSSETCONSTANTBUFFERS_BUFFERS_EMPTY = 2097200,
			D3D11_MESSAGE_ID_DEVICE_DSSETSAMPLERS_SAMPLERS_EMPTY = 2097201,
			D3D11_MESSAGE_ID_DEVICE_DSGETSHADERRESOURCES_VIEWS_EMPTY = 2097202,
			D3D11_MESSAGE_ID_DEVICE_DSGETCONSTANTBUFFERS_BUFFERS_EMPTY = 2097203,
			D3D11_MESSAGE_ID_DEVICE_DSGETSAMPLERS_SAMPLERS_EMPTY = 2097204,
			D3D11_MESSAGE_ID_DEVICE_DRAW_HS_XOR_DS_MISMATCH = 2097205,
			D3D11_MESSAGE_ID_DEFERRED_CONTEXT_REMOVAL_PROCESS_AT_FAULT = 2097206,
			D3D11_MESSAGE_ID_DEVICE_DRAWINDIRECT_INVALID_ARG_BUFFER = 2097207,
			D3D11_MESSAGE_ID_DEVICE_DRAWINDIRECT_OFFSET_UNALIGNED = 2097208,
			D3D11_MESSAGE_ID_DEVICE_DRAWINDIRECT_OFFSET_OVERFLOW = 2097209,
			D3D11_MESSAGE_ID_RESOURCE_MAP_INVALIDMAPTYPE = 2097210,
			D3D11_MESSAGE_ID_RESOURCE_MAP_INVALIDSUBRESOURCE = 2097211,
			D3D11_MESSAGE_ID_RESOURCE_MAP_INVALIDFLAGS = 2097212,
			D3D11_MESSAGE_ID_RESOURCE_MAP_ALREADYMAPPED = 2097213,
			D3D11_MESSAGE_ID_RESOURCE_MAP_DEVICEREMOVED_RETURN = 2097214,
			D3D11_MESSAGE_ID_RESOURCE_MAP_OUTOFMEMORY_RETURN = 2097215,
			D3D11_MESSAGE_ID_RESOURCE_MAP_WITHOUT_INITIAL_DISCARD = 2097216,
			D3D11_MESSAGE_ID_RESOURCE_UNMAP_INVALIDSUBRESOURCE = 2097217,
			D3D11_MESSAGE_ID_RESOURCE_UNMAP_NOTMAPPED = 2097218,
			D3D11_MESSAGE_ID_DEVICE_DRAW_RASTERIZING_CONTROL_POINTS = 2097219,
			D3D11_MESSAGE_ID_DEVICE_IASETPRIMITIVETOPOLOGY_TOPOLOGY_UNSUPPORTED = 2097220,
			D3D11_MESSAGE_ID_DEVICE_DRAW_HS_DS_SIGNATURE_MISMATCH = 2097221,
			D3D11_MESSAGE_ID_DEVICE_DRAW_HULL_SHADER_INPUT_TOPOLOGY_MISMATCH = 2097222,
			D3D11_MESSAGE_ID_DEVICE_DRAW_HS_DS_CONTROL_POINT_COUNT_MISMATCH = 2097223,
			D3D11_MESSAGE_ID_DEVICE_DRAW_HS_DS_TESSELLATOR_DOMAIN_MISMATCH = 2097224,
			D3D11_MESSAGE_ID_CREATE_CONTEXT = 2097225,
			D3D11_MESSAGE_ID_LIVE_CONTEXT = 2097226,
			D3D11_MESSAGE_ID_DESTROY_CONTEXT = 2097227,
			D3D11_MESSAGE_ID_CREATE_BUFFER = 2097228,
			D3D11_MESSAGE_ID_LIVE_BUFFER_WIN7 = 2097229,
			D3D11_MESSAGE_ID_DESTROY_BUFFER = 2097230,
			D3D11_MESSAGE_ID_CREATE_TEXTURE1D = 2097231,
			D3D11_MESSAGE_ID_LIVE_TEXTURE1D_WIN7 = 2097232,
			D3D11_MESSAGE_ID_DESTROY_TEXTURE1D = 2097233,
			D3D11_MESSAGE_ID_CREATE_TEXTURE2D = 2097234,
			D3D11_MESSAGE_ID_LIVE_TEXTURE2D_WIN7 = 2097235,
			D3D11_MESSAGE_ID_DESTROY_TEXTURE2D = 2097236,
			D3D11_MESSAGE_ID_CREATE_TEXTURE3D = 2097237,
			D3D11_MESSAGE_ID_LIVE_TEXTURE3D_WIN7 = 2097238,
			D3D11_MESSAGE_ID_DESTROY_TEXTURE3D = 2097239,
			D3D11_MESSAGE_ID_CREATE_SHADERRESOURCEVIEW = 2097240,
			D3D11_MESSAGE_ID_LIVE_SHADERRESOURCEVIEW_WIN7 = 2097241,
			D3D11_MESSAGE_ID_DESTROY_SHADERRESOURCEVIEW = 2097242,
			D3D11_MESSAGE_ID_CREATE_RENDERTARGETVIEW = 2097243,
			D3D11_MESSAGE_ID_LIVE_RENDERTARGETVIEW_WIN7 = 2097244,
			D3D11_MESSAGE_ID_DESTROY_RENDERTARGETVIEW = 2097245,
			D3D11_MESSAGE_ID_CREATE_DEPTHSTENCILVIEW = 2097246,
			D3D11_MESSAGE_ID_LIVE_DEPTHSTENCILVIEW_WIN7 = 2097247,
			D3D11_MESSAGE_ID_DESTROY_DEPTHSTENCILVIEW = 2097248,
			D3D11_MESSAGE_ID_CREATE_VERTEXSHADER = 2097249,
			D3D11_MESSAGE_ID_LIVE_VERTEXSHADER_WIN7 = 2097250,
			D3D11_MESSAGE_ID_DESTROY_VERTEXSHADER = 2097251,
			D3D11_MESSAGE_ID_CREATE_HULLSHADER = 2097252,
			D3D11_MESSAGE_ID_LIVE_HULLSHADER = 2097253,
			D3D11_MESSAGE_ID_DESTROY_HULLSHADER = 2097254,
			D3D11_MESSAGE_ID_CREATE_DOMAINSHADER = 2097255,
			D3D11_MESSAGE_ID_LIVE_DOMAINSHADER = 2097256,
			D3D11_MESSAGE_ID_DESTROY_DOMAINSHADER = 2097257,
			D3D11_MESSAGE_ID_CREATE_GEOMETRYSHADER = 2097258,
			D3D11_MESSAGE_ID_LIVE_GEOMETRYSHADER_WIN7 = 2097259,
			D3D11_MESSAGE_ID_DESTROY_GEOMETRYSHADER = 2097260,
			D3D11_MESSAGE_ID_CREATE_PIXELSHADER = 2097261,
			D3D11_MESSAGE_ID_LIVE_PIXELSHADER_WIN7 = 2097262,
			D3D11_MESSAGE_ID_DESTROY_PIXELSHADER = 2097263,
			D3D11_MESSAGE_ID_CREATE_INPUTLAYOUT = 2097264,
			D3D11_MESSAGE_ID_LIVE_INPUTLAYOUT_WIN7 = 2097265,
			D3D11_MESSAGE_ID_DESTROY_INPUTLAYOUT = 2097266,
			D3D11_MESSAGE_ID_CREATE_SAMPLER = 2097267,
			D3D11_MESSAGE_ID_LIVE_SAMPLER_WIN7 = 2097268,
			D3D11_MESSAGE_ID_DESTROY_SAMPLER = 2097269,
			D3D11_MESSAGE_ID_CREATE_BLENDSTATE = 2097270,
			D3D11_MESSAGE_ID_LIVE_BLENDSTATE_WIN7 = 2097271,
			D3D11_MESSAGE_ID_DESTROY_BLENDSTATE = 2097272,
			D3D11_MESSAGE_ID_CREATE_DEPTHSTENCILSTATE = 2097273,
			D3D11_MESSAGE_ID_LIVE_DEPTHSTENCILSTATE_WIN7 = 2097274,
			D3D11_MESSAGE_ID_DESTROY_DEPTHSTENCILSTATE = 2097275,
			D3D11_MESSAGE_ID_CREATE_RASTERIZERSTATE = 2097276,
			D3D11_MESSAGE_ID_LIVE_RASTERIZERSTATE_WIN7 = 2097277,
			D3D11_MESSAGE_ID_DESTROY_RASTERIZERSTATE = 2097278,
			D3D11_MESSAGE_ID_CREATE_QUERY = 2097279,
			D3D11_MESSAGE_ID_LIVE_QUERY_WIN7 = 2097280,
			D3D11_MESSAGE_ID_DESTROY_QUERY = 2097281,
			D3D11_MESSAGE_ID_CREATE_PREDICATE = 2097282,
			D3D11_MESSAGE_ID_LIVE_PREDICATE_WIN7 = 2097283,
			D3D11_MESSAGE_ID_DESTROY_PREDICATE = 2097284,
			D3D11_MESSAGE_ID_CREATE_COUNTER = 2097285,
			D3D11_MESSAGE_ID_DESTROY_COUNTER = 2097286,
			D3D11_MESSAGE_ID_CREATE_COMMANDLIST = 2097287,
			D3D11_MESSAGE_ID_LIVE_COMMANDLIST = 2097288,
			D3D11_MESSAGE_ID_DESTROY_COMMANDLIST = 2097289,
			D3D11_MESSAGE_ID_CREATE_CLASSINSTANCE = 2097290,
			D3D11_MESSAGE_ID_LIVE_CLASSINSTANCE = 2097291,
			D3D11_MESSAGE_ID_DESTROY_CLASSINSTANCE = 2097292,
			D3D11_MESSAGE_ID_CREATE_CLASSLINKAGE = 2097293,
			D3D11_MESSAGE_ID_LIVE_CLASSLINKAGE = 2097294,
			D3D11_MESSAGE_ID_DESTROY_CLASSLINKAGE = 2097295,
			D3D11_MESSAGE_ID_LIVE_DEVICE_WIN7 = 2097296,
			D3D11_MESSAGE_ID_LIVE_OBJECT_SUMMARY_WIN7 = 2097297,
			D3D11_MESSAGE_ID_CREATE_COMPUTESHADER = 2097298,
			D3D11_MESSAGE_ID_LIVE_COMPUTESHADER = 2097299,
			D3D11_MESSAGE_ID_DESTROY_COMPUTESHADER = 2097300,
			D3D11_MESSAGE_ID_CREATE_UNORDEREDACCESSVIEW = 2097301,
			D3D11_MESSAGE_ID_LIVE_UNORDEREDACCESSVIEW = 2097302,
			D3D11_MESSAGE_ID_DESTROY_UNORDEREDACCESSVIEW = 2097303,
			D3D11_MESSAGE_ID_DEVICE_SETSHADER_INTERFACES_FEATURELEVEL = 2097304,
			D3D11_MESSAGE_ID_DEVICE_SETSHADER_INTERFACE_COUNT_MISMATCH = 2097305,
			D3D11_MESSAGE_ID_DEVICE_SETSHADER_INVALID_INSTANCE = 2097306,
			D3D11_MESSAGE_ID_DEVICE_SETSHADER_INVALID_INSTANCE_INDEX = 2097307,
			D3D11_MESSAGE_ID_DEVICE_SETSHADER_INVALID_INSTANCE_TYPE = 2097308,
			D3D11_MESSAGE_ID_DEVICE_SETSHADER_INVALID_INSTANCE_DATA = 2097309,
			D3D11_MESSAGE_ID_DEVICE_SETSHADER_UNBOUND_INSTANCE_DATA = 2097310,
			D3D11_MESSAGE_ID_DEVICE_SETSHADER_INSTANCE_DATA_BINDINGS = 2097311,
			D3D11_MESSAGE_ID_DEVICE_CREATESHADER_CLASSLINKAGE_FULL = 2097312,
			D3D11_MESSAGE_ID_DEVICE_CHECKFEATURESUPPORT_UNRECOGNIZED_FEATURE = 2097313,
			D3D11_MESSAGE_ID_DEVICE_CHECKFEATURESUPPORT_MISMATCHED_DATA_SIZE = 2097314,
			D3D11_MESSAGE_ID_DEVICE_CHECKFEATURESUPPORT_INVALIDARG_RETURN = 2097315,
			D3D11_MESSAGE_ID_DEVICE_CSSETSHADERRESOURCES_HAZARD = 2097316,
			D3D11_MESSAGE_ID_DEVICE_CSSETCONSTANTBUFFERS_HAZARD = 2097317,
			D3D11_MESSAGE_ID_CSSETSHADERRESOURCES_UNBINDDELETINGOBJECT = 2097318,
			D3D11_MESSAGE_ID_CSSETCONSTANTBUFFERS_UNBINDDELETINGOBJECT = 2097319,
			D3D11_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDCALL = 2097320,
			D3D11_MESSAGE_ID_CREATECOMPUTESHADER_OUTOFMEMORY = 2097321,
			D3D11_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDSHADERBYTECODE = 2097322,
			D3D11_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDSHADERTYPE = 2097323,
			D3D11_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDCLASSLINKAGE = 2097324,
			D3D11_MESSAGE_ID_DEVICE_CSSETSHADERRESOURCES_VIEWS_EMPTY = 2097325,
			D3D11_MESSAGE_ID_CSSETCONSTANTBUFFERS_INVALIDBUFFER = 2097326,
			D3D11_MESSAGE_ID_DEVICE_CSSETCONSTANTBUFFERS_BUFFERS_EMPTY = 2097327,
			D3D11_MESSAGE_ID_DEVICE_CSSETSAMPLERS_SAMPLERS_EMPTY = 2097328,
			D3D11_MESSAGE_ID_DEVICE_CSGETSHADERRESOURCES_VIEWS_EMPTY = 2097329,
			D3D11_MESSAGE_ID_DEVICE_CSGETCONSTANTBUFFERS_BUFFERS_EMPTY = 2097330,
			D3D11_MESSAGE_ID_DEVICE_CSGETSAMPLERS_SAMPLERS_EMPTY = 2097331,
			D3D11_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_DOUBLEFLOATOPSNOTSUPPORTED = 2097332,
			D3D11_MESSAGE_ID_DEVICE_CREATEHULLSHADER_DOUBLEFLOATOPSNOTSUPPORTED = 2097333,
			D3D11_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_DOUBLEFLOATOPSNOTSUPPORTED = 2097334,
			D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_DOUBLEFLOATOPSNOTSUPPORTED = 2097335,
			D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DOUBLEFLOATOPSNOTSUPPORTED = 2097336,
			D3D11_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_DOUBLEFLOATOPSNOTSUPPORTED = 2097337,
			D3D11_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_DOUBLEFLOATOPSNOTSUPPORTED = 2097338,
			D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDSTRUCTURESTRIDE = 2097339,
			D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDFLAGS = 2097340,
			D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDRESOURCE = 2097341,
			D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDDESC = 2097342,
			D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDFORMAT = 2097343,
			D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDDIMENSIONS = 2097344,
			D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_UNRECOGNIZEDFORMAT = 2097345,
			D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_HAZARD = 2097346,
			D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_OVERLAPPING_OLD_SLOTS = 2097347,
			D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_NO_OP = 2097348,
			D3D11_MESSAGE_ID_CSSETUNORDEREDACCESSVIEWS_UNBINDDELETINGOBJECT = 2097349,
			D3D11_MESSAGE_ID_PSSETUNORDEREDACCESSVIEWS_UNBINDDELETINGOBJECT = 2097350,
			D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDARG_RETURN = 2097351,
			D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_OUTOFMEMORY_RETURN = 2097352,
			D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_TOOMANYOBJECTS = 2097353,
			D3D11_MESSAGE_ID_DEVICE_CSSETUNORDEREDACCESSVIEWS_HAZARD = 2097354,
			D3D11_MESSAGE_ID_CLEARUNORDEREDACCESSVIEW_DENORMFLUSH = 2097355,
			D3D11_MESSAGE_ID_DEVICE_CSSETUNORDEREDACCESSS_VIEWS_EMPTY = 2097356,
			D3D11_MESSAGE_ID_DEVICE_CSGETUNORDEREDACCESSS_VIEWS_EMPTY = 2097357,
			D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDFLAGS = 2097358,
			D3D11_MESSAGE_ID_CREATESHADERRESESOURCEVIEW_TOOMANYOBJECTS = 2097359,
			D3D11_MESSAGE_ID_DEVICE_DISPATCHINDIRECT_INVALID_ARG_BUFFER = 2097360,
			D3D11_MESSAGE_ID_DEVICE_DISPATCHINDIRECT_OFFSET_UNALIGNED = 2097361,
			D3D11_MESSAGE_ID_DEVICE_DISPATCHINDIRECT_OFFSET_OVERFLOW = 2097362,
			D3D11_MESSAGE_ID_DEVICE_SETRESOURCEMINLOD_INVALIDCONTEXT = 2097363,
			D3D11_MESSAGE_ID_DEVICE_SETRESOURCEMINLOD_INVALIDRESOURCE = 2097364,
			D3D11_MESSAGE_ID_DEVICE_SETRESOURCEMINLOD_INVALIDMINLOD = 2097365,
			D3D11_MESSAGE_ID_DEVICE_GETRESOURCEMINLOD_INVALIDCONTEXT = 2097366,
			D3D11_MESSAGE_ID_DEVICE_GETRESOURCEMINLOD_INVALIDRESOURCE = 2097367,
			D3D11_MESSAGE_ID_OMSETDEPTHSTENCIL_UNBINDDELETINGOBJECT = 2097368,
			D3D11_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_DEPTH_READONLY = 2097369,
			D3D11_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_STENCIL_READONLY = 2097370,
			D3D11_MESSAGE_ID_CHECKFEATURESUPPORT_FORMAT_DEPRECATED = 2097371,
			D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_RETURN_TYPE_MISMATCH = 2097372,
			D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_NOT_SET = 2097373,
			D3D11_MESSAGE_ID_DEVICE_DRAW_UNORDEREDACCESSVIEW_RENDERTARGETVIEW_OVERLAP = 2097374,
			D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_DIMENSION_MISMATCH = 2097375,
			D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_APPEND_UNSUPPORTED = 2097376,
			D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMICS_UNSUPPORTED = 2097377,
			D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_STRUCTURE_STRIDE_MISMATCH = 2097378,
			D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_BUFFER_TYPE_MISMATCH = 2097379,
			D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_RAW_UNSUPPORTED = 2097380,
			D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_FORMAT_LD_UNSUPPORTED = 2097381,
			D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_FORMAT_STORE_UNSUPPORTED = 2097382,
			D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_ADD_UNSUPPORTED = 2097383,
			D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_BITWISE_OPS_UNSUPPORTED = 2097384,
			D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_CMPSTORE_CMPEXCHANGE_UNSUPPORTED = 2097385,
			D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_EXCHANGE_UNSUPPORTED = 2097386,
			D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_SIGNED_MINMAX_UNSUPPORTED = 2097387,
			D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_UNSIGNED_MINMAX_UNSUPPORTED = 2097388,
			D3D11_MESSAGE_ID_DEVICE_DISPATCH_BOUND_RESOURCE_MAPPED = 2097389,
			D3D11_MESSAGE_ID_DEVICE_DISPATCH_THREADGROUPCOUNT_OVERFLOW = 2097390,
			D3D11_MESSAGE_ID_DEVICE_DISPATCH_THREADGROUPCOUNT_ZERO = 2097391,
			D3D11_MESSAGE_ID_DEVICE_SHADERRESOURCEVIEW_STRUCTURE_STRIDE_MISMATCH = 2097392,
			D3D11_MESSAGE_ID_DEVICE_SHADERRESOURCEVIEW_BUFFER_TYPE_MISMATCH = 2097393,
			D3D11_MESSAGE_ID_DEVICE_SHADERRESOURCEVIEW_RAW_UNSUPPORTED = 2097394,
			D3D11_MESSAGE_ID_DEVICE_DISPATCH_UNSUPPORTED = 2097395,
			D3D11_MESSAGE_ID_DEVICE_DISPATCHINDIRECT_UNSUPPORTED = 2097396,
			D3D11_MESSAGE_ID_COPYSTRUCTURECOUNT_INVALIDOFFSET = 2097397,
			D3D11_MESSAGE_ID_COPYSTRUCTURECOUNT_LARGEOFFSET = 2097398,
			D3D11_MESSAGE_ID_COPYSTRUCTURECOUNT_INVALIDDESTINATIONSTATE = 2097399,
			D3D11_MESSAGE_ID_COPYSTRUCTURECOUNT_INVALIDSOURCESTATE = 2097400,
			D3D11_MESSAGE_ID_CHECKFORMATSUPPORT_FORMAT_NOT_SUPPORTED = 2097401,
			D3D11_MESSAGE_ID_DEVICE_CSSETUNORDEREDACCESSVIEWS_INVALIDVIEW = 2097402,
			D3D11_MESSAGE_ID_DEVICE_CSSETUNORDEREDACCESSVIEWS_INVALIDOFFSET = 2097403,
			D3D11_MESSAGE_ID_DEVICE_CSSETUNORDEREDACCESSVIEWS_TOOMANYVIEWS = 2097404,
			D3D11_MESSAGE_ID_CLEARUNORDEREDACCESSVIEWFLOAT_INVALIDFORMAT = 2097405,
			D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_COUNTER_UNSUPPORTED = 2097406,
			D3D11_MESSAGE_ID_REF_WARNING = 2097407,
			D3D11_MESSAGE_ID_DEVICE_DRAW_PIXEL_SHADER_WITHOUT_RTV_OR_DSV = 2097408,
			D3D11_MESSAGE_ID_SHADER_ABORT = 2097409,
			D3D11_MESSAGE_ID_SHADER_MESSAGE = 2097410,
			D3D11_MESSAGE_ID_SHADER_ERROR = 2097411,
			D3D11_MESSAGE_ID_OFFERRESOURCES_INVALIDRESOURCE = 2097412,
			D3D11_MESSAGE_ID_HSSETSAMPLERS_UNBINDDELETINGOBJECT = 2097413,
			D3D11_MESSAGE_ID_DSSETSAMPLERS_UNBINDDELETINGOBJECT = 2097414,
			D3D11_MESSAGE_ID_CSSETSAMPLERS_UNBINDDELETINGOBJECT = 2097415,
			D3D11_MESSAGE_ID_HSSETSHADER_UNBINDDELETINGOBJECT = 2097416,
			D3D11_MESSAGE_ID_DSSETSHADER_UNBINDDELETINGOBJECT = 2097417,
			D3D11_MESSAGE_ID_CSSETSHADER_UNBINDDELETINGOBJECT = 2097418,
			D3D11_MESSAGE_ID_ENQUEUESETEVENT_INVALIDARG_RETURN = 2097419,
			D3D11_MESSAGE_ID_ENQUEUESETEVENT_OUTOFMEMORY_RETURN = 2097420,
			D3D11_MESSAGE_ID_ENQUEUESETEVENT_ACCESSDENIED_RETURN = 2097421,
			D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_NUMUAVS_INVALIDRANGE = 2097422,
			D3D11_MESSAGE_ID_USE_OF_ZERO_REFCOUNT_OBJECT = 2097423,
			D3D11_MESSAGE_ID_D3D11_MESSAGES_END = 2097424,
			D3D11_MESSAGE_ID_D3D11_1_MESSAGES_START = 3145728,
			D3D11_MESSAGE_ID_CREATE_VIDEODECODER = 3145729,
			D3D11_MESSAGE_ID_CREATE_VIDEOPROCESSORENUM = 3145730,
			D3D11_MESSAGE_ID_CREATE_VIDEOPROCESSOR = 3145731,
			D3D11_MESSAGE_ID_CREATE_DECODEROUTPUTVIEW = 3145732,
			D3D11_MESSAGE_ID_CREATE_PROCESSORINPUTVIEW = 3145733,
			D3D11_MESSAGE_ID_CREATE_PROCESSOROUTPUTVIEW = 3145734,
			D3D11_MESSAGE_ID_CREATE_DEVICECONTEXTSTATE = 3145735,
			D3D11_MESSAGE_ID_LIVE_VIDEODECODER = 3145736,
			D3D11_MESSAGE_ID_LIVE_VIDEOPROCESSORENUM = 3145737,
			D3D11_MESSAGE_ID_LIVE_VIDEOPROCESSOR = 3145738,
			D3D11_MESSAGE_ID_LIVE_DECODEROUTPUTVIEW = 3145739,
			D3D11_MESSAGE_ID_LIVE_PROCESSORINPUTVIEW = 3145740,
			D3D11_MESSAGE_ID_LIVE_PROCESSOROUTPUTVIEW = 3145741,
			D3D11_MESSAGE_ID_LIVE_DEVICECONTEXTSTATE = 3145742,
			D3D11_MESSAGE_ID_DESTROY_VIDEODECODER = 3145743,
			D3D11_MESSAGE_ID_DESTROY_VIDEOPROCESSORENUM = 3145744,
			D3D11_MESSAGE_ID_DESTROY_VIDEOPROCESSOR = 3145745,
			D3D11_MESSAGE_ID_DESTROY_DECODEROUTPUTVIEW = 3145746,
			D3D11_MESSAGE_ID_DESTROY_PROCESSORINPUTVIEW = 3145747,
			D3D11_MESSAGE_ID_DESTROY_PROCESSOROUTPUTVIEW = 3145748,
			D3D11_MESSAGE_ID_DESTROY_DEVICECONTEXTSTATE = 3145749,
			D3D11_MESSAGE_ID_CREATEDEVICECONTEXTSTATE_INVALIDFLAGS = 3145750,
			D3D11_MESSAGE_ID_CREATEDEVICECONTEXTSTATE_INVALIDFEATURELEVEL = 3145751,
			D3D11_MESSAGE_ID_CREATEDEVICECONTEXTSTATE_FEATURELEVELS_NOT_SUPPORTED = 3145752,
			D3D11_MESSAGE_ID_CREATEDEVICECONTEXTSTATE_INVALIDREFIID = 3145753,
			D3D11_MESSAGE_ID_DEVICE_DISCARDVIEW_INVALIDVIEW = 3145754,
			D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION1_INVALIDCOPYFLAGS = 3145755,
			D3D11_MESSAGE_ID_UPDATESUBRESOURCE1_INVALIDCOPYFLAGS = 3145756,
			D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDFORCEDSAMPLECOUNT = 3145757,
			D3D11_MESSAGE_ID_CREATEVIDEODECODER_OUTOFMEMORY_RETURN = 3145758,
			D3D11_MESSAGE_ID_CREATEVIDEODECODER_NULLPARAM = 3145759,
			D3D11_MESSAGE_ID_CREATEVIDEODECODER_INVALIDFORMAT = 3145760,
			D3D11_MESSAGE_ID_CREATEVIDEODECODER_ZEROWIDTHHEIGHT = 3145761,
			D3D11_MESSAGE_ID_CREATEVIDEODECODER_DRIVER_INVALIDBUFFERSIZE = 3145762,
			D3D11_MESSAGE_ID_CREATEVIDEODECODER_DRIVER_INVALIDBUFFERUSAGE = 3145763,
			D3D11_MESSAGE_ID_GETVIDEODECODERPROFILECOUNT_OUTOFMEMORY = 3145764,
			D3D11_MESSAGE_ID_GETVIDEODECODERPROFILE_NULLPARAM = 3145765,
			D3D11_MESSAGE_ID_GETVIDEODECODERPROFILE_INVALIDINDEX = 3145766,
			D3D11_MESSAGE_ID_GETVIDEODECODERPROFILE_OUTOFMEMORY_RETURN = 3145767,
			D3D11_MESSAGE_ID_CHECKVIDEODECODERFORMAT_NULLPARAM = 3145768,
			D3D11_MESSAGE_ID_CHECKVIDEODECODERFORMAT_OUTOFMEMORY_RETURN = 3145769,
			D3D11_MESSAGE_ID_GETVIDEODECODERCONFIGCOUNT_NULLPARAM = 3145770,
			D3D11_MESSAGE_ID_GETVIDEODECODERCONFIGCOUNT_OUTOFMEMORY_RETURN = 3145771,
			D3D11_MESSAGE_ID_GETVIDEODECODERCONFIG_NULLPARAM = 3145772,
			D3D11_MESSAGE_ID_GETVIDEODECODERCONFIG_INVALIDINDEX = 3145773,
			D3D11_MESSAGE_ID_GETVIDEODECODERCONFIG_OUTOFMEMORY_RETURN = 3145774,
			D3D11_MESSAGE_ID_GETDECODERCREATIONPARAMS_NULLPARAM = 3145775,
			D3D11_MESSAGE_ID_GETDECODERDRIVERHANDLE_NULLPARAM = 3145776,
			D3D11_MESSAGE_ID_GETDECODERBUFFER_NULLPARAM = 3145777,
			D3D11_MESSAGE_ID_GETDECODERBUFFER_INVALIDBUFFER = 3145778,
			D3D11_MESSAGE_ID_GETDECODERBUFFER_INVALIDTYPE = 3145779,
			D3D11_MESSAGE_ID_GETDECODERBUFFER_LOCKED = 3145780,
			D3D11_MESSAGE_ID_RELEASEDECODERBUFFER_NULLPARAM = 3145781,
			D3D11_MESSAGE_ID_RELEASEDECODERBUFFER_INVALIDTYPE = 3145782,
			D3D11_MESSAGE_ID_RELEASEDECODERBUFFER_NOTLOCKED = 3145783,
			D3D11_MESSAGE_ID_DECODERBEGINFRAME_NULLPARAM = 3145784,
			D3D11_MESSAGE_ID_DECODERBEGINFRAME_HAZARD = 3145785,
			D3D11_MESSAGE_ID_DECODERENDFRAME_NULLPARAM = 3145786,
			D3D11_MESSAGE_ID_SUBMITDECODERBUFFERS_NULLPARAM = 3145787,
			D3D11_MESSAGE_ID_SUBMITDECODERBUFFERS_INVALIDTYPE = 3145788,
			D3D11_MESSAGE_ID_DECODEREXTENSION_NULLPARAM = 3145789,
			D3D11_MESSAGE_ID_DECODEREXTENSION_INVALIDRESOURCE = 3145790,
			D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_OUTOFMEMORY_RETURN = 3145791,
			D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_NULLPARAM = 3145792,
			D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_INVALIDFRAMEFORMAT = 3145793,
			D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_INVALIDUSAGE = 3145794,
			D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_INVALIDINPUTFRAMERATE = 3145795,
			D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_INVALIDOUTPUTFRAMERATE = 3145796,
			D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_INVALIDWIDTHHEIGHT = 3145797,
			D3D11_MESSAGE_ID_GETVIDEOPROCESSORCONTENTDESC_NULLPARAM = 3145798,
			D3D11_MESSAGE_ID_CHECKVIDEOPROCESSORFORMAT_NULLPARAM = 3145799,
			D3D11_MESSAGE_ID_GETVIDEOPROCESSORCAPS_NULLPARAM = 3145800,
			D3D11_MESSAGE_ID_GETVIDEOPROCESSORRATECONVERSIONCAPS_NULLPARAM = 3145801,
			D3D11_MESSAGE_ID_GETVIDEOPROCESSORRATECONVERSIONCAPS_INVALIDINDEX = 3145802,
			D3D11_MESSAGE_ID_GETVIDEOPROCESSORCUSTOMRATE_NULLPARAM = 3145803,
			D3D11_MESSAGE_ID_GETVIDEOPROCESSORCUSTOMRATE_INVALIDINDEX = 3145804,
			D3D11_MESSAGE_ID_GETVIDEOPROCESSORFILTERRANGE_NULLPARAM = 3145805,
			D3D11_MESSAGE_ID_GETVIDEOPROCESSORFILTERRANGE_UNSUPPORTED = 3145806,
			D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOR_OUTOFMEMORY_RETURN = 3145807,
			D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOR_NULLPARAM = 3145808,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTTARGETRECT_NULLPARAM = 3145809,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTBACKGROUNDCOLOR_NULLPARAM = 3145810,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTBACKGROUNDCOLOR_INVALIDALPHA = 3145811,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTCOLORSPACE_NULLPARAM = 3145812,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTALPHAFILLMODE_NULLPARAM = 3145813,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTALPHAFILLMODE_UNSUPPORTED = 3145814,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTALPHAFILLMODE_INVALIDSTREAM = 3145815,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTALPHAFILLMODE_INVALIDFILLMODE = 3145816,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTCONSTRICTION_NULLPARAM = 3145817,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTSTEREOMODE_NULLPARAM = 3145818,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTSTEREOMODE_UNSUPPORTED = 3145819,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTEXTENSION_NULLPARAM = 3145820,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTTARGETRECT_NULLPARAM = 3145821,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTBACKGROUNDCOLOR_NULLPARAM = 3145822,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTCOLORSPACE_NULLPARAM = 3145823,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTALPHAFILLMODE_NULLPARAM = 3145824,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTCONSTRICTION_NULLPARAM = 3145825,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTCONSTRICTION_UNSUPPORTED = 3145826,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTCONSTRICTION_INVALIDSIZE = 3145827,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTSTEREOMODE_NULLPARAM = 3145828,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTEXTENSION_NULLPARAM = 3145829,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFRAMEFORMAT_NULLPARAM = 3145830,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFRAMEFORMAT_INVALIDFORMAT = 3145831,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFRAMEFORMAT_INVALIDSTREAM = 3145832,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMCOLORSPACE_NULLPARAM = 3145833,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMCOLORSPACE_INVALIDSTREAM = 3145834,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMOUTPUTRATE_NULLPARAM = 3145835,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMOUTPUTRATE_INVALIDRATE = 3145836,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMOUTPUTRATE_INVALIDFLAG = 3145837,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMOUTPUTRATE_INVALIDSTREAM = 3145838,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSOURCERECT_NULLPARAM = 3145839,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSOURCERECT_INVALIDSTREAM = 3145840,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSOURCERECT_INVALIDRECT = 3145841,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMDESTRECT_NULLPARAM = 3145842,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMDESTRECT_INVALIDSTREAM = 3145843,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMDESTRECT_INVALIDRECT = 3145844,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMALPHA_NULLPARAM = 3145845,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMALPHA_INVALIDSTREAM = 3145846,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMALPHA_INVALIDALPHA = 3145847,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPALETTE_NULLPARAM = 3145848,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPALETTE_INVALIDSTREAM = 3145849,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPALETTE_INVALIDCOUNT = 3145850,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPALETTE_INVALIDALPHA = 3145851,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPIXELASPECTRATIO_NULLPARAM = 3145852,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPIXELASPECTRATIO_INVALIDSTREAM = 3145853,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPIXELASPECTRATIO_INVALIDRATIO = 3145854,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMLUMAKEY_NULLPARAM = 3145855,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMLUMAKEY_INVALIDSTREAM = 3145856,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMLUMAKEY_INVALIDRANGE = 3145857,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMLUMAKEY_UNSUPPORTED = 3145858,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_NULLPARAM = 3145859,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_INVALIDSTREAM = 3145860,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_UNSUPPORTED = 3145861,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_FLIPUNSUPPORTED = 3145862,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_MONOOFFSETUNSUPPORTED = 3145863,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_FORMATUNSUPPORTED = 3145864,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_INVALIDFORMAT = 3145865,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMAUTOPROCESSINGMODE_NULLPARAM = 3145866,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMAUTOPROCESSINGMODE_INVALIDSTREAM = 3145867,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFILTER_NULLPARAM = 3145868,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFILTER_INVALIDSTREAM = 3145869,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFILTER_INVALIDFILTER = 3145870,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFILTER_UNSUPPORTED = 3145871,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFILTER_INVALIDLEVEL = 3145872,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMEXTENSION_NULLPARAM = 3145873,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMEXTENSION_INVALIDSTREAM = 3145874,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMFRAMEFORMAT_NULLPARAM = 3145875,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMCOLORSPACE_NULLPARAM = 3145876,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMOUTPUTRATE_NULLPARAM = 3145877,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMSOURCERECT_NULLPARAM = 3145878,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMDESTRECT_NULLPARAM = 3145879,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMALPHA_NULLPARAM = 3145880,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMPALETTE_NULLPARAM = 3145881,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMPIXELASPECTRATIO_NULLPARAM = 3145882,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMLUMAKEY_NULLPARAM = 3145883,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMSTEREOFORMAT_NULLPARAM = 3145884,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMAUTOPROCESSINGMODE_NULLPARAM = 3145885,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMFILTER_NULLPARAM = 3145886,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMEXTENSION_NULLPARAM = 3145887,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMEXTENSION_INVALIDSTREAM = 3145888,
			D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_NULLPARAM = 3145889,
			D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDSTREAMCOUNT = 3145890,
			D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_TARGETRECT = 3145891,
			D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDOUTPUT = 3145892,
			D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDPASTFRAMES = 3145893,
			D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDFUTUREFRAMES = 3145894,
			D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDSOURCERECT = 3145895,
			D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDDESTRECT = 3145896,
			D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDINPUTRESOURCE = 3145897,
			D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDARRAYSIZE = 3145898,
			D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDARRAY = 3145899,
			D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_RIGHTEXPECTED = 3145900,
			D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_RIGHTNOTEXPECTED = 3145901,
			D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_STEREONOTENABLED = 3145902,
			D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDRIGHTRESOURCE = 3145903,
			D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_NOSTEREOSTREAMS = 3145904,
			D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INPUTHAZARD = 3145905,
			D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_OUTPUTHAZARD = 3145906,
			D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_OUTOFMEMORY_RETURN = 3145907,
			D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_NULLPARAM = 3145908,
			D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_INVALIDTYPE = 3145909,
			D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_INVALIDBIND = 3145910,
			D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_UNSUPPORTEDFORMAT = 3145911,
			D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_INVALIDMIP = 3145912,
			D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_UNSUPPORTEMIP = 3145913,
			D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_INVALIDARRAYSIZE = 3145914,
			D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_INVALIDARRAY = 3145915,
			D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_INVALIDDIMENSION = 3145916,
			D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_OUTOFMEMORY_RETURN = 3145917,
			D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_NULLPARAM = 3145918,
			D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDTYPE = 3145919,
			D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDBIND = 3145920,
			D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDMISC = 3145921,
			D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDUSAGE = 3145922,
			D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDFORMAT = 3145923,
			D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDFOURCC = 3145924,
			D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDMIP = 3145925,
			D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_UNSUPPORTEDMIP = 3145926,
			D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDARRAYSIZE = 3145927,
			D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDARRAY = 3145928,
			D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDDIMENSION = 3145929,
			D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_OUTOFMEMORY_RETURN = 3145930,
			D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_NULLPARAM = 3145931,
			D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDTYPE = 3145932,
			D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDBIND = 3145933,
			D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDFORMAT = 3145934,
			D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDMIP = 3145935,
			D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_UNSUPPORTEDMIP = 3145936,
			D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_UNSUPPORTEDARRAY = 3145937,
			D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDARRAY = 3145938,
			D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDDIMENSION = 3145939,
			D3D11_MESSAGE_ID_DEVICE_DRAW_INVALID_USE_OF_FORCED_SAMPLE_COUNT = 3145940,
			D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDLOGICOPS = 3145941,
			D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDDARRAYWITHDECODER = 3145942,
			D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDDARRAYWITHDECODER = 3145943,
			D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDDARRAYWITHDECODER = 3145944,
			D3D11_MESSAGE_ID_DEVICE_LOCKEDOUT_INTERFACE = 3145945,
			D3D11_MESSAGE_ID_REF_WARNING_ATOMIC_INCONSISTENT = 3145946,
			D3D11_MESSAGE_ID_REF_WARNING_READING_UNINITIALIZED_RESOURCE = 3145947,
			D3D11_MESSAGE_ID_REF_WARNING_RAW_HAZARD = 3145948,
			D3D11_MESSAGE_ID_REF_WARNING_WAR_HAZARD = 3145949,
			D3D11_MESSAGE_ID_REF_WARNING_WAW_HAZARD = 3145950,
			D3D11_MESSAGE_ID_CREATECRYPTOSESSION_NULLPARAM = 3145951,
			D3D11_MESSAGE_ID_CREATECRYPTOSESSION_OUTOFMEMORY_RETURN = 3145952,
			D3D11_MESSAGE_ID_GETCRYPTOTYPE_NULLPARAM = 3145953,
			D3D11_MESSAGE_ID_GETDECODERPROFILE_NULLPARAM = 3145954,
			D3D11_MESSAGE_ID_GETCRYPTOSESSIONCERTIFICATESIZE_NULLPARAM = 3145955,
			D3D11_MESSAGE_ID_GETCRYPTOSESSIONCERTIFICATE_NULLPARAM = 3145956,
			D3D11_MESSAGE_ID_GETCRYPTOSESSIONCERTIFICATE_WRONGSIZE = 3145957,
			D3D11_MESSAGE_ID_GETCRYPTOSESSIONHANDLE_WRONGSIZE = 3145958,
			D3D11_MESSAGE_ID_NEGOTIATECRPYTOSESSIONKEYEXCHANGE_NULLPARAM = 3145959,
			D3D11_MESSAGE_ID_ENCRYPTIONBLT_UNSUPPORTED = 3145960,
			D3D11_MESSAGE_ID_ENCRYPTIONBLT_NULLPARAM = 3145961,
			D3D11_MESSAGE_ID_ENCRYPTIONBLT_SRC_WRONGDEVICE = 3145962,
			D3D11_MESSAGE_ID_ENCRYPTIONBLT_DST_WRONGDEVICE = 3145963,
			D3D11_MESSAGE_ID_ENCRYPTIONBLT_FORMAT_MISMATCH = 3145964,
			D3D11_MESSAGE_ID_ENCRYPTIONBLT_SIZE_MISMATCH = 3145965,
			D3D11_MESSAGE_ID_ENCRYPTIONBLT_SRC_MULTISAMPLED = 3145966,
			D3D11_MESSAGE_ID_ENCRYPTIONBLT_DST_NOT_STAGING = 3145967,
			D3D11_MESSAGE_ID_ENCRYPTIONBLT_SRC_MAPPED = 3145968,
			D3D11_MESSAGE_ID_ENCRYPTIONBLT_DST_MAPPED = 3145969,
			D3D11_MESSAGE_ID_ENCRYPTIONBLT_SRC_OFFERED = 3145970,
			D3D11_MESSAGE_ID_ENCRYPTIONBLT_DST_OFFERED = 3145971,
			D3D11_MESSAGE_ID_ENCRYPTIONBLT_SRC_CONTENT_UNDEFINED = 3145972,
			D3D11_MESSAGE_ID_DECRYPTIONBLT_UNSUPPORTED = 3145973,
			D3D11_MESSAGE_ID_DECRYPTIONBLT_NULLPARAM = 3145974,
			D3D11_MESSAGE_ID_DECRYPTIONBLT_SRC_WRONGDEVICE = 3145975,
			D3D11_MESSAGE_ID_DECRYPTIONBLT_DST_WRONGDEVICE = 3145976,
			D3D11_MESSAGE_ID_DECRYPTIONBLT_FORMAT_MISMATCH = 3145977,
			D3D11_MESSAGE_ID_DECRYPTIONBLT_SIZE_MISMATCH = 3145978,
			D3D11_MESSAGE_ID_DECRYPTIONBLT_DST_MULTISAMPLED = 3145979,
			D3D11_MESSAGE_ID_DECRYPTIONBLT_SRC_NOT_STAGING = 3145980,
			D3D11_MESSAGE_ID_DECRYPTIONBLT_DST_NOT_RENDER_TARGET = 3145981,
			D3D11_MESSAGE_ID_DECRYPTIONBLT_SRC_MAPPED = 3145982,
			D3D11_MESSAGE_ID_DECRYPTIONBLT_DST_MAPPED = 3145983,
			D3D11_MESSAGE_ID_DECRYPTIONBLT_SRC_OFFERED = 3145984,
			D3D11_MESSAGE_ID_DECRYPTIONBLT_DST_OFFERED = 3145985,
			D3D11_MESSAGE_ID_DECRYPTIONBLT_SRC_CONTENT_UNDEFINED = 3145986,
			D3D11_MESSAGE_ID_STARTSESSIONKEYREFRESH_NULLPARAM = 3145987,
			D3D11_MESSAGE_ID_STARTSESSIONKEYREFRESH_INVALIDSIZE = 3145988,
			D3D11_MESSAGE_ID_FINISHSESSIONKEYREFRESH_NULLPARAM = 3145989,
			D3D11_MESSAGE_ID_GETENCRYPTIONBLTKEY_NULLPARAM = 3145990,
			D3D11_MESSAGE_ID_GETENCRYPTIONBLTKEY_INVALIDSIZE = 3145991,
			D3D11_MESSAGE_ID_GETCONTENTPROTECTIONCAPS_NULLPARAM = 3145992,
			D3D11_MESSAGE_ID_CHECKCRYPTOKEYEXCHANGE_NULLPARAM = 3145993,
			D3D11_MESSAGE_ID_CHECKCRYPTOKEYEXCHANGE_INVALIDINDEX = 3145994,
			D3D11_MESSAGE_ID_CREATEAUTHENTICATEDCHANNEL_NULLPARAM = 3145995,
			D3D11_MESSAGE_ID_CREATEAUTHENTICATEDCHANNEL_UNSUPPORTED = 3145996,
			D3D11_MESSAGE_ID_CREATEAUTHENTICATEDCHANNEL_INVALIDTYPE = 3145997,
			D3D11_MESSAGE_ID_CREATEAUTHENTICATEDCHANNEL_OUTOFMEMORY_RETURN = 3145998,
			D3D11_MESSAGE_ID_GETAUTHENTICATEDCHANNELCERTIFICATESIZE_INVALIDCHANNEL = 3145999,
			D3D11_MESSAGE_ID_GETAUTHENTICATEDCHANNELCERTIFICATESIZE_NULLPARAM = 3146000,
			D3D11_MESSAGE_ID_GETAUTHENTICATEDCHANNELCERTIFICATE_INVALIDCHANNEL = 3146001,
			D3D11_MESSAGE_ID_GETAUTHENTICATEDCHANNELCERTIFICATE_NULLPARAM = 3146002,
			D3D11_MESSAGE_ID_GETAUTHENTICATEDCHANNELCERTIFICATE_WRONGSIZE = 3146003,
			D3D11_MESSAGE_ID_NEGOTIATEAUTHENTICATEDCHANNELKEYEXCHANGE_INVALIDCHANNEL = 3146004,
			D3D11_MESSAGE_ID_NEGOTIATEAUTHENTICATEDCHANNELKEYEXCHANGE_NULLPARAM = 3146005,
			D3D11_MESSAGE_ID_QUERYAUTHENTICATEDCHANNEL_NULLPARAM = 3146006,
			D3D11_MESSAGE_ID_QUERYAUTHENTICATEDCHANNEL_WRONGCHANNEL = 3146007,
			D3D11_MESSAGE_ID_QUERYAUTHENTICATEDCHANNEL_UNSUPPORTEDQUERY = 3146008,
			D3D11_MESSAGE_ID_QUERYAUTHENTICATEDCHANNEL_WRONGSIZE = 3146009,
			D3D11_MESSAGE_ID_QUERYAUTHENTICATEDCHANNEL_INVALIDPROCESSINDEX = 3146010,
			D3D11_MESSAGE_ID_CONFIGUREAUTHENTICATEDCHANNEL_NULLPARAM = 3146011,
			D3D11_MESSAGE_ID_CONFIGUREAUTHENTICATEDCHANNEL_WRONGCHANNEL = 3146012,
			D3D11_MESSAGE_ID_CONFIGUREAUTHENTICATEDCHANNEL_UNSUPPORTEDCONFIGURE = 3146013,
			D3D11_MESSAGE_ID_CONFIGUREAUTHENTICATEDCHANNEL_WRONGSIZE = 3146014,
			D3D11_MESSAGE_ID_CONFIGUREAUTHENTICATEDCHANNEL_INVALIDPROCESSIDTYPE = 3146015,
			D3D11_MESSAGE_ID_VSSETCONSTANTBUFFERS_INVALIDBUFFEROFFSETORCOUNT = 3146016,
			D3D11_MESSAGE_ID_DSSETCONSTANTBUFFERS_INVALIDBUFFEROFFSETORCOUNT = 3146017,
			D3D11_MESSAGE_ID_HSSETCONSTANTBUFFERS_INVALIDBUFFEROFFSETORCOUNT = 3146018,
			D3D11_MESSAGE_ID_GSSETCONSTANTBUFFERS_INVALIDBUFFEROFFSETORCOUNT = 3146019,
			D3D11_MESSAGE_ID_PSSETCONSTANTBUFFERS_INVALIDBUFFEROFFSETORCOUNT = 3146020,
			D3D11_MESSAGE_ID_CSSETCONSTANTBUFFERS_INVALIDBUFFEROFFSETORCOUNT = 3146021,
			D3D11_MESSAGE_ID_NEGOTIATECRPYTOSESSIONKEYEXCHANGE_INVALIDSIZE = 3146022,
			D3D11_MESSAGE_ID_NEGOTIATEAUTHENTICATEDCHANNELKEYEXCHANGE_INVALIDSIZE = 3146023,
			D3D11_MESSAGE_ID_OFFERRESOURCES_INVALIDPRIORITY = 3146024,
			D3D11_MESSAGE_ID_GETCRYPTOSESSIONHANDLE_OUTOFMEMORY = 3146025,
			D3D11_MESSAGE_ID_ACQUIREHANDLEFORCAPTURE_NULLPARAM = 3146026,
			D3D11_MESSAGE_ID_ACQUIREHANDLEFORCAPTURE_INVALIDTYPE = 3146027,
			D3D11_MESSAGE_ID_ACQUIREHANDLEFORCAPTURE_INVALIDBIND = 3146028,
			D3D11_MESSAGE_ID_ACQUIREHANDLEFORCAPTURE_INVALIDARRAY = 3146029,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMROTATION_NULLPARAM = 3146030,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMROTATION_INVALIDSTREAM = 3146031,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMROTATION_INVALID = 3146032,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMROTATION_UNSUPPORTED = 3146033,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMROTATION_NULLPARAM = 3146034,
			D3D11_MESSAGE_ID_DEVICE_CLEARVIEW_INVALIDVIEW = 3146035,
			D3D11_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_DOUBLEEXTENSIONSNOTSUPPORTED = 3146036,
			D3D11_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_SHADEREXTENSIONSNOTSUPPORTED = 3146037,
			D3D11_MESSAGE_ID_DEVICE_CREATEHULLSHADER_DOUBLEEXTENSIONSNOTSUPPORTED = 3146038,
			D3D11_MESSAGE_ID_DEVICE_CREATEHULLSHADER_SHADEREXTENSIONSNOTSUPPORTED = 3146039,
			D3D11_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_DOUBLEEXTENSIONSNOTSUPPORTED = 3146040,
			D3D11_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_SHADEREXTENSIONSNOTSUPPORTED = 3146041,
			D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_DOUBLEEXTENSIONSNOTSUPPORTED = 3146042,
			D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_SHADEREXTENSIONSNOTSUPPORTED = 3146043,
			D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DOUBLEEXTENSIONSNOTSUPPORTED = 3146044,
			D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_SHADEREXTENSIONSNOTSUPPORTED = 3146045,
			D3D11_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_DOUBLEEXTENSIONSNOTSUPPORTED = 3146046,
			D3D11_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_SHADEREXTENSIONSNOTSUPPORTED = 3146047,
			D3D11_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_DOUBLEEXTENSIONSNOTSUPPORTED = 3146048,
			D3D11_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_SHADEREXTENSIONSNOTSUPPORTED = 3146049,
			D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_MINPRECISION = 3146050,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMALPHA_UNSUPPORTED = 3146051,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPIXELASPECTRATIO_UNSUPPORTED = 3146052,
			D3D11_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_UAVSNOTSUPPORTED = 3146053,
			D3D11_MESSAGE_ID_DEVICE_CREATEHULLSHADER_UAVSNOTSUPPORTED = 3146054,
			D3D11_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_UAVSNOTSUPPORTED = 3146055,
			D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_UAVSNOTSUPPORTED = 3146056,
			D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UAVSNOTSUPPORTED = 3146057,
			D3D11_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_UAVSNOTSUPPORTED = 3146058,
			D3D11_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_UAVSNOTSUPPORTED = 3146059,
			D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_INVALIDOFFSET = 3146060,
			D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_TOOMANYVIEWS = 3146061,
			D3D11_MESSAGE_ID_DEVICE_CLEARVIEW_NOTSUPPORTED = 3146062,
			D3D11_MESSAGE_ID_SWAPDEVICECONTEXTSTATE_NOTSUPPORTED = 3146063,
			D3D11_MESSAGE_ID_UPDATESUBRESOURCE_PREFERUPDATESUBRESOURCE1 = 3146064,
			D3D11_MESSAGE_ID_GETDC_INACCESSIBLE = 3146065,
			D3D11_MESSAGE_ID_DEVICE_CLEARVIEW_INVALIDRECT = 3146066,
			D3D11_MESSAGE_ID_DEVICE_DRAW_SAMPLE_MASK_IGNORED_ON_FL9 = 3146067,
			D3D11_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE1_NOT_SUPPORTED = 3146068,
			D3D11_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE_BY_NAME_NOT_SUPPORTED = 3146069,
			D3D11_MESSAGE_ID_ENQUEUESETEVENT_NOT_SUPPORTED = 3146070,
			D3D11_MESSAGE_ID_OFFERRELEASE_NOT_SUPPORTED = 3146071,
			D3D11_MESSAGE_ID_OFFERRESOURCES_INACCESSIBLE = 3146072,
			D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDMSAA = 3146073,
			D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDMSAA = 3146074,
			D3D11_MESSAGE_ID_DEVICE_CLEARVIEW_INVALIDSOURCERECT = 3146075,
			D3D11_MESSAGE_ID_DEVICE_CLEARVIEW_EMPTYRECT = 3146076,
			D3D11_MESSAGE_ID_UPDATESUBRESOURCE_EMPTYDESTBOX = 3146077,
			D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_EMPTYSOURCEBOX = 3146078,
			D3D11_MESSAGE_ID_DEVICE_DRAW_OM_RENDER_TARGET_DOES_NOT_SUPPORT_LOGIC_OPS = 3146079,
			D3D11_MESSAGE_ID_DEVICE_DRAW_DEPTHSTENCILVIEW_NOT_SET = 3146080,
			D3D11_MESSAGE_ID_DEVICE_DRAW_RENDERTARGETVIEW_NOT_SET = 3146081,
			D3D11_MESSAGE_ID_DEVICE_DRAW_RENDERTARGETVIEW_NOT_SET_DUE_TO_FLIP_PRESENT = 3146082,
			D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_NOT_SET_DUE_TO_FLIP_PRESENT = 3146083,
			D3D11_MESSAGE_ID_GETDATAFORNEWHARDWAREKEY_NULLPARAM = 3146084,
			D3D11_MESSAGE_ID_CHECKCRYPTOSESSIONSTATUS_NULLPARAM = 3146085,
			D3D11_MESSAGE_ID_GETCRYPTOSESSIONPRIVATEDATASIZE_NULLPARAM = 3146086,
			D3D11_MESSAGE_ID_GETVIDEODECODERCAPS_NULLPARAM = 3146087,
			D3D11_MESSAGE_ID_GETVIDEODECODERCAPS_ZEROWIDTHHEIGHT = 3146088,
			D3D11_MESSAGE_ID_CHECKVIDEODECODERDOWNSAMPLING_NULLPARAM = 3146089,
			D3D11_MESSAGE_ID_CHECKVIDEODECODERDOWNSAMPLING_INVALIDCOLORSPACE = 3146090,
			D3D11_MESSAGE_ID_CHECKVIDEODECODERDOWNSAMPLING_ZEROWIDTHHEIGHT = 3146091,
			D3D11_MESSAGE_ID_VIDEODECODERENABLEDOWNSAMPLING_NULLPARAM = 3146092,
			D3D11_MESSAGE_ID_VIDEODECODERENABLEDOWNSAMPLING_UNSUPPORTED = 3146093,
			D3D11_MESSAGE_ID_VIDEODECODERUPDATEDOWNSAMPLING_NULLPARAM = 3146094,
			D3D11_MESSAGE_ID_VIDEODECODERUPDATEDOWNSAMPLING_UNSUPPORTED = 3146095,
			D3D11_MESSAGE_ID_CHECKVIDEOPROCESSORFORMATCONVERSION_NULLPARAM = 3146096,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTCOLORSPACE1_NULLPARAM = 3146097,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTCOLORSPACE1_NULLPARAM = 3146098,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMCOLORSPACE1_NULLPARAM = 3146099,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMCOLORSPACE1_INVALIDSTREAM = 3146100,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMMIRROR_NULLPARAM = 3146101,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMMIRROR_INVALIDSTREAM = 3146102,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMMIRROR_UNSUPPORTED = 3146103,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMCOLORSPACE1_NULLPARAM = 3146104,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMMIRROR_NULLPARAM = 3146105,
			D3D11_MESSAGE_ID_RECOMMENDVIDEODECODERDOWNSAMPLING_NULLPARAM = 3146106,
			D3D11_MESSAGE_ID_RECOMMENDVIDEODECODERDOWNSAMPLING_INVALIDCOLORSPACE = 3146107,
			D3D11_MESSAGE_ID_RECOMMENDVIDEODECODERDOWNSAMPLING_ZEROWIDTHHEIGHT = 3146108,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTSHADERUSAGE_NULLPARAM = 3146109,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTSHADERUSAGE_NULLPARAM = 3146110,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_NULLPARAM = 3146111,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_INVALIDSTREAMCOUNT = 3146112,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_TARGETRECT = 3146113,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_INVALIDSOURCERECT = 3146114,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_INVALIDDESTRECT = 3146115,
			D3D11_MESSAGE_ID_GETCRYPTOSESSIONPRIVATEDATASIZE_INVALID_KEY_EXCHANGE_TYPE = 3146116,
			D3D11_MESSAGE_ID_D3D11_1_MESSAGES_END = 3146117,
			D3D11_MESSAGE_ID_D3D11_2_MESSAGES_START = 3146118,
			D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDUSAGE = 3146119,
			D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDUSAGE = 3146120,
			D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDUSAGE = 3146121,
			D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_LEVEL9_STEPRATE_NOT_1 = 3146122,
			D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_LEVEL9_INSTANCING_NOT_SUPPORTED = 3146123,
			D3D11_MESSAGE_ID_UPDATETILEMAPPINGS_INVALID_PARAMETER = 3146124,
			D3D11_MESSAGE_ID_COPYTILEMAPPINGS_INVALID_PARAMETER = 3146125,
			D3D11_MESSAGE_ID_COPYTILES_INVALID_PARAMETER = 3146126,
			D3D11_MESSAGE_ID_UPDATETILES_INVALID_PARAMETER = 3146127,
			D3D11_MESSAGE_ID_RESIZETILEPOOL_INVALID_PARAMETER = 3146128,
			D3D11_MESSAGE_ID_TILEDRESOURCEBARRIER_INVALID_PARAMETER = 3146129,
			D3D11_MESSAGE_ID_NULL_TILE_MAPPING_ACCESS_WARNING = 3146130,
			D3D11_MESSAGE_ID_NULL_TILE_MAPPING_ACCESS_ERROR = 3146131,
			D3D11_MESSAGE_ID_DIRTY_TILE_MAPPING_ACCESS = 3146132,
			D3D11_MESSAGE_ID_DUPLICATE_TILE_MAPPINGS_IN_COVERED_AREA = 3146133,
			D3D11_MESSAGE_ID_TILE_MAPPINGS_IN_COVERED_AREA_DUPLICATED_OUTSIDE = 3146134,
			D3D11_MESSAGE_ID_TILE_MAPPINGS_SHARED_BETWEEN_INCOMPATIBLE_RESOURCES = 3146135,
			D3D11_MESSAGE_ID_TILE_MAPPINGS_SHARED_BETWEEN_INPUT_AND_OUTPUT = 3146136,
			D3D11_MESSAGE_ID_CHECKMULTISAMPLEQUALITYLEVELS_INVALIDFLAGS = 3146137,
			D3D11_MESSAGE_ID_GETRESOURCETILING_NONTILED_RESOURCE = 3146138,
			D3D11_MESSAGE_ID_RESIZETILEPOOL_SHRINK_WITH_MAPPINGS_STILL_DEFINED_PAST_END = 3146139,
			D3D11_MESSAGE_ID_NEED_TO_CALL_TILEDRESOURCEBARRIER = 3146140,
			D3D11_MESSAGE_ID_CREATEDEVICE_INVALIDARGS = 3146141,
			D3D11_MESSAGE_ID_CREATEDEVICE_WARNING = 3146142,
			D3D11_MESSAGE_ID_CLEARUNORDEREDACCESSVIEWUINT_HAZARD = 3146143,
			D3D11_MESSAGE_ID_CLEARUNORDEREDACCESSVIEWFLOAT_HAZARD = 3146144,
			D3D11_MESSAGE_ID_TILED_RESOURCE_TIER_1_BUFFER_TEXTURE_MISMATCH = 3146145,
			D3D11_MESSAGE_ID_CREATE_CRYPTOSESSION = 3146146,
			D3D11_MESSAGE_ID_CREATE_AUTHENTICATEDCHANNEL = 3146147,
			D3D11_MESSAGE_ID_LIVE_CRYPTOSESSION = 3146148,
			D3D11_MESSAGE_ID_LIVE_AUTHENTICATEDCHANNEL = 3146149,
			D3D11_MESSAGE_ID_DESTROY_CRYPTOSESSION = 3146150,
			D3D11_MESSAGE_ID_DESTROY_AUTHENTICATEDCHANNEL = 3146151,
			D3D11_MESSAGE_ID_D3D11_2_MESSAGES_END = 3146152,
			D3D11_MESSAGE_ID_D3D11_3_MESSAGES_START = 3146153,
			D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_INVALID_CONSERVATIVERASTERMODE = 3146154,
			D3D11_MESSAGE_ID_DEVICE_DRAW_INVALID_SYSTEMVALUE = 3146155,
			D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_INVALIDCONTEXTTYPE = 3146156,
			D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_DECODENOTSUPPORTED = 3146157,
			D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_ENCODENOTSUPPORTED = 3146158,
			D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDPLANEINDEX = 3146159,
			D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDVIDEOPLANEINDEX = 3146160,
			D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_AMBIGUOUSVIDEOPLANEINDEX = 3146161,
			D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDPLANEINDEX = 3146162,
			D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDVIDEOPLANEINDEX = 3146163,
			D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_AMBIGUOUSVIDEOPLANEINDEX = 3146164,
			D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDPLANEINDEX = 3146165,
			D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDVIDEOPLANEINDEX = 3146166,
			D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_AMBIGUOUSVIDEOPLANEINDEX = 3146167,
			D3D11_MESSAGE_ID_JPEGDECODE_INVALIDSCANDATAOFFSET = 3146168,
			D3D11_MESSAGE_ID_JPEGDECODE_NOTSUPPORTED = 3146169,
			D3D11_MESSAGE_ID_JPEGDECODE_DIMENSIONSTOOLARGE = 3146170,
			D3D11_MESSAGE_ID_JPEGDECODE_INVALIDCOMPONENTS = 3146171,
			D3D11_MESSAGE_ID_JPEGDECODE_DESTINATIONNOT2D = 3146172,
			D3D11_MESSAGE_ID_JPEGDECODE_TILEDRESOURCESUNSUPPORTED = 3146173,
			D3D11_MESSAGE_ID_JPEGDECODE_GUARDRECTSUNSUPPORTED = 3146174,
			D3D11_MESSAGE_ID_JPEGDECODE_FORMATUNSUPPORTED = 3146175,
			D3D11_MESSAGE_ID_JPEGDECODE_INVALIDSUBRESOURCE = 3146176,
			D3D11_MESSAGE_ID_JPEGDECODE_INVALIDMIPLEVEL = 3146177,
			D3D11_MESSAGE_ID_JPEGDECODE_EMPTYDESTBOX = 3146178,
			D3D11_MESSAGE_ID_JPEGDECODE_DESTBOXNOT2D = 3146179,
			D3D11_MESSAGE_ID_JPEGDECODE_DESTBOXNOTSUB = 3146180,
			D3D11_MESSAGE_ID_JPEGDECODE_DESTBOXESINTERSECT = 3146181,
			D3D11_MESSAGE_ID_JPEGDECODE_XSUBSAMPLEMISMATCH = 3146182,
			D3D11_MESSAGE_ID_JPEGDECODE_YSUBSAMPLEMISMATCH = 3146183,
			D3D11_MESSAGE_ID_JPEGDECODE_XSUBSAMPLEODD = 3146184,
			D3D11_MESSAGE_ID_JPEGDECODE_YSUBSAMPLEODD = 3146185,
			D3D11_MESSAGE_ID_JPEGDECODE_OUTPUTDIMENSIONSTOOLARGE = 3146186,
			D3D11_MESSAGE_ID_JPEGDECODE_NONPOW2SCALEUNSUPPORTED = 3146187,
			D3D11_MESSAGE_ID_JPEGDECODE_FRACTIONALDOWNSCALETOLARGE = 3146188,
			D3D11_MESSAGE_ID_JPEGDECODE_CHROMASIZEMISMATCH = 3146189,
			D3D11_MESSAGE_ID_JPEGDECODE_LUMACHROMASIZEMISMATCH = 3146190,
			D3D11_MESSAGE_ID_JPEGDECODE_INVALIDNUMDESTINATIONS = 3146191,
			D3D11_MESSAGE_ID_JPEGDECODE_SUBBOXUNSUPPORTED = 3146192,
			D3D11_MESSAGE_ID_JPEGDECODE_1DESTUNSUPPORTEDFORMAT = 3146193,
			D3D11_MESSAGE_ID_JPEGDECODE_3DESTUNSUPPORTEDFORMAT = 3146194,
			D3D11_MESSAGE_ID_JPEGDECODE_SCALEUNSUPPORTED = 3146195,
			D3D11_MESSAGE_ID_JPEGDECODE_INVALIDSOURCESIZE = 3146196,
			D3D11_MESSAGE_ID_JPEGDECODE_INVALIDCOPYFLAGS = 3146197,
			D3D11_MESSAGE_ID_JPEGDECODE_HAZARD = 3146198,
			D3D11_MESSAGE_ID_JPEGDECODE_UNSUPPORTEDSRCBUFFERUSAGE = 3146199,
			D3D11_MESSAGE_ID_JPEGDECODE_UNSUPPORTEDSRCBUFFERMISCFLAGS = 3146200,
			D3D11_MESSAGE_ID_JPEGDECODE_UNSUPPORTEDDSTTEXTUREUSAGE = 3146201,
			D3D11_MESSAGE_ID_JPEGDECODE_BACKBUFFERNOTSUPPORTED = 3146202,
			D3D11_MESSAGE_ID_JPEGDECODE_UNSUPPRTEDCOPYFLAGS = 3146203,
			D3D11_MESSAGE_ID_JPEGENCODE_NOTSUPPORTED = 3146204,
			D3D11_MESSAGE_ID_JPEGENCODE_INVALIDSCANDATAOFFSET = 3146205,
			D3D11_MESSAGE_ID_JPEGENCODE_INVALIDCOMPONENTS = 3146206,
			D3D11_MESSAGE_ID_JPEGENCODE_SOURCENOT2D = 3146207,
			D3D11_MESSAGE_ID_JPEGENCODE_TILEDRESOURCESUNSUPPORTED = 3146208,
			D3D11_MESSAGE_ID_JPEGENCODE_GUARDRECTSUNSUPPORTED = 3146209,
			D3D11_MESSAGE_ID_JPEGENCODE_XSUBSAMPLEMISMATCH = 3146210,
			D3D11_MESSAGE_ID_JPEGENCODE_YSUBSAMPLEMISMATCH = 3146211,
			D3D11_MESSAGE_ID_JPEGENCODE_FORMATUNSUPPORTED = 3146212,
			D3D11_MESSAGE_ID_JPEGENCODE_INVALIDSUBRESOURCE = 3146213,
			D3D11_MESSAGE_ID_JPEGENCODE_INVALIDMIPLEVEL = 3146214,
			D3D11_MESSAGE_ID_JPEGENCODE_DIMENSIONSTOOLARGE = 3146215,
			D3D11_MESSAGE_ID_JPEGENCODE_HAZARD = 3146216,
			D3D11_MESSAGE_ID_JPEGENCODE_UNSUPPORTEDDSTBUFFERUSAGE = 3146217,
			D3D11_MESSAGE_ID_JPEGENCODE_UNSUPPORTEDDSTBUFFERMISCFLAGS = 3146218,
			D3D11_MESSAGE_ID_JPEGENCODE_UNSUPPORTEDSRCTEXTUREUSAGE = 3146219,
			D3D11_MESSAGE_ID_JPEGENCODE_BACKBUFFERNOTSUPPORTED = 3146220,
			D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_UNSUPPORTEDCONTEXTTTYPEFORQUERY = 3146221,
			D3D11_MESSAGE_ID_FLUSH1_INVALIDCONTEXTTYPE = 3146222,
			D3D11_MESSAGE_ID_DEVICE_SETHARDWAREPROTECTION_INVALIDCONTEXT = 3146223,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTHDRMETADATA_NULLPARAM = 3146224,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTHDRMETADATA_INVALIDSIZE = 3146225,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTHDRMETADATA_NULLPARAM = 3146226,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTHDRMETADATA_INVALIDSIZE = 3146227,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMHDRMETADATA_NULLPARAM = 3146228,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMHDRMETADATA_INVALIDSTREAM = 3146229,
			D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMHDRMETADATA_INVALIDSIZE = 3146230,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMHDRMETADATA_NULLPARAM = 3146231,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMHDRMETADATA_INVALIDSTREAM = 3146232,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMHDRMETADATA_INVALIDSIZE = 3146233,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMFRAMEFORMAT_INVALIDSTREAM = 3146234,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMCOLORSPACE_INVALIDSTREAM = 3146235,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMOUTPUTRATE_INVALIDSTREAM = 3146236,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMSOURCERECT_INVALIDSTREAM = 3146237,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMDESTRECT_INVALIDSTREAM = 3146238,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMALPHA_INVALIDSTREAM = 3146239,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMPALETTE_INVALIDSTREAM = 3146240,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMPIXELASPECTRATIO_INVALIDSTREAM = 3146241,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMLUMAKEY_INVALIDSTREAM = 3146242,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMSTEREOFORMAT_INVALIDSTREAM = 3146243,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMAUTOPROCESSINGMODE_INVALIDSTREAM = 3146244,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMFILTER_INVALIDSTREAM = 3146245,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMROTATION_INVALIDSTREAM = 3146246,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMCOLORSPACE1_INVALIDSTREAM = 3146247,
			D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMMIRROR_INVALIDSTREAM = 3146248,
			D3D11_MESSAGE_ID_CREATE_FENCE = 3146249,
			D3D11_MESSAGE_ID_LIVE_FENCE = 3146250,
			D3D11_MESSAGE_ID_DESTROY_FENCE = 3146251,
			D3D11_MESSAGE_ID_CREATE_SYNCHRONIZEDCHANNEL = 3146252,
			D3D11_MESSAGE_ID_LIVE_SYNCHRONIZEDCHANNEL = 3146253,
			D3D11_MESSAGE_ID_DESTROY_SYNCHRONIZEDCHANNEL = 3146254,
			D3D11_MESSAGE_ID_CREATEFENCE_INVALIDFLAGS = 3146255,
			D3D11_MESSAGE_ID_D3D11_3_MESSAGES_END = 3146256,
			D3D11_MESSAGE_ID_D3D11_5_MESSAGES_START = 3146257,
			D3D11_MESSAGE_ID_NEGOTIATECRYPTOSESSIONKEYEXCHANGEMT_INVALIDKEYEXCHANGETYPE = 3146258,
			D3D11_MESSAGE_ID_NEGOTIATECRYPTOSESSIONKEYEXCHANGEMT_NOT_SUPPORTED = 3146259,
			D3D11_MESSAGE_ID_DECODERBEGINFRAME_INVALID_HISTOGRAM_COMPONENT_COUNT = 3146260,
			D3D11_MESSAGE_ID_DECODERBEGINFRAME_INVALID_HISTOGRAM_COMPONENT = 3146261,
			D3D11_MESSAGE_ID_DECODERBEGINFRAME_INVALID_HISTOGRAM_BUFFER_SIZE = 3146262,
			D3D11_MESSAGE_ID_DECODERBEGINFRAME_INVALID_HISTOGRAM_BUFFER_USAGE = 3146263,
			D3D11_MESSAGE_ID_DECODERBEGINFRAME_INVALID_HISTOGRAM_BUFFER_MISC_FLAGS = 3146264,
			D3D11_MESSAGE_ID_DECODERBEGINFRAME_INVALID_HISTOGRAM_BUFFER_OFFSET = 3146265,
			D3D11_MESSAGE_ID_CREATE_TRACKEDWORKLOAD = 3146266,
			D3D11_MESSAGE_ID_LIVE_TRACKEDWORKLOAD = 3146267,
			D3D11_MESSAGE_ID_DESTROY_TRACKEDWORKLOAD = 3146268,
			D3D11_MESSAGE_ID_CREATE_TRACKED_WORKLOAD_NULLPARAM = 3146269,
			D3D11_MESSAGE_ID_CREATE_TRACKED_WORKLOAD_INVALID_MAX_INSTANCES = 3146270,
			D3D11_MESSAGE_ID_CREATE_TRACKED_WORKLOAD_INVALID_DEADLINE_TYPE = 3146271,
			D3D11_MESSAGE_ID_CREATE_TRACKED_WORKLOAD_INVALID_ENGINE_TYPE = 3146272,
			D3D11_MESSAGE_ID_MULTIPLE_TRACKED_WORKLOADS = 3146273,
			D3D11_MESSAGE_ID_MULTIPLE_TRACKED_WORKLOAD_PAIRS = 3146274,
			D3D11_MESSAGE_ID_INCOMPLETE_TRACKED_WORKLOAD_PAIR = 3146275,
			D3D11_MESSAGE_ID_OUT_OF_ORDER_TRACKED_WORKLOAD_PAIR = 3146276,
			D3D11_MESSAGE_ID_CANNOT_ADD_TRACKED_WORKLOAD = 3146277,
			D3D11_MESSAGE_ID_TRACKED_WORKLOAD_NOT_SUPPORTED = 3146278,
			D3D11_MESSAGE_ID_TRACKED_WORKLOAD_ENGINE_TYPE_NOT_FOUND = 3146279,
			D3D11_MESSAGE_ID_NO_TRACKED_WORKLOAD_SLOT_AVAILABLE = 3146280,
			D3D11_MESSAGE_ID_END_TRACKED_WORKLOAD_INVALID_ARG = 3146281,
			D3D11_MESSAGE_ID_TRACKED_WORKLOAD_DISJOINT_FAILURE = 3146282,
			D3D11_MESSAGE_ID_D3D11_5_MESSAGES_END = 3146283,
		}
		[AllowDuplicates]
		public enum D3D11_COPY_FLAGS : int32
		{
			D3D11_COPY_NO_OVERWRITE = 1,
			D3D11_COPY_DISCARD = 2,
		}
		[AllowDuplicates]
		public enum D3D11_LOGIC_OP : int32
		{
			D3D11_LOGIC_OP_CLEAR = 0,
			D3D11_LOGIC_OP_SET = 1,
			D3D11_LOGIC_OP_COPY = 2,
			D3D11_LOGIC_OP_COPY_INVERTED = 3,
			D3D11_LOGIC_OP_NOOP = 4,
			D3D11_LOGIC_OP_INVERT = 5,
			D3D11_LOGIC_OP_AND = 6,
			D3D11_LOGIC_OP_NAND = 7,
			D3D11_LOGIC_OP_OR = 8,
			D3D11_LOGIC_OP_NOR = 9,
			D3D11_LOGIC_OP_XOR = 10,
			D3D11_LOGIC_OP_EQUIV = 11,
			D3D11_LOGIC_OP_AND_REVERSE = 12,
			D3D11_LOGIC_OP_AND_INVERTED = 13,
			D3D11_LOGIC_OP_OR_REVERSE = 14,
			D3D11_LOGIC_OP_OR_INVERTED = 15,
		}
		[AllowDuplicates]
		public enum D3D11_1_CREATE_DEVICE_CONTEXT_STATE_FLAG : int32
		{
			D3D11_1_CREATE_DEVICE_CONTEXT_STATE_SINGLETHREADED = 1,
		}
		[AllowDuplicates]
		public enum D3D11_VIDEO_DECODER_CAPS : int32
		{
			D3D11_VIDEO_DECODER_CAPS_DOWNSAMPLE = 1,
			D3D11_VIDEO_DECODER_CAPS_NON_REAL_TIME = 2,
			D3D11_VIDEO_DECODER_CAPS_DOWNSAMPLE_DYNAMIC = 4,
			D3D11_VIDEO_DECODER_CAPS_DOWNSAMPLE_REQUIRED = 8,
			D3D11_VIDEO_DECODER_CAPS_UNSUPPORTED = 16,
		}
		[AllowDuplicates]
		public enum D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINTS : int32
		{
			D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINT_MULTIPLANE_OVERLAY_ROTATION = 1,
			D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINT_MULTIPLANE_OVERLAY_RESIZE = 2,
			D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINT_MULTIPLANE_OVERLAY_COLOR_SPACE_CONVERSION = 4,
			D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINT_TRIPLE_BUFFER_OUTPUT = 8,
		}
		[AllowDuplicates]
		public enum D3D11_CRYPTO_SESSION_STATUS : int32
		{
			D3D11_CRYPTO_SESSION_STATUS_OK = 0,
			D3D11_CRYPTO_SESSION_STATUS_KEY_LOST = 1,
			D3D11_CRYPTO_SESSION_STATUS_KEY_AND_CONTENT_LOST = 2,
		}
		[AllowDuplicates]
		public enum D3D11_TILE_MAPPING_FLAG : int32
		{
			D3D11_TILE_MAPPING_NO_OVERWRITE = 1,
		}
		[AllowDuplicates]
		public enum D3D11_TILE_RANGE_FLAG : int32
		{
			D3D11_TILE_RANGE_NULL = 1,
			D3D11_TILE_RANGE_SKIP = 2,
			D3D11_TILE_RANGE_REUSE_SINGLE_TILE = 4,
		}
		[AllowDuplicates]
		public enum D3D11_CHECK_MULTISAMPLE_QUALITY_LEVELS_FLAG : int32
		{
			D3D11_CHECK_MULTISAMPLE_QUALITY_LEVELS_TILED_RESOURCE = 1,
		}
		[AllowDuplicates]
		public enum D3D11_TILE_COPY_FLAG : int32
		{
			D3D11_TILE_COPY_NO_OVERWRITE = 1,
			D3D11_TILE_COPY_LINEAR_BUFFER_TO_SWIZZLED_TILED_RESOURCE = 2,
			D3D11_TILE_COPY_SWIZZLED_TILED_RESOURCE_TO_LINEAR_BUFFER = 4,
		}
		[AllowDuplicates]
		public enum D3D11_CONTEXT_TYPE : int32
		{
			D3D11_CONTEXT_TYPE_ALL = 0,
			D3D11_CONTEXT_TYPE_3D = 1,
			D3D11_CONTEXT_TYPE_COMPUTE = 2,
			D3D11_CONTEXT_TYPE_COPY = 3,
			D3D11_CONTEXT_TYPE_VIDEO = 4,
		}
		[AllowDuplicates]
		public enum D3D11_TEXTURE_LAYOUT : int32
		{
			D3D11_TEXTURE_LAYOUT_UNDEFINED = 0,
			D3D11_TEXTURE_LAYOUT_ROW_MAJOR = 1,
			D3D11_TEXTURE_LAYOUT_64K_STANDARD_SWIZZLE = 2,
		}
		[AllowDuplicates]
		public enum D3D11_CONSERVATIVE_RASTERIZATION_MODE : int32
		{
			D3D11_CONSERVATIVE_RASTERIZATION_MODE_OFF = 0,
			D3D11_CONSERVATIVE_RASTERIZATION_MODE_ON = 1,
		}
		[AllowDuplicates]
		public enum D3D11_FENCE_FLAG : uint32
		{
			D3D11_FENCE_FLAG_NONE = 0,
			D3D11_FENCE_FLAG_SHARED = 2,
			D3D11_FENCE_FLAG_SHARED_CROSS_ADAPTER = 4,
			D3D11_FENCE_FLAG_NON_MONITORED = 8,
		}
		[AllowDuplicates]
		public enum D3D11_FEATURE_VIDEO : int32
		{
			D3D11_FEATURE_VIDEO_DECODER_HISTOGRAM = 0,
		}
		[AllowDuplicates]
		public enum D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT : int32
		{
			D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_Y = 0,
			D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_U = 1,
			D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_V = 2,
			D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_R = 0,
			D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_G = 1,
			D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_B = 2,
			D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_A = 3,
		}
		[AllowDuplicates]
		public enum D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAGS : uint32
		{
			D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_NONE = 0,
			D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_Y = 1,
			D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_U = 2,
			D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_V = 4,
			D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_R = 1,
			D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_G = 2,
			D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_B = 4,
			D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_A = 8,
		}
		[AllowDuplicates]
		public enum D3D11_CRYPTO_SESSION_KEY_EXCHANGE_FLAGS : uint32
		{
			D3D11_CRYPTO_SESSION_KEY_EXCHANGE_FLAG_NONE = 0,
		}
		[AllowDuplicates]
		public enum D3D11_SHADER_VERSION_TYPE : int32
		{
			D3D11_SHVER_PIXEL_SHADER = 0,
			D3D11_SHVER_VERTEX_SHADER = 1,
			D3D11_SHVER_GEOMETRY_SHADER = 2,
			D3D11_SHVER_HULL_SHADER = 3,
			D3D11_SHVER_DOMAIN_SHADER = 4,
			D3D11_SHVER_COMPUTE_SHADER = 5,
			D3D11_SHVER_RESERVED0 = 65520,
		}
		[AllowDuplicates]
		public enum D3D11_SHADER_TYPE : int32
		{
			D3D11_VERTEX_SHADER = 1,
			D3D11_HULL_SHADER = 2,
			D3D11_DOMAIN_SHADER = 3,
			D3D11_GEOMETRY_SHADER = 4,
			D3D11_PIXEL_SHADER = 5,
			D3D11_COMPUTE_SHADER = 6,
		}
		[AllowDuplicates]
		public enum D3D11_TRACE_GS_INPUT_PRIMITIVE : int32
		{
			D3D11_TRACE_GS_INPUT_PRIMITIVE_UNDEFINED = 0,
			D3D11_TRACE_GS_INPUT_PRIMITIVE_POINT = 1,
			D3D11_TRACE_GS_INPUT_PRIMITIVE_LINE = 2,
			D3D11_TRACE_GS_INPUT_PRIMITIVE_TRIANGLE = 3,
			D3D11_TRACE_GS_INPUT_PRIMITIVE_LINE_ADJ = 6,
			D3D11_TRACE_GS_INPUT_PRIMITIVE_TRIANGLE_ADJ = 7,
		}
		[AllowDuplicates]
		public enum D3D11_TRACE_REGISTER_TYPE : int32
		{
			D3D11_TRACE_OUTPUT_NULL_REGISTER = 0,
			D3D11_TRACE_INPUT_REGISTER = 1,
			D3D11_TRACE_INPUT_PRIMITIVE_ID_REGISTER = 2,
			D3D11_TRACE_IMMEDIATE_CONSTANT_BUFFER = 3,
			D3D11_TRACE_TEMP_REGISTER = 4,
			D3D11_TRACE_INDEXABLE_TEMP_REGISTER = 5,
			D3D11_TRACE_OUTPUT_REGISTER = 6,
			D3D11_TRACE_OUTPUT_DEPTH_REGISTER = 7,
			D3D11_TRACE_CONSTANT_BUFFER = 8,
			D3D11_TRACE_IMMEDIATE32 = 9,
			D3D11_TRACE_SAMPLER = 10,
			D3D11_TRACE_RESOURCE = 11,
			D3D11_TRACE_RASTERIZER = 12,
			D3D11_TRACE_OUTPUT_COVERAGE_MASK = 13,
			D3D11_TRACE_STREAM = 14,
			D3D11_TRACE_THIS_POINTER = 15,
			D3D11_TRACE_OUTPUT_CONTROL_POINT_ID_REGISTER = 16,
			D3D11_TRACE_INPUT_FORK_INSTANCE_ID_REGISTER = 17,
			D3D11_TRACE_INPUT_JOIN_INSTANCE_ID_REGISTER = 18,
			D3D11_TRACE_INPUT_CONTROL_POINT_REGISTER = 19,
			D3D11_TRACE_OUTPUT_CONTROL_POINT_REGISTER = 20,
			D3D11_TRACE_INPUT_PATCH_CONSTANT_REGISTER = 21,
			D3D11_TRACE_INPUT_DOMAIN_POINT_REGISTER = 22,
			D3D11_TRACE_UNORDERED_ACCESS_VIEW = 23,
			D3D11_TRACE_THREAD_GROUP_SHARED_MEMORY = 24,
			D3D11_TRACE_INPUT_THREAD_ID_REGISTER = 25,
			D3D11_TRACE_INPUT_THREAD_GROUP_ID_REGISTER = 26,
			D3D11_TRACE_INPUT_THREAD_ID_IN_GROUP_REGISTER = 27,
			D3D11_TRACE_INPUT_COVERAGE_MASK_REGISTER = 28,
			D3D11_TRACE_INPUT_THREAD_ID_IN_GROUP_FLATTENED_REGISTER = 29,
			D3D11_TRACE_INPUT_GS_INSTANCE_ID_REGISTER = 30,
			D3D11_TRACE_OUTPUT_DEPTH_GREATER_EQUAL_REGISTER = 31,
			D3D11_TRACE_OUTPUT_DEPTH_LESS_EQUAL_REGISTER = 32,
			D3D11_TRACE_IMMEDIATE64 = 33,
			D3D11_TRACE_INPUT_CYCLE_COUNTER_REGISTER = 34,
			D3D11_TRACE_INTERFACE_POINTER = 35,
		}
		[AllowDuplicates]
		public enum D3DX11_SCAN_DATA_TYPE : int32
		{
			D3DX11_SCAN_DATA_TYPE_FLOAT = 1,
			D3DX11_SCAN_DATA_TYPE_INT = 2,
			D3DX11_SCAN_DATA_TYPE_UINT = 3,
		}
		[AllowDuplicates]
		public enum D3DX11_SCAN_OPCODE : int32
		{
			D3DX11_SCAN_OPCODE_ADD = 1,
			D3DX11_SCAN_OPCODE_MIN = 2,
			D3DX11_SCAN_OPCODE_MAX = 3,
			D3DX11_SCAN_OPCODE_MUL = 4,
			D3DX11_SCAN_OPCODE_AND = 5,
			D3DX11_SCAN_OPCODE_OR = 6,
			D3DX11_SCAN_OPCODE_XOR = 7,
		}
		[AllowDuplicates]
		public enum D3DX11_SCAN_DIRECTION : int32
		{
			D3DX11_SCAN_DIRECTION_FORWARD = 1,
			D3DX11_SCAN_DIRECTION_BACKWARD = 2,
		}
		[AllowDuplicates]
		public enum D3DX11_FFT_DATA_TYPE : int32
		{
			D3DX11_FFT_DATA_TYPE_REAL = 0,
			D3DX11_FFT_DATA_TYPE_COMPLEX = 1,
		}
		[AllowDuplicates]
		public enum D3DX11_FFT_DIM_MASK : int32
		{
			D3DX11_FFT_DIM_MASK_1D = 1,
			D3DX11_FFT_DIM_MASK_2D = 3,
			D3DX11_FFT_DIM_MASK_3D = 7,
		}
		[AllowDuplicates]
		public enum D3DX11_FFT_CREATE_FLAG : int32
		{
			D3DX11_FFT_CREATE_FLAG_NO_PRECOMPUTE_BUFFERS = 1,
		}
		
		// --- Function Pointers ---
		
		public function HRESULT PFN_D3D11_CREATE_DEVICE(IDXGIAdapter* param0, D3D_DRIVER_TYPE param1, HINSTANCE param2, uint32 param3, D3D_FEATURE_LEVEL* param4, uint32 FeatureLevels, uint32 param6, ID3D11Device** param7, D3D_FEATURE_LEVEL* param8, ID3D11DeviceContext** param9);
		public function HRESULT PFN_D3D11_CREATE_DEVICE_AND_SWAP_CHAIN(IDXGIAdapter* param0, D3D_DRIVER_TYPE param1, HINSTANCE param2, uint32 param3, D3D_FEATURE_LEVEL* param4, uint32 FeatureLevels, uint32 param6, DXGI_SWAP_CHAIN_DESC* param7, IDXGISwapChain** param8, ID3D11Device** param9, D3D_FEATURE_LEVEL* param10, ID3D11DeviceContext** param11);
		
		// --- Structs ---
		
		[CRepr]
		public struct D3D11_INPUT_ELEMENT_DESC
		{
			public PSTR SemanticName;
			public uint32 SemanticIndex;
			public DXGI_FORMAT Format;
			public uint32 InputSlot;
			public uint32 AlignedByteOffset;
			public D3D11_INPUT_CLASSIFICATION InputSlotClass;
			public uint32 InstanceDataStepRate;
		}
		[CRepr]
		public struct D3D11_SO_DECLARATION_ENTRY
		{
			public uint32 Stream;
			public PSTR SemanticName;
			public uint32 SemanticIndex;
			public uint8 StartComponent;
			public uint8 ComponentCount;
			public uint8 OutputSlot;
		}
		[CRepr]
		public struct D3D11_VIEWPORT
		{
			public float TopLeftX;
			public float TopLeftY;
			public float Width;
			public float Height;
			public float MinDepth;
			public float MaxDepth;
		}
		[CRepr]
		public struct D3D11_DRAW_INSTANCED_INDIRECT_ARGS
		{
			public uint32 VertexCountPerInstance;
			public uint32 InstanceCount;
			public uint32 StartVertexLocation;
			public uint32 StartInstanceLocation;
		}
		[CRepr]
		public struct D3D11_DRAW_INDEXED_INSTANCED_INDIRECT_ARGS
		{
			public uint32 IndexCountPerInstance;
			public uint32 InstanceCount;
			public uint32 StartIndexLocation;
			public int32 BaseVertexLocation;
			public uint32 StartInstanceLocation;
		}
		[CRepr]
		public struct D3D11_BOX
		{
			public uint32 left;
			public uint32 top;
			public uint32 front;
			public uint32 right;
			public uint32 bottom;
			public uint32 back;
		}
		[CRepr]
		public struct D3D11_DEPTH_STENCILOP_DESC
		{
			public D3D11_STENCIL_OP StencilFailOp;
			public D3D11_STENCIL_OP StencilDepthFailOp;
			public D3D11_STENCIL_OP StencilPassOp;
			public D3D11_COMPARISON_FUNC StencilFunc;
		}
		[CRepr]
		public struct D3D11_DEPTH_STENCIL_DESC
		{
			public BOOL DepthEnable;
			public D3D11_DEPTH_WRITE_MASK DepthWriteMask;
			public D3D11_COMPARISON_FUNC DepthFunc;
			public BOOL StencilEnable;
			public uint8 StencilReadMask;
			public uint8 StencilWriteMask;
			public D3D11_DEPTH_STENCILOP_DESC FrontFace;
			public D3D11_DEPTH_STENCILOP_DESC BackFace;
		}
		[CRepr]
		public struct D3D11_RENDER_TARGET_BLEND_DESC
		{
			public BOOL BlendEnable;
			public D3D11_BLEND SrcBlend;
			public D3D11_BLEND DestBlend;
			public D3D11_BLEND_OP BlendOp;
			public D3D11_BLEND SrcBlendAlpha;
			public D3D11_BLEND DestBlendAlpha;
			public D3D11_BLEND_OP BlendOpAlpha;
			public uint8 RenderTargetWriteMask;
		}
		[CRepr]
		public struct D3D11_BLEND_DESC
		{
			public BOOL AlphaToCoverageEnable;
			public BOOL IndependentBlendEnable;
			public D3D11_RENDER_TARGET_BLEND_DESC[8] RenderTarget;
		}
		[CRepr]
		public struct D3D11_RASTERIZER_DESC
		{
			public D3D11_FILL_MODE FillMode;
			public D3D11_CULL_MODE CullMode;
			public BOOL FrontCounterClockwise;
			public int32 DepthBias;
			public float DepthBiasClamp;
			public float SlopeScaledDepthBias;
			public BOOL DepthClipEnable;
			public BOOL ScissorEnable;
			public BOOL MultisampleEnable;
			public BOOL AntialiasedLineEnable;
		}
		[CRepr]
		public struct D3D11_SUBRESOURCE_DATA
		{
			public void* pSysMem;
			public uint32 SysMemPitch;
			public uint32 SysMemSlicePitch;
		}
		[CRepr]
		public struct D3D11_MAPPED_SUBRESOURCE
		{
			public void* pData;
			public uint32 RowPitch;
			public uint32 DepthPitch;
		}
		[CRepr]
		public struct D3D11_BUFFER_DESC
		{
			public uint32 ByteWidth;
			public D3D11_USAGE Usage;
			public uint32 BindFlags;
			public uint32 CPUAccessFlags;
			public uint32 MiscFlags;
			public uint32 StructureByteStride;
		}
		[CRepr]
		public struct D3D11_TEXTURE1D_DESC
		{
			public uint32 Width;
			public uint32 MipLevels;
			public uint32 ArraySize;
			public DXGI_FORMAT Format;
			public D3D11_USAGE Usage;
			public uint32 BindFlags;
			public uint32 CPUAccessFlags;
			public uint32 MiscFlags;
		}
		[CRepr]
		public struct D3D11_TEXTURE2D_DESC
		{
			public uint32 Width;
			public uint32 Height;
			public uint32 MipLevels;
			public uint32 ArraySize;
			public DXGI_FORMAT Format;
			public DXGI_SAMPLE_DESC SampleDesc;
			public D3D11_USAGE Usage;
			public D3D11_BIND_FLAG BindFlags;
			public D3D11_CPU_ACCESS_FLAG CPUAccessFlags;
			public D3D11_RESOURCE_MISC_FLAG MiscFlags;
		}
		[CRepr]
		public struct D3D11_TEXTURE3D_DESC
		{
			public uint32 Width;
			public uint32 Height;
			public uint32 Depth;
			public uint32 MipLevels;
			public DXGI_FORMAT Format;
			public D3D11_USAGE Usage;
			public uint32 BindFlags;
			public uint32 CPUAccessFlags;
			public uint32 MiscFlags;
		}
		[CRepr]
		public struct D3D11_BUFFER_SRV
		{
			public _Anonymous1_e__Union Anonymous1;
			public _Anonymous2_e__Union Anonymous2;
			
			[CRepr, Union]
			public struct _Anonymous1_e__Union
			{
				public uint32 FirstElement;
				public uint32 ElementOffset;
			}
			[CRepr, Union]
			public struct _Anonymous2_e__Union
			{
				public uint32 NumElements;
				public uint32 ElementWidth;
			}
		}
		[CRepr]
		public struct D3D11_BUFFEREX_SRV
		{
			public uint32 FirstElement;
			public uint32 NumElements;
			public uint32 Flags;
		}
		[CRepr]
		public struct D3D11_TEX1D_SRV
		{
			public uint32 MostDetailedMip;
			public uint32 MipLevels;
		}
		[CRepr]
		public struct D3D11_TEX1D_ARRAY_SRV
		{
			public uint32 MostDetailedMip;
			public uint32 MipLevels;
			public uint32 FirstArraySlice;
			public uint32 ArraySize;
		}
		[CRepr]
		public struct D3D11_TEX2D_SRV
		{
			public uint32 MostDetailedMip;
			public uint32 MipLevels;
		}
		[CRepr]
		public struct D3D11_TEX2D_ARRAY_SRV
		{
			public uint32 MostDetailedMip;
			public uint32 MipLevels;
			public uint32 FirstArraySlice;
			public uint32 ArraySize;
		}
		[CRepr]
		public struct D3D11_TEX3D_SRV
		{
			public uint32 MostDetailedMip;
			public uint32 MipLevels;
		}
		[CRepr]
		public struct D3D11_TEXCUBE_SRV
		{
			public uint32 MostDetailedMip;
			public uint32 MipLevels;
		}
		[CRepr]
		public struct D3D11_TEXCUBE_ARRAY_SRV
		{
			public uint32 MostDetailedMip;
			public uint32 MipLevels;
			public uint32 First2DArrayFace;
			public uint32 NumCubes;
		}
		[CRepr]
		public struct D3D11_TEX2DMS_SRV
		{
			public uint32 UnusedField_NothingToDefine;
		}
		[CRepr]
		public struct D3D11_TEX2DMS_ARRAY_SRV
		{
			public uint32 FirstArraySlice;
			public uint32 ArraySize;
		}
		[CRepr]
		public struct D3D11_SHADER_RESOURCE_VIEW_DESC
		{
			public DXGI_FORMAT Format;
			public D3D_SRV_DIMENSION ViewDimension;
			public _Anonymous_e__Union Anonymous;
			
			[CRepr, Union]
			public struct _Anonymous_e__Union
			{
				public D3D11_BUFFER_SRV Buffer;
				public D3D11_TEX1D_SRV Texture1D;
				public D3D11_TEX1D_ARRAY_SRV Texture1DArray;
				public D3D11_TEX2D_SRV Texture2D;
				public D3D11_TEX2D_ARRAY_SRV Texture2DArray;
				public D3D11_TEX2DMS_SRV Texture2DMS;
				public D3D11_TEX2DMS_ARRAY_SRV Texture2DMSArray;
				public D3D11_TEX3D_SRV Texture3D;
				public D3D11_TEXCUBE_SRV TextureCube;
				public D3D11_TEXCUBE_ARRAY_SRV TextureCubeArray;
				public D3D11_BUFFEREX_SRV BufferEx;
			}
		}
		[CRepr]
		public struct D3D11_BUFFER_RTV
		{
			public _Anonymous1_e__Union Anonymous1;
			public _Anonymous2_e__Union Anonymous2;
			
			[CRepr, Union]
			public struct _Anonymous2_e__Union
			{
				public uint32 NumElements;
				public uint32 ElementWidth;
			}
			[CRepr, Union]
			public struct _Anonymous1_e__Union
			{
				public uint32 FirstElement;
				public uint32 ElementOffset;
			}
		}
		[CRepr]
		public struct D3D11_TEX1D_RTV
		{
			public uint32 MipSlice;
		}
		[CRepr]
		public struct D3D11_TEX1D_ARRAY_RTV
		{
			public uint32 MipSlice;
			public uint32 FirstArraySlice;
			public uint32 ArraySize;
		}
		[CRepr]
		public struct D3D11_TEX2D_RTV
		{
			public uint32 MipSlice;
		}
		[CRepr]
		public struct D3D11_TEX2DMS_RTV
		{
			public uint32 UnusedField_NothingToDefine;
		}
		[CRepr]
		public struct D3D11_TEX2D_ARRAY_RTV
		{
			public uint32 MipSlice;
			public uint32 FirstArraySlice;
			public uint32 ArraySize;
		}
		[CRepr]
		public struct D3D11_TEX2DMS_ARRAY_RTV
		{
			public uint32 FirstArraySlice;
			public uint32 ArraySize;
		}
		[CRepr]
		public struct D3D11_TEX3D_RTV
		{
			public uint32 MipSlice;
			public uint32 FirstWSlice;
			public uint32 WSize;
		}
		[CRepr]
		public struct D3D11_RENDER_TARGET_VIEW_DESC
		{
			public DXGI_FORMAT Format;
			public D3D11_RTV_DIMENSION ViewDimension;
			public _Anonymous_e__Union Anonymous;
			
			[CRepr, Union]
			public struct _Anonymous_e__Union
			{
				public D3D11_BUFFER_RTV Buffer;
				public D3D11_TEX1D_RTV Texture1D;
				public D3D11_TEX1D_ARRAY_RTV Texture1DArray;
				public D3D11_TEX2D_RTV Texture2D;
				public D3D11_TEX2D_ARRAY_RTV Texture2DArray;
				public D3D11_TEX2DMS_RTV Texture2DMS;
				public D3D11_TEX2DMS_ARRAY_RTV Texture2DMSArray;
				public D3D11_TEX3D_RTV Texture3D;
			}
		}
		[CRepr]
		public struct D3D11_TEX1D_DSV
		{
			public uint32 MipSlice;
		}
		[CRepr]
		public struct D3D11_TEX1D_ARRAY_DSV
		{
			public uint32 MipSlice;
			public uint32 FirstArraySlice;
			public uint32 ArraySize;
		}
		[CRepr]
		public struct D3D11_TEX2D_DSV
		{
			public uint32 MipSlice;
		}
		[CRepr]
		public struct D3D11_TEX2D_ARRAY_DSV
		{
			public uint32 MipSlice;
			public uint32 FirstArraySlice;
			public uint32 ArraySize;
		}
		[CRepr]
		public struct D3D11_TEX2DMS_DSV
		{
			public uint32 UnusedField_NothingToDefine;
		}
		[CRepr]
		public struct D3D11_TEX2DMS_ARRAY_DSV
		{
			public uint32 FirstArraySlice;
			public uint32 ArraySize;
		}
		[CRepr]
		public struct D3D11_DEPTH_STENCIL_VIEW_DESC
		{
			public DXGI_FORMAT Format;
			public D3D11_DSV_DIMENSION ViewDimension;
			public uint32 Flags;
			public _Anonymous_e__Union Anonymous;
			
			[CRepr, Union]
			public struct _Anonymous_e__Union
			{
				public D3D11_TEX1D_DSV Texture1D;
				public D3D11_TEX1D_ARRAY_DSV Texture1DArray;
				public D3D11_TEX2D_DSV Texture2D;
				public D3D11_TEX2D_ARRAY_DSV Texture2DArray;
				public D3D11_TEX2DMS_DSV Texture2DMS;
				public D3D11_TEX2DMS_ARRAY_DSV Texture2DMSArray;
			}
		}
		[CRepr]
		public struct D3D11_BUFFER_UAV
		{
			public uint32 FirstElement;
			public uint32 NumElements;
			public uint32 Flags;
		}
		[CRepr]
		public struct D3D11_TEX1D_UAV
		{
			public uint32 MipSlice;
		}
		[CRepr]
		public struct D3D11_TEX1D_ARRAY_UAV
		{
			public uint32 MipSlice;
			public uint32 FirstArraySlice;
			public uint32 ArraySize;
		}
		[CRepr]
		public struct D3D11_TEX2D_UAV
		{
			public uint32 MipSlice;
		}
		[CRepr]
		public struct D3D11_TEX2D_ARRAY_UAV
		{
			public uint32 MipSlice;
			public uint32 FirstArraySlice;
			public uint32 ArraySize;
		}
		[CRepr]
		public struct D3D11_TEX3D_UAV
		{
			public uint32 MipSlice;
			public uint32 FirstWSlice;
			public uint32 WSize;
		}
		[CRepr]
		public struct D3D11_UNORDERED_ACCESS_VIEW_DESC
		{
			public DXGI_FORMAT Format;
			public D3D11_UAV_DIMENSION ViewDimension;
			public _Anonymous_e__Union Anonymous;
			
			[CRepr, Union]
			public struct _Anonymous_e__Union
			{
				public D3D11_BUFFER_UAV Buffer;
				public D3D11_TEX1D_UAV Texture1D;
				public D3D11_TEX1D_ARRAY_UAV Texture1DArray;
				public D3D11_TEX2D_UAV Texture2D;
				public D3D11_TEX2D_ARRAY_UAV Texture2DArray;
				public D3D11_TEX3D_UAV Texture3D;
			}
		}
		[CRepr]
		public struct D3D11_SAMPLER_DESC
		{
			public D3D11_FILTER Filter;
			public D3D11_TEXTURE_ADDRESS_MODE AddressU;
			public D3D11_TEXTURE_ADDRESS_MODE AddressV;
			public D3D11_TEXTURE_ADDRESS_MODE AddressW;
			public float MipLODBias;
			public uint32 MaxAnisotropy;
			public D3D11_COMPARISON_FUNC ComparisonFunc;
			public float[4] BorderColor;
			public float MinLOD;
			public float MaxLOD;
		}
		[CRepr]
		public struct D3D11_QUERY_DESC
		{
			public D3D11_QUERY Query;
			public uint32 MiscFlags;
		}
		[CRepr]
		public struct D3D11_QUERY_DATA_TIMESTAMP_DISJOINT
		{
			public uint64 Frequency;
			public BOOL Disjoint;
		}
		[CRepr]
		public struct D3D11_QUERY_DATA_PIPELINE_STATISTICS
		{
			public uint64 IAVertices;
			public uint64 IAPrimitives;
			public uint64 VSInvocations;
			public uint64 GSInvocations;
			public uint64 GSPrimitives;
			public uint64 CInvocations;
			public uint64 CPrimitives;
			public uint64 PSInvocations;
			public uint64 HSInvocations;
			public uint64 DSInvocations;
			public uint64 CSInvocations;
		}
		[CRepr]
		public struct D3D11_QUERY_DATA_SO_STATISTICS
		{
			public uint64 NumPrimitivesWritten;
			public uint64 PrimitivesStorageNeeded;
		}
		[CRepr]
		public struct D3D11_COUNTER_DESC
		{
			public D3D11_COUNTER Counter;
			public uint32 MiscFlags;
		}
		[CRepr]
		public struct D3D11_COUNTER_INFO
		{
			public D3D11_COUNTER LastDeviceDependentCounter;
			public uint32 NumSimultaneousCounters;
			public uint8 NumDetectableParallelUnits;
		}
		[CRepr]
		public struct D3D11_CLASS_INSTANCE_DESC
		{
			public uint32 InstanceId;
			public uint32 InstanceIndex;
			public uint32 TypeId;
			public uint32 ConstantBuffer;
			public uint32 BaseConstantBufferOffset;
			public uint32 BaseTexture;
			public uint32 BaseSampler;
			public BOOL Created;
		}
		[CRepr]
		public struct D3D11_FEATURE_DATA_THREADING
		{
			public BOOL DriverConcurrentCreates;
			public BOOL DriverCommandLists;
		}
		[CRepr]
		public struct D3D11_FEATURE_DATA_DOUBLES
		{
			public BOOL DoublePrecisionFloatShaderOps;
		}
		[CRepr]
		public struct D3D11_FEATURE_DATA_FORMAT_SUPPORT
		{
			public DXGI_FORMAT InFormat;
			public uint32 OutFormatSupport;
		}
		[CRepr]
		public struct D3D11_FEATURE_DATA_FORMAT_SUPPORT2
		{
			public DXGI_FORMAT InFormat;
			public uint32 OutFormatSupport2;
		}
		[CRepr]
		public struct D3D11_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS
		{
			public BOOL ComputeShaders_Plus_RawAndStructuredBuffers_Via_Shader_4_x;
		}
		[CRepr]
		public struct D3D11_FEATURE_DATA_D3D11_OPTIONS
		{
			public BOOL OutputMergerLogicOp;
			public BOOL UAVOnlyRenderingForcedSampleCount;
			public BOOL DiscardAPIsSeenByDriver;
			public BOOL FlagsForUpdateAndCopySeenByDriver;
			public BOOL ClearView;
			public BOOL CopyWithOverlap;
			public BOOL ConstantBufferPartialUpdate;
			public BOOL ConstantBufferOffsetting;
			public BOOL MapNoOverwriteOnDynamicConstantBuffer;
			public BOOL MapNoOverwriteOnDynamicBufferSRV;
			public BOOL MultisampleRTVWithForcedSampleCountOne;
			public BOOL SAD4ShaderInstructions;
			public BOOL ExtendedDoublesShaderInstructions;
			public BOOL ExtendedResourceSharing;
		}
		[CRepr]
		public struct D3D11_FEATURE_DATA_ARCHITECTURE_INFO
		{
			public BOOL TileBasedDeferredRenderer;
		}
		[CRepr]
		public struct D3D11_FEATURE_DATA_D3D9_OPTIONS
		{
			public BOOL FullNonPow2TextureSupport;
		}
		[CRepr]
		public struct D3D11_FEATURE_DATA_D3D9_SHADOW_SUPPORT
		{
			public BOOL SupportsDepthAsTextureWithLessEqualComparisonFilter;
		}
		[CRepr]
		public struct D3D11_FEATURE_DATA_SHADER_MIN_PRECISION_SUPPORT
		{
			public uint32 PixelShaderMinPrecision;
			public uint32 AllOtherShaderStagesMinPrecision;
		}
		[CRepr]
		public struct D3D11_FEATURE_DATA_D3D11_OPTIONS1
		{
			public D3D11_TILED_RESOURCES_TIER TiledResourcesTier;
			public BOOL MinMaxFiltering;
			public BOOL ClearViewAlsoSupportsDepthOnlyFormats;
			public BOOL MapOnDefaultBuffers;
		}
		[CRepr]
		public struct D3D11_FEATURE_DATA_D3D9_SIMPLE_INSTANCING_SUPPORT
		{
			public BOOL SimpleInstancingSupported;
		}
		[CRepr]
		public struct D3D11_FEATURE_DATA_MARKER_SUPPORT
		{
			public BOOL Profile;
		}
		[CRepr]
		public struct D3D11_FEATURE_DATA_D3D9_OPTIONS1
		{
			public BOOL FullNonPow2TextureSupported;
			public BOOL DepthAsTextureWithLessEqualComparisonFilterSupported;
			public BOOL SimpleInstancingSupported;
			public BOOL TextureCubeFaceRenderTargetWithNonCubeDepthStencilSupported;
		}
		[CRepr]
		public struct D3D11_FEATURE_DATA_D3D11_OPTIONS2
		{
			public BOOL PSSpecifiedStencilRefSupported;
			public BOOL TypedUAVLoadAdditionalFormats;
			public BOOL ROVsSupported;
			public D3D11_CONSERVATIVE_RASTERIZATION_TIER ConservativeRasterizationTier;
			public D3D11_TILED_RESOURCES_TIER TiledResourcesTier;
			public BOOL MapOnDefaultTextures;
			public BOOL StandardSwizzle;
			public BOOL UnifiedMemoryArchitecture;
		}
		[CRepr]
		public struct D3D11_FEATURE_DATA_D3D11_OPTIONS3
		{
			public BOOL VPAndRTArrayIndexFromAnyShaderFeedingRasterizer;
		}
		[CRepr]
		public struct D3D11_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT
		{
			public uint32 MaxGPUVirtualAddressBitsPerResource;
			public uint32 MaxGPUVirtualAddressBitsPerProcess;
		}
		[CRepr]
		public struct D3D11_FEATURE_DATA_SHADER_CACHE
		{
			public uint32 SupportFlags;
		}
		[CRepr]
		public struct D3D11_FEATURE_DATA_DISPLAYABLE
		{
			public BOOL DisplayableTexture;
			public D3D11_SHARED_RESOURCE_TIER SharedResourceTier;
		}
		[CRepr]
		public struct D3D11_FEATURE_DATA_D3D11_OPTIONS5
		{
			public D3D11_SHARED_RESOURCE_TIER SharedResourceTier;
		}
		[CRepr]
		public struct CD3D11_VIDEO_DEFAULT
		{
		}
		[CRepr]
		public struct D3D11_VIDEO_DECODER_DESC
		{
			public Guid Guid;
			public uint32 SampleWidth;
			public uint32 SampleHeight;
			public DXGI_FORMAT OutputFormat;
		}
		[CRepr]
		public struct D3D11_VIDEO_DECODER_CONFIG
		{
			public Guid guidConfigBitstreamEncryption;
			public Guid guidConfigMBcontrolEncryption;
			public Guid guidConfigResidDiffEncryption;
			public uint32 ConfigBitstreamRaw;
			public uint32 ConfigMBcontrolRasterOrder;
			public uint32 ConfigResidDiffHost;
			public uint32 ConfigSpatialResid8;
			public uint32 ConfigResid8Subtraction;
			public uint32 ConfigSpatialHost8or9Clipping;
			public uint32 ConfigSpatialResidInterleaved;
			public uint32 ConfigIntraResidUnsigned;
			public uint32 ConfigResidDiffAccelerator;
			public uint32 ConfigHostInverseScan;
			public uint32 ConfigSpecificIDCT;
			public uint32 Config4GroupedCoefs;
			public uint16 ConfigMinRenderTargetBuffCount;
			public uint16 ConfigDecoderSpecific;
		}
		[CRepr]
		public struct D3D11_AES_CTR_IV
		{
			public uint64 IV;
			public uint64 Count;
		}
		[CRepr]
		public struct D3D11_ENCRYPTED_BLOCK_INFO
		{
			public uint32 NumEncryptedBytesAtBeginning;
			public uint32 NumBytesInSkipPattern;
			public uint32 NumBytesInEncryptPattern;
		}
		[CRepr]
		public struct D3D11_VIDEO_DECODER_BUFFER_DESC
		{
			public D3D11_VIDEO_DECODER_BUFFER_TYPE BufferType;
			public uint32 BufferIndex;
			public uint32 DataOffset;
			public uint32 DataSize;
			public uint32 FirstMBaddress;
			public uint32 NumMBsInBuffer;
			public uint32 Width;
			public uint32 Height;
			public uint32 Stride;
			public uint32 ReservedBits;
			public void* pIV;
			public uint32 IVSize;
			public BOOL PartialEncryption;
			public D3D11_ENCRYPTED_BLOCK_INFO EncryptedBlockInfo;
		}
		[CRepr]
		public struct D3D11_VIDEO_DECODER_EXTENSION
		{
			public uint32 Function;
			public void* pPrivateInputData;
			public uint32 PrivateInputDataSize;
			public void* pPrivateOutputData;
			public uint32 PrivateOutputDataSize;
			public uint32 ResourceCount;
			public ID3D11Resource** ppResourceList;
		}
		[CRepr]
		public struct D3D11_VIDEO_PROCESSOR_CAPS
		{
			public uint32 DeviceCaps;
			public uint32 FeatureCaps;
			public uint32 FilterCaps;
			public uint32 InputFormatCaps;
			public uint32 AutoStreamCaps;
			public uint32 StereoCaps;
			public uint32 RateConversionCapsCount;
			public uint32 MaxInputStreams;
			public uint32 MaxStreamStates;
		}
		[CRepr]
		public struct D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS
		{
			public uint32 PastFrames;
			public uint32 FutureFrames;
			public uint32 ProcessorCaps;
			public uint32 ITelecineCaps;
			public uint32 CustomRateCount;
		}
		[CRepr]
		public struct D3D11_VIDEO_CONTENT_PROTECTION_CAPS
		{
			public uint32 Caps;
			public uint32 KeyExchangeTypeCount;
			public uint32 BlockAlignmentSize;
			public uint64 ProtectedMemorySize;
		}
		[CRepr]
		public struct D3D11_VIDEO_PROCESSOR_CUSTOM_RATE
		{
			public DXGI_RATIONAL CustomRate;
			public uint32 OutputFrames;
			public BOOL InputInterlaced;
			public uint32 InputFramesOrFields;
		}
		[CRepr]
		public struct D3D11_VIDEO_PROCESSOR_FILTER_RANGE
		{
			public int32 Minimum;
			public int32 Maximum;
			public int32 Default;
			public float Multiplier;
		}
		[CRepr]
		public struct D3D11_VIDEO_PROCESSOR_CONTENT_DESC
		{
			public D3D11_VIDEO_FRAME_FORMAT InputFrameFormat;
			public DXGI_RATIONAL InputFrameRate;
			public uint32 InputWidth;
			public uint32 InputHeight;
			public DXGI_RATIONAL OutputFrameRate;
			public uint32 OutputWidth;
			public uint32 OutputHeight;
			public D3D11_VIDEO_USAGE Usage;
		}
		[CRepr]
		public struct D3D11_VIDEO_COLOR_RGBA
		{
			public float R;
			public float G;
			public float B;
			public float A;
		}
		[CRepr]
		public struct D3D11_VIDEO_COLOR_YCbCrA
		{
			public float Y;
			public float Cb;
			public float Cr;
			public float A;
		}
		[CRepr]
		public struct D3D11_VIDEO_COLOR
		{
			public _Anonymous_e__Union Anonymous;
			
			[CRepr, Union]
			public struct _Anonymous_e__Union
			{
				public D3D11_VIDEO_COLOR_YCbCrA YCbCr;
				public D3D11_VIDEO_COLOR_RGBA RGBA;
			}
		}
		[CRepr]
		public struct D3D11_VIDEO_PROCESSOR_COLOR_SPACE
		{
			public uint32 _bitfield;
		}
		[CRepr]
		public struct D3D11_VIDEO_PROCESSOR_STREAM
		{
			public BOOL Enable;
			public uint32 OutputIndex;
			public uint32 InputFrameOrField;
			public uint32 PastFrames;
			public uint32 FutureFrames;
			public ID3D11VideoProcessorInputView** ppPastSurfaces;
			public ID3D11VideoProcessorInputView* pInputSurface;
			public ID3D11VideoProcessorInputView** ppFutureSurfaces;
			public ID3D11VideoProcessorInputView** ppPastSurfacesRight;
			public ID3D11VideoProcessorInputView* pInputSurfaceRight;
			public ID3D11VideoProcessorInputView** ppFutureSurfacesRight;
		}
		[CRepr]
		public struct D3D11_OMAC
		{
			public uint8[16] Omac;
		}
		[CRepr]
		public struct D3D11_AUTHENTICATED_QUERY_INPUT
		{
			public Guid QueryType;
			public HANDLE hChannel;
			public uint32 SequenceNumber;
		}
		[CRepr]
		public struct D3D11_AUTHENTICATED_QUERY_OUTPUT
		{
			public D3D11_OMAC omac;
			public Guid QueryType;
			public HANDLE hChannel;
			public uint32 SequenceNumber;
			public HRESULT ReturnCode;
		}
		[CRepr, Union]
		public struct D3D11_AUTHENTICATED_PROTECTION_FLAGS
		{
			public _Flags_e__Struct Flags;
			public uint32 Value;
			
			[CRepr]
			public struct _Flags_e__Struct
			{
				public uint32 _bitfield;
			}
		}
		[CRepr]
		public struct D3D11_AUTHENTICATED_QUERY_PROTECTION_OUTPUT
		{
			public D3D11_AUTHENTICATED_QUERY_OUTPUT Output;
			public D3D11_AUTHENTICATED_PROTECTION_FLAGS ProtectionFlags;
		}
		[CRepr]
		public struct D3D11_AUTHENTICATED_QUERY_CHANNEL_TYPE_OUTPUT
		{
			public D3D11_AUTHENTICATED_QUERY_OUTPUT Output;
			public D3D11_AUTHENTICATED_CHANNEL_TYPE ChannelType;
		}
		[CRepr]
		public struct D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE_OUTPUT
		{
			public D3D11_AUTHENTICATED_QUERY_OUTPUT Output;
			public HANDLE DeviceHandle;
		}
		[CRepr]
		public struct D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_INPUT
		{
			public D3D11_AUTHENTICATED_QUERY_INPUT Input;
			public HANDLE DecoderHandle;
		}
		[CRepr]
		public struct D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_OUTPUT
		{
			public D3D11_AUTHENTICATED_QUERY_OUTPUT Output;
			public HANDLE DecoderHandle;
			public HANDLE CryptoSessionHandle;
			public HANDLE DeviceHandle;
		}
		[CRepr]
		public struct D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_COUNT_OUTPUT
		{
			public D3D11_AUTHENTICATED_QUERY_OUTPUT Output;
			public uint32 RestrictedSharedResourceProcessCount;
		}
		[CRepr]
		public struct D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_INPUT
		{
			public D3D11_AUTHENTICATED_QUERY_INPUT Input;
			public uint32 ProcessIndex;
		}
		[CRepr]
		public struct D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_OUTPUT
		{
			public D3D11_AUTHENTICATED_QUERY_OUTPUT Output;
			public uint32 ProcessIndex;
			public D3D11_AUTHENTICATED_PROCESS_IDENTIFIER_TYPE ProcessIdentifier;
			public HANDLE ProcessHandle;
		}
		[CRepr]
		public struct D3D11_AUTHENTICATED_QUERY_UNRESTRICTED_PROTECTED_SHARED_RESOURCE_COUNT_OUTPUT
		{
			public D3D11_AUTHENTICATED_QUERY_OUTPUT Output;
			public uint32 UnrestrictedProtectedSharedResourceCount;
		}
		[CRepr]
		public struct D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_INPUT
		{
			public D3D11_AUTHENTICATED_QUERY_INPUT Input;
			public HANDLE DeviceHandle;
			public HANDLE CryptoSessionHandle;
		}
		[CRepr]
		public struct D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_OUTPUT
		{
			public D3D11_AUTHENTICATED_QUERY_OUTPUT Output;
			public HANDLE DeviceHandle;
			public HANDLE CryptoSessionHandle;
			public uint32 OutputIDCount;
		}
		[CRepr]
		public struct D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_INPUT
		{
			public D3D11_AUTHENTICATED_QUERY_INPUT Input;
			public HANDLE DeviceHandle;
			public HANDLE CryptoSessionHandle;
			public uint32 OutputIDIndex;
		}
		[CRepr]
		public struct D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_OUTPUT
		{
			public D3D11_AUTHENTICATED_QUERY_OUTPUT Output;
			public HANDLE DeviceHandle;
			public HANDLE CryptoSessionHandle;
			public uint32 OutputIDIndex;
			public uint64 OutputID;
		}
		[CRepr]
		public struct D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_OUTPUT
		{
			public D3D11_AUTHENTICATED_QUERY_OUTPUT Output;
			public D3D11_BUS_TYPE BusType;
			public BOOL AccessibleInContiguousBlocks;
			public BOOL AccessibleInNonContiguousBlocks;
		}
		[CRepr]
		public struct D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_COUNT_OUTPUT
		{
			public D3D11_AUTHENTICATED_QUERY_OUTPUT Output;
			public uint32 EncryptionGuidCount;
		}
		[CRepr]
		public struct D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_INPUT
		{
			public D3D11_AUTHENTICATED_QUERY_INPUT Input;
			public uint32 EncryptionGuidIndex;
		}
		[CRepr]
		public struct D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_OUTPUT
		{
			public D3D11_AUTHENTICATED_QUERY_OUTPUT Output;
			public uint32 EncryptionGuidIndex;
			public Guid EncryptionGuid;
		}
		[CRepr]
		public struct D3D11_AUTHENTICATED_QUERY_CURRENT_ACCESSIBILITY_ENCRYPTION_OUTPUT
		{
			public D3D11_AUTHENTICATED_QUERY_OUTPUT Output;
			public Guid EncryptionGuid;
		}
		[CRepr]
		public struct D3D11_AUTHENTICATED_CONFIGURE_INPUT
		{
			public D3D11_OMAC omac;
			public Guid ConfigureType;
			public HANDLE hChannel;
			public uint32 SequenceNumber;
		}
		[CRepr]
		public struct D3D11_AUTHENTICATED_CONFIGURE_OUTPUT
		{
			public D3D11_OMAC omac;
			public Guid ConfigureType;
			public HANDLE hChannel;
			public uint32 SequenceNumber;
			public HRESULT ReturnCode;
		}
		[CRepr]
		public struct D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE_INPUT
		{
			public D3D11_AUTHENTICATED_CONFIGURE_INPUT Parameters;
			public uint32 StartSequenceQuery;
			public uint32 StartSequenceConfigure;
		}
		[CRepr]
		public struct D3D11_AUTHENTICATED_CONFIGURE_PROTECTION_INPUT
		{
			public D3D11_AUTHENTICATED_CONFIGURE_INPUT Parameters;
			public D3D11_AUTHENTICATED_PROTECTION_FLAGS Protections;
		}
		[CRepr]
		public struct D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION_INPUT
		{
			public D3D11_AUTHENTICATED_CONFIGURE_INPUT Parameters;
			public HANDLE DecoderHandle;
			public HANDLE CryptoSessionHandle;
			public HANDLE DeviceHandle;
		}
		[CRepr]
		public struct D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE_INPUT
		{
			public D3D11_AUTHENTICATED_CONFIGURE_INPUT Parameters;
			public D3D11_AUTHENTICATED_PROCESS_IDENTIFIER_TYPE ProcessType;
			public HANDLE ProcessHandle;
			public BOOL AllowAccess;
		}
		[CRepr]
		public struct D3D11_AUTHENTICATED_CONFIGURE_ACCESSIBLE_ENCRYPTION_INPUT
		{
			public D3D11_AUTHENTICATED_CONFIGURE_INPUT Parameters;
			public Guid EncryptionGuid;
		}
		[CRepr]
		public struct D3D11_TEX2D_VDOV
		{
			public uint32 ArraySlice;
		}
		[CRepr]
		public struct D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC
		{
			public Guid DecodeProfile;
			public D3D11_VDOV_DIMENSION ViewDimension;
			public _Anonymous_e__Union Anonymous;
			
			[CRepr, Union]
			public struct _Anonymous_e__Union
			{
				public D3D11_TEX2D_VDOV Texture2D;
			}
		}
		[CRepr]
		public struct D3D11_TEX2D_VPIV
		{
			public uint32 MipSlice;
			public uint32 ArraySlice;
		}
		[CRepr]
		public struct D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC
		{
			public uint32 FourCC;
			public D3D11_VPIV_DIMENSION ViewDimension;
			public _Anonymous_e__Union Anonymous;
			
			[CRepr, Union]
			public struct _Anonymous_e__Union
			{
				public D3D11_TEX2D_VPIV Texture2D;
			}
		}
		[CRepr]
		public struct D3D11_TEX2D_VPOV
		{
			public uint32 MipSlice;
		}
		[CRepr]
		public struct D3D11_TEX2D_ARRAY_VPOV
		{
			public uint32 MipSlice;
			public uint32 FirstArraySlice;
			public uint32 ArraySize;
		}
		[CRepr]
		public struct D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC
		{
			public D3D11_VPOV_DIMENSION ViewDimension;
			public _Anonymous_e__Union Anonymous;
			
			[CRepr, Union]
			public struct _Anonymous_e__Union
			{
				public D3D11_TEX2D_VPOV Texture2D;
				public D3D11_TEX2D_ARRAY_VPOV Texture2DArray;
			}
		}
		[CRepr]
		public struct D3D11_MESSAGE
		{
			public D3D11_MESSAGE_CATEGORY Category;
			public D3D11_MESSAGE_SEVERITY Severity;
			public D3D11_MESSAGE_ID ID;
			public uint8* pDescription;
			public uint DescriptionByteLength;
		}
		[CRepr]
		public struct D3D11_INFO_QUEUE_FILTER_DESC
		{
			public uint32 NumCategories;
			public D3D11_MESSAGE_CATEGORY* pCategoryList;
			public uint32 NumSeverities;
			public D3D11_MESSAGE_SEVERITY* pSeverityList;
			public uint32 NumIDs;
			public D3D11_MESSAGE_ID* pIDList;
		}
		[CRepr]
		public struct D3D11_INFO_QUEUE_FILTER
		{
			public D3D11_INFO_QUEUE_FILTER_DESC AllowList;
			public D3D11_INFO_QUEUE_FILTER_DESC DenyList;
		}
		[CRepr]
		public struct D3D11_RENDER_TARGET_BLEND_DESC1
		{
			public BOOL BlendEnable;
			public BOOL LogicOpEnable;
			public D3D11_BLEND SrcBlend;
			public D3D11_BLEND DestBlend;
			public D3D11_BLEND_OP BlendOp;
			public D3D11_BLEND SrcBlendAlpha;
			public D3D11_BLEND DestBlendAlpha;
			public D3D11_BLEND_OP BlendOpAlpha;
			public D3D11_LOGIC_OP LogicOp;
			public uint8 RenderTargetWriteMask;
		}
		[CRepr]
		public struct D3D11_BLEND_DESC1
		{
			public BOOL AlphaToCoverageEnable;
			public BOOL IndependentBlendEnable;
			public D3D11_RENDER_TARGET_BLEND_DESC1[8] RenderTarget;
		}
		[CRepr]
		public struct D3D11_RASTERIZER_DESC1
		{
			public D3D11_FILL_MODE FillMode;
			public D3D11_CULL_MODE CullMode;
			public BOOL FrontCounterClockwise;
			public int32 DepthBias;
			public float DepthBiasClamp;
			public float SlopeScaledDepthBias;
			public BOOL DepthClipEnable;
			public BOOL ScissorEnable;
			public BOOL MultisampleEnable;
			public BOOL AntialiasedLineEnable;
			public uint32 ForcedSampleCount;
		}
		[CRepr]
		public struct D3D11_VIDEO_DECODER_SUB_SAMPLE_MAPPING_BLOCK
		{
			public uint32 ClearSize;
			public uint32 EncryptedSize;
		}
		[CRepr]
		public struct D3D11_VIDEO_DECODER_BUFFER_DESC1
		{
			public D3D11_VIDEO_DECODER_BUFFER_TYPE BufferType;
			public uint32 DataOffset;
			public uint32 DataSize;
			public void* pIV;
			public uint32 IVSize;
			public D3D11_VIDEO_DECODER_SUB_SAMPLE_MAPPING_BLOCK* pSubSampleMappingBlock;
			public uint32 SubSampleMappingCount;
		}
		[CRepr]
		public struct D3D11_VIDEO_DECODER_BEGIN_FRAME_CRYPTO_SESSION
		{
			public ID3D11CryptoSession* pCryptoSession;
			public uint32 BlobSize;
			public void* pBlob;
			public Guid* pKeyInfoId;
			public uint32 PrivateDataSize;
			public void* pPrivateData;
		}
		[CRepr]
		public struct D3D11_VIDEO_PROCESSOR_STREAM_BEHAVIOR_HINT
		{
			public BOOL Enable;
			public uint32 Width;
			public uint32 Height;
			public DXGI_FORMAT Format;
		}
		[CRepr]
		public struct D3D11_KEY_EXCHANGE_HW_PROTECTION_INPUT_DATA
		{
			public uint32 PrivateDataSize;
			public uint32 HWProtectionDataSize;
			public uint8[4] pbInput;
		}
		[CRepr]
		public struct D3D11_KEY_EXCHANGE_HW_PROTECTION_OUTPUT_DATA
		{
			public uint32 PrivateDataSize;
			public uint32 MaxHWProtectionDataSize;
			public uint32 HWProtectionDataSize;
			public uint64 TransportTime;
			public uint64 ExecutionTime;
			public uint8[4] pbOutput;
		}
		[CRepr]
		public struct D3D11_KEY_EXCHANGE_HW_PROTECTION_DATA
		{
			public uint32 HWProtectionFunctionID;
			public D3D11_KEY_EXCHANGE_HW_PROTECTION_INPUT_DATA* pInputData;
			public D3D11_KEY_EXCHANGE_HW_PROTECTION_OUTPUT_DATA* pOutputData;
			public HRESULT Status;
		}
		[CRepr]
		public struct D3D11_VIDEO_SAMPLE_DESC
		{
			public uint32 Width;
			public uint32 Height;
			public DXGI_FORMAT Format;
			public DXGI_COLOR_SPACE_TYPE ColorSpace;
		}
		[CRepr]
		public struct D3D11_TILED_RESOURCE_COORDINATE
		{
			public uint32 X;
			public uint32 Y;
			public uint32 Z;
			public uint32 Subresource;
		}
		[CRepr]
		public struct D3D11_TILE_REGION_SIZE
		{
			public uint32 NumTiles;
			public BOOL bUseBox;
			public uint32 Width;
			public uint16 Height;
			public uint16 Depth;
		}
		[CRepr]
		public struct D3D11_SUBRESOURCE_TILING
		{
			public uint32 WidthInTiles;
			public uint16 HeightInTiles;
			public uint16 DepthInTiles;
			public uint32 StartTileIndexInOverallResource;
		}
		[CRepr]
		public struct D3D11_TILE_SHAPE
		{
			public uint32 WidthInTexels;
			public uint32 HeightInTexels;
			public uint32 DepthInTexels;
		}
		[CRepr]
		public struct D3D11_PACKED_MIP_DESC
		{
			public uint8 NumStandardMips;
			public uint8 NumPackedMips;
			public uint32 NumTilesForPackedMips;
			public uint32 StartTileIndexInOverallResource;
		}
		[CRepr]
		public struct D3D11_TEXTURE2D_DESC1
		{
			public uint32 Width;
			public uint32 Height;
			public uint32 MipLevels;
			public uint32 ArraySize;
			public DXGI_FORMAT Format;
			public DXGI_SAMPLE_DESC SampleDesc;
			public D3D11_USAGE Usage;
			public uint32 BindFlags;
			public uint32 CPUAccessFlags;
			public uint32 MiscFlags;
			public D3D11_TEXTURE_LAYOUT TextureLayout;
		}
		[CRepr]
		public struct D3D11_TEXTURE3D_DESC1
		{
			public uint32 Width;
			public uint32 Height;
			public uint32 Depth;
			public uint32 MipLevels;
			public DXGI_FORMAT Format;
			public D3D11_USAGE Usage;
			public uint32 BindFlags;
			public uint32 CPUAccessFlags;
			public uint32 MiscFlags;
			public D3D11_TEXTURE_LAYOUT TextureLayout;
		}
		[CRepr]
		public struct D3D11_RASTERIZER_DESC2
		{
			public D3D11_FILL_MODE FillMode;
			public D3D11_CULL_MODE CullMode;
			public BOOL FrontCounterClockwise;
			public int32 DepthBias;
			public float DepthBiasClamp;
			public float SlopeScaledDepthBias;
			public BOOL DepthClipEnable;
			public BOOL ScissorEnable;
			public BOOL MultisampleEnable;
			public BOOL AntialiasedLineEnable;
			public uint32 ForcedSampleCount;
			public D3D11_CONSERVATIVE_RASTERIZATION_MODE ConservativeRaster;
		}
		[CRepr]
		public struct D3D11_TEX2D_SRV1
		{
			public uint32 MostDetailedMip;
			public uint32 MipLevels;
			public uint32 PlaneSlice;
		}
		[CRepr]
		public struct D3D11_TEX2D_ARRAY_SRV1
		{
			public uint32 MostDetailedMip;
			public uint32 MipLevels;
			public uint32 FirstArraySlice;
			public uint32 ArraySize;
			public uint32 PlaneSlice;
		}
		[CRepr]
		public struct D3D11_SHADER_RESOURCE_VIEW_DESC1
		{
			public DXGI_FORMAT Format;
			public D3D_SRV_DIMENSION ViewDimension;
			public _Anonymous_e__Union Anonymous;
			
			[CRepr, Union]
			public struct _Anonymous_e__Union
			{
				public D3D11_BUFFER_SRV Buffer;
				public D3D11_TEX1D_SRV Texture1D;
				public D3D11_TEX1D_ARRAY_SRV Texture1DArray;
				public D3D11_TEX2D_SRV1 Texture2D;
				public D3D11_TEX2D_ARRAY_SRV1 Texture2DArray;
				public D3D11_TEX2DMS_SRV Texture2DMS;
				public D3D11_TEX2DMS_ARRAY_SRV Texture2DMSArray;
				public D3D11_TEX3D_SRV Texture3D;
				public D3D11_TEXCUBE_SRV TextureCube;
				public D3D11_TEXCUBE_ARRAY_SRV TextureCubeArray;
				public D3D11_BUFFEREX_SRV BufferEx;
			}
		}
		[CRepr]
		public struct D3D11_TEX2D_RTV1
		{
			public uint32 MipSlice;
			public uint32 PlaneSlice;
		}
		[CRepr]
		public struct D3D11_TEX2D_ARRAY_RTV1
		{
			public uint32 MipSlice;
			public uint32 FirstArraySlice;
			public uint32 ArraySize;
			public uint32 PlaneSlice;
		}
		[CRepr]
		public struct D3D11_RENDER_TARGET_VIEW_DESC1
		{
			public DXGI_FORMAT Format;
			public D3D11_RTV_DIMENSION ViewDimension;
			public _Anonymous_e__Union Anonymous;
			
			[CRepr, Union]
			public struct _Anonymous_e__Union
			{
				public D3D11_BUFFER_RTV Buffer;
				public D3D11_TEX1D_RTV Texture1D;
				public D3D11_TEX1D_ARRAY_RTV Texture1DArray;
				public D3D11_TEX2D_RTV1 Texture2D;
				public D3D11_TEX2D_ARRAY_RTV1 Texture2DArray;
				public D3D11_TEX2DMS_RTV Texture2DMS;
				public D3D11_TEX2DMS_ARRAY_RTV Texture2DMSArray;
				public D3D11_TEX3D_RTV Texture3D;
			}
		}
		[CRepr]
		public struct D3D11_TEX2D_UAV1
		{
			public uint32 MipSlice;
			public uint32 PlaneSlice;
		}
		[CRepr]
		public struct D3D11_TEX2D_ARRAY_UAV1
		{
			public uint32 MipSlice;
			public uint32 FirstArraySlice;
			public uint32 ArraySize;
			public uint32 PlaneSlice;
		}
		[CRepr]
		public struct D3D11_UNORDERED_ACCESS_VIEW_DESC1
		{
			public DXGI_FORMAT Format;
			public D3D11_UAV_DIMENSION ViewDimension;
			public _Anonymous_e__Union Anonymous;
			
			[CRepr, Union]
			public struct _Anonymous_e__Union
			{
				public D3D11_BUFFER_UAV Buffer;
				public D3D11_TEX1D_UAV Texture1D;
				public D3D11_TEX1D_ARRAY_UAV Texture1DArray;
				public D3D11_TEX2D_UAV1 Texture2D;
				public D3D11_TEX2D_ARRAY_UAV1 Texture2DArray;
				public D3D11_TEX3D_UAV Texture3D;
			}
		}
		[CRepr]
		public struct D3D11_QUERY_DESC1
		{
			public D3D11_QUERY Query;
			public uint32 MiscFlags;
			public D3D11_CONTEXT_TYPE ContextType;
		}
		[CRepr]
		public struct D3D11_FEATURE_DATA_VIDEO_DECODER_HISTOGRAM
		{
			public D3D11_VIDEO_DECODER_DESC DecoderDesc;
			public D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAGS Components;
			public uint32 BinCount;
			public uint32 CounterBitDepth;
		}
		[CRepr]
		public struct D3D11_VIDEO_DECODER_BUFFER_DESC2
		{
			public D3D11_VIDEO_DECODER_BUFFER_TYPE BufferType;
			public uint32 DataOffset;
			public uint32 DataSize;
			public void* pIV;
			public uint32 IVSize;
			public D3D11_VIDEO_DECODER_SUB_SAMPLE_MAPPING_BLOCK* pSubSampleMappingBlock;
			public uint32 SubSampleMappingCount;
			public uint32 cBlocksStripeEncrypted;
			public uint32 cBlocksStripeClear;
		}
		[CRepr]
		public struct D3D11_FEATURE_DATA_D3D11_OPTIONS4
		{
			public BOOL ExtendedNV12SharedTextureSupported;
		}
		[CRepr]
		public struct D3D11_SIGNATURE_PARAMETER_DESC
		{
			public PSTR SemanticName;
			public uint32 SemanticIndex;
			public uint32 Register;
			public D3D_NAME SystemValueType;
			public D3D_REGISTER_COMPONENT_TYPE ComponentType;
			public uint8 Mask;
			public uint8 ReadWriteMask;
			public uint32 Stream;
			public D3D_MIN_PRECISION MinPrecision;
		}
		[CRepr]
		public struct D3D11_SHADER_BUFFER_DESC
		{
			public PSTR Name;
			public D3D_CBUFFER_TYPE Type;
			public uint32 Variables;
			public uint32 Size;
			public uint32 uFlags;
		}
		[CRepr]
		public struct D3D11_SHADER_VARIABLE_DESC
		{
			public PSTR Name;
			public uint32 StartOffset;
			public uint32 Size;
			public uint32 uFlags;
			public void* DefaultValue;
			public uint32 StartTexture;
			public uint32 TextureSize;
			public uint32 StartSampler;
			public uint32 SamplerSize;
		}
		[CRepr]
		public struct D3D11_SHADER_TYPE_DESC
		{
			public D3D_SHADER_VARIABLE_CLASS Class;
			public D3D_SHADER_VARIABLE_TYPE Type;
			public uint32 Rows;
			public uint32 Columns;
			public uint32 Elements;
			public uint32 Members;
			public uint32 Offset;
			public PSTR Name;
		}
		[CRepr]
		public struct D3D11_SHADER_DESC
		{
			public uint32 Version;
			public PSTR Creator;
			public uint32 Flags;
			public uint32 ConstantBuffers;
			public uint32 BoundResources;
			public uint32 InputParameters;
			public uint32 OutputParameters;
			public uint32 InstructionCount;
			public uint32 TempRegisterCount;
			public uint32 TempArrayCount;
			public uint32 DefCount;
			public uint32 DclCount;
			public uint32 TextureNormalInstructions;
			public uint32 TextureLoadInstructions;
			public uint32 TextureCompInstructions;
			public uint32 TextureBiasInstructions;
			public uint32 TextureGradientInstructions;
			public uint32 FloatInstructionCount;
			public uint32 IntInstructionCount;
			public uint32 UintInstructionCount;
			public uint32 StaticFlowControlCount;
			public uint32 DynamicFlowControlCount;
			public uint32 MacroInstructionCount;
			public uint32 ArrayInstructionCount;
			public uint32 CutInstructionCount;
			public uint32 EmitInstructionCount;
			public D3D_PRIMITIVE_TOPOLOGY GSOutputTopology;
			public uint32 GSMaxOutputVertexCount;
			public D3D_PRIMITIVE InputPrimitive;
			public uint32 PatchConstantParameters;
			public uint32 cGSInstanceCount;
			public uint32 cControlPoints;
			public D3D_TESSELLATOR_OUTPUT_PRIMITIVE HSOutputPrimitive;
			public D3D_TESSELLATOR_PARTITIONING HSPartitioning;
			public D3D_TESSELLATOR_DOMAIN TessellatorDomain;
			public uint32 cBarrierInstructions;
			public uint32 cInterlockedInstructions;
			public uint32 cTextureStoreInstructions;
		}
		[CRepr]
		public struct D3D11_SHADER_INPUT_BIND_DESC
		{
			public PSTR Name;
			public D3D_SHADER_INPUT_TYPE Type;
			public uint32 BindPoint;
			public uint32 BindCount;
			public uint32 uFlags;
			public D3D_RESOURCE_RETURN_TYPE ReturnType;
			public D3D_SRV_DIMENSION Dimension;
			public uint32 NumSamples;
		}
		[CRepr]
		public struct D3D11_LIBRARY_DESC
		{
			public PSTR Creator;
			public uint32 Flags;
			public uint32 FunctionCount;
		}
		[CRepr]
		public struct D3D11_FUNCTION_DESC
		{
			public uint32 Version;
			public PSTR Creator;
			public uint32 Flags;
			public uint32 ConstantBuffers;
			public uint32 BoundResources;
			public uint32 InstructionCount;
			public uint32 TempRegisterCount;
			public uint32 TempArrayCount;
			public uint32 DefCount;
			public uint32 DclCount;
			public uint32 TextureNormalInstructions;
			public uint32 TextureLoadInstructions;
			public uint32 TextureCompInstructions;
			public uint32 TextureBiasInstructions;
			public uint32 TextureGradientInstructions;
			public uint32 FloatInstructionCount;
			public uint32 IntInstructionCount;
			public uint32 UintInstructionCount;
			public uint32 StaticFlowControlCount;
			public uint32 DynamicFlowControlCount;
			public uint32 MacroInstructionCount;
			public uint32 ArrayInstructionCount;
			public uint32 MovInstructionCount;
			public uint32 MovcInstructionCount;
			public uint32 ConversionInstructionCount;
			public uint32 BitwiseInstructionCount;
			public D3D_FEATURE_LEVEL MinFeatureLevel;
			public uint64 RequiredFeatureFlags;
			public PSTR Name;
			public int32 FunctionParameterCount;
			public BOOL HasReturn;
			public BOOL Has10Level9VertexShader;
			public BOOL Has10Level9PixelShader;
		}
		[CRepr]
		public struct D3D11_PARAMETER_DESC
		{
			public PSTR Name;
			public PSTR SemanticName;
			public D3D_SHADER_VARIABLE_TYPE Type;
			public D3D_SHADER_VARIABLE_CLASS Class;
			public uint32 Rows;
			public uint32 Columns;
			public D3D_INTERPOLATION_MODE InterpolationMode;
			public D3D_PARAMETER_FLAGS Flags;
			public uint32 FirstInRegister;
			public uint32 FirstInComponent;
			public uint32 FirstOutRegister;
			public uint32 FirstOutComponent;
		}
		[CRepr]
		public struct D3D11_VERTEX_SHADER_TRACE_DESC
		{
			public uint64 Invocation;
		}
		[CRepr]
		public struct D3D11_HULL_SHADER_TRACE_DESC
		{
			public uint64 Invocation;
		}
		[CRepr]
		public struct D3D11_DOMAIN_SHADER_TRACE_DESC
		{
			public uint64 Invocation;
		}
		[CRepr]
		public struct D3D11_GEOMETRY_SHADER_TRACE_DESC
		{
			public uint64 Invocation;
		}
		[CRepr]
		public struct D3D11_PIXEL_SHADER_TRACE_DESC
		{
			public uint64 Invocation;
			public int32 X;
			public int32 Y;
			public uint64 SampleMask;
		}
		[CRepr]
		public struct D3D11_COMPUTE_SHADER_TRACE_DESC
		{
			public uint64 Invocation;
			public uint32[3] ThreadIDInGroup;
			public uint32[3] ThreadGroupID;
		}
		[CRepr]
		public struct D3D11_SHADER_TRACE_DESC
		{
			public D3D11_SHADER_TYPE Type;
			public uint32 Flags;
			public _Anonymous_e__Union Anonymous;
			
			[CRepr, Union]
			public struct _Anonymous_e__Union
			{
				public D3D11_VERTEX_SHADER_TRACE_DESC VertexShaderTraceDesc;
				public D3D11_HULL_SHADER_TRACE_DESC HullShaderTraceDesc;
				public D3D11_DOMAIN_SHADER_TRACE_DESC DomainShaderTraceDesc;
				public D3D11_GEOMETRY_SHADER_TRACE_DESC GeometryShaderTraceDesc;
				public D3D11_PIXEL_SHADER_TRACE_DESC PixelShaderTraceDesc;
				public D3D11_COMPUTE_SHADER_TRACE_DESC ComputeShaderTraceDesc;
			}
		}
		[CRepr]
		public struct D3D11_TRACE_STATS
		{
			public D3D11_SHADER_TRACE_DESC TraceDesc;
			public uint8 NumInvocationsInStamp;
			public uint8 TargetStampIndex;
			public uint32 NumTraceSteps;
			public uint8[32] InputMask;
			public uint8[32] OutputMask;
			public uint16 NumTemps;
			public uint16 MaxIndexableTempIndex;
			public uint16[4096] IndexableTempSize;
			public uint16 ImmediateConstantBufferSize;
			public uint32[8] PixelPosition;
			public uint64[4] PixelCoverageMask;
			public uint64[4] PixelDiscardedMask;
			public uint64[4] PixelCoverageMaskAfterShader;
			public uint64[4] PixelCoverageMaskAfterA2CSampleMask;
			public uint64[4] PixelCoverageMaskAfterA2CSampleMaskDepth;
			public uint64[4] PixelCoverageMaskAfterA2CSampleMaskDepthStencil;
			public BOOL PSOutputsDepth;
			public BOOL PSOutputsMask;
			public D3D11_TRACE_GS_INPUT_PRIMITIVE GSInputPrimitive;
			public BOOL GSInputsPrimitiveID;
			public uint8[32] HSOutputPatchConstantMask;
			public uint8[32] DSInputPatchConstantMask;
		}
		[CRepr]
		public struct D3D11_TRACE_VALUE
		{
			public uint32[4] Bits;
			public uint8 ValidMask;
		}
		[CRepr]
		public struct D3D11_TRACE_REGISTER
		{
			public D3D11_TRACE_REGISTER_TYPE RegType;
			public _Anonymous_e__Union Anonymous;
			public uint8 OperandIndex;
			public uint8 Flags;
			
			[CRepr, Union]
			public struct _Anonymous_e__Union
			{
				public uint16 Index1D;
				public uint16[2] Index2D;
			}
		}
		[CRepr]
		public struct D3D11_TRACE_STEP
		{
			public uint32 ID;
			public BOOL InstructionActive;
			public uint8 NumRegistersWritten;
			public uint8 NumRegistersRead;
			public uint16 MiscOperations;
			public uint32 OpcodeType;
			public uint64 CurrentGlobalCycle;
		}
		[CRepr]
		public struct D3DX11_FFT_DESC
		{
			public uint32 NumDimensions;
			public uint32[32] ElementLengths;
			public uint32 DimensionMask;
			public D3DX11_FFT_DATA_TYPE Type;
		}
		[CRepr]
		public struct D3DX11_FFT_BUFFER_INFO
		{
			public uint32 NumTempBufferSizes;
			public uint32[4] TempBufferFloatSizes;
			public uint32 NumPrecomputeBufferSizes;
			public uint32[4] PrecomputeBufferFloatSizes;
		}
		
		// --- COM Interfaces ---
		
		[CRepr]
		public struct ID3D11DeviceChild : IUnknown
		{
			public const new Guid IID = .(0x1841e5c8, 0x16b0, 0x489b, 0xbc, 0xc8, 0x44, 0xcf, 0xb0, 0xd5, 0xde, 0xae);
			
			public function void(ID3D11DeviceChild *self, ID3D11Device** ppDevice) GetDevice;
			public function HRESULT(ID3D11DeviceChild *self, Guid* guid, uint32* pDataSize, void* pData) GetPrivateData;
			public function HRESULT(ID3D11DeviceChild *self, Guid* guid, uint32 DataSize, void* pData) SetPrivateData;
			public function HRESULT(ID3D11DeviceChild *self, Guid* guid, IUnknown* pData) SetPrivateDataInterface;
		}
		[CRepr]
		public struct ID3D11DepthStencilState : ID3D11DeviceChild
		{
			public const new Guid IID = .(0x03823efb, 0x8d8f, 0x4e1c, 0x9a, 0xa2, 0xf6, 0x4b, 0xb2, 0xcb, 0xfd, 0xf1);
			
			public function void(ID3D11DepthStencilState *self, D3D11_DEPTH_STENCIL_DESC* pDesc) GetDesc;
		}
		[CRepr]
		public struct ID3D11BlendState : ID3D11DeviceChild
		{
			public const new Guid IID = .(0x75b68faa, 0x347d, 0x4159, 0x8f, 0x45, 0xa0, 0x64, 0x0f, 0x01, 0xcd, 0x9a);
			
			public function void(ID3D11BlendState *self, D3D11_BLEND_DESC* pDesc) GetDesc;
		}
		[CRepr]
		public struct ID3D11RasterizerState : ID3D11DeviceChild
		{
			public const new Guid IID = .(0x9bb4ab81, 0xab1a, 0x4d8f, 0xb5, 0x06, 0xfc, 0x04, 0x20, 0x0b, 0x6e, 0xe7);
			
			public function void(ID3D11RasterizerState *self, D3D11_RASTERIZER_DESC* pDesc) GetDesc;
		}
		[CRepr]
		public struct ID3D11Resource : ID3D11DeviceChild
		{
			public const new Guid IID = .(0xdc8e63f3, 0xd12b, 0x4952, 0xb4, 0x7b, 0x5e, 0x45, 0x02, 0x6a, 0x86, 0x2d);
			
			public function void(ID3D11Resource *self, D3D11_RESOURCE_DIMENSION* pResourceDimension) GetType;
			public function void(ID3D11Resource *self, uint32 EvictionPriority) SetEvictionPriority;
			public function uint32(ID3D11Resource *self) GetEvictionPriority;
		}
		[CRepr]
		public struct ID3D11Buffer : ID3D11Resource
		{
			public const new Guid IID = .(0x48570b85, 0xd1ee, 0x4fcd, 0xa2, 0x50, 0xeb, 0x35, 0x07, 0x22, 0xb0, 0x37);
			
			public function void(ID3D11Buffer *self, D3D11_BUFFER_DESC* pDesc) GetDesc;
		}
		[CRepr]
		public struct ID3D11Texture1D : ID3D11Resource
		{
			public const new Guid IID = .(0xf8fb5c27, 0xc6b3, 0x4f75, 0xa4, 0xc8, 0x43, 0x9a, 0xf2, 0xef, 0x56, 0x4c);
			
			public function void(ID3D11Texture1D *self, D3D11_TEXTURE1D_DESC* pDesc) GetDesc;
		}
		[CRepr]
		public struct ID3D11Texture2D : ID3D11Resource
		{
			public const new Guid IID = .(0x6f15aaf2, 0xd208, 0x4e89, 0x9a, 0xb4, 0x48, 0x95, 0x35, 0xd3, 0x4f, 0x9c);
			
			public function void(ID3D11Texture2D *self, D3D11_TEXTURE2D_DESC* pDesc) GetDesc;
		}
		[CRepr]
		public struct ID3D11Texture3D : ID3D11Resource
		{
			public const new Guid IID = .(0x037e866e, 0xf56d, 0x4357, 0xa8, 0xaf, 0x9d, 0xab, 0xbe, 0x6e, 0x25, 0x0e);
			
			public function void(ID3D11Texture3D *self, D3D11_TEXTURE3D_DESC* pDesc) GetDesc;
		}
		[CRepr]
		public struct ID3D11View : ID3D11DeviceChild
		{
			public const new Guid IID = .(0x839d1216, 0xbb2e, 0x412b, 0xb7, 0xf4, 0xa9, 0xdb, 0xeb, 0xe0, 0x8e, 0xd1);
			
			public function void(ID3D11View *self, ID3D11Resource** ppResource) GetResource;
		}
		[CRepr]
		public struct ID3D11ShaderResourceView : ID3D11View
		{
			public const new Guid IID = .(0xb0e06fe0, 0x8192, 0x4e1a, 0xb1, 0xca, 0x36, 0xd7, 0x41, 0x47, 0x10, 0xb2);
			
			public function void(ID3D11ShaderResourceView *self, D3D11_SHADER_RESOURCE_VIEW_DESC* pDesc) GetDesc;
		}
		[CRepr]
		public struct ID3D11RenderTargetView : ID3D11View
		{
			public const new Guid IID = .(0xdfdba067, 0x0b8d, 0x4865, 0x87, 0x5b, 0xd7, 0xb4, 0x51, 0x6c, 0xc1, 0x64);
			
			public function void(ID3D11RenderTargetView *self, D3D11_RENDER_TARGET_VIEW_DESC* pDesc) GetDesc;
		}
		[CRepr]
		public struct ID3D11DepthStencilView : ID3D11View
		{
			public const new Guid IID = .(0x9fdac92a, 0x1876, 0x48c3, 0xaf, 0xad, 0x25, 0xb9, 0x4f, 0x84, 0xa9, 0xb6);
			
			public function void(ID3D11DepthStencilView *self, D3D11_DEPTH_STENCIL_VIEW_DESC* pDesc) GetDesc;
		}
		[CRepr]
		public struct ID3D11UnorderedAccessView : ID3D11View
		{
			public const new Guid IID = .(0x28acf509, 0x7f5c, 0x48f6, 0x86, 0x11, 0xf3, 0x16, 0x01, 0x0a, 0x63, 0x80);
			
			public function void(ID3D11UnorderedAccessView *self, D3D11_UNORDERED_ACCESS_VIEW_DESC* pDesc) GetDesc;
		}
		[CRepr]
		public struct ID3D11VertexShader : ID3D11DeviceChild
		{
			public const new Guid IID = .(0x3b301d64, 0xd678, 0x4289, 0x88, 0x97, 0x22, 0xf8, 0x92, 0x8b, 0x72, 0xf3);
			
		}
		[CRepr]
		public struct ID3D11HullShader : ID3D11DeviceChild
		{
			public const new Guid IID = .(0x8e5c6061, 0x628a, 0x4c8e, 0x82, 0x64, 0xbb, 0xe4, 0x5c, 0xb3, 0xd5, 0xdd);
			
		}
		[CRepr]
		public struct ID3D11DomainShader : ID3D11DeviceChild
		{
			public const new Guid IID = .(0xf582c508, 0x0f36, 0x490c, 0x99, 0x77, 0x31, 0xee, 0xce, 0x26, 0x8c, 0xfa);
			
		}
		[CRepr]
		public struct ID3D11GeometryShader : ID3D11DeviceChild
		{
			public const new Guid IID = .(0x38325b96, 0xeffb, 0x4022, 0xba, 0x02, 0x2e, 0x79, 0x5b, 0x70, 0x27, 0x5c);
			
		}
		[CRepr]
		public struct ID3D11PixelShader : ID3D11DeviceChild
		{
			public const new Guid IID = .(0xea82e40d, 0x51dc, 0x4f33, 0x93, 0xd4, 0xdb, 0x7c, 0x91, 0x25, 0xae, 0x8c);
			
		}
		[CRepr]
		public struct ID3D11ComputeShader : ID3D11DeviceChild
		{
			public const new Guid IID = .(0x4f5b196e, 0xc2bd, 0x495e, 0xbd, 0x01, 0x1f, 0xde, 0xd3, 0x8e, 0x49, 0x69);
			
		}
		[CRepr]
		public struct ID3D11InputLayout : ID3D11DeviceChild
		{
			public const new Guid IID = .(0xe4819ddc, 0x4cf0, 0x4025, 0xbd, 0x26, 0x5d, 0xe8, 0x2a, 0x3e, 0x07, 0xb7);
			
		}
		[CRepr]
		public struct ID3D11SamplerState : ID3D11DeviceChild
		{
			public const new Guid IID = .(0xda6fea51, 0x564c, 0x4487, 0x98, 0x10, 0xf0, 0xd0, 0xf9, 0xb4, 0xe3, 0xa5);
			
			public function void(ID3D11SamplerState *self, D3D11_SAMPLER_DESC* pDesc) GetDesc;
		}
		[CRepr]
		public struct ID3D11Asynchronous : ID3D11DeviceChild
		{
			public const new Guid IID = .(0x4b35d0cd, 0x1e15, 0x4258, 0x9c, 0x98, 0x1b, 0x13, 0x33, 0xf6, 0xdd, 0x3b);
			
			public function uint32(ID3D11Asynchronous *self) GetDataSize;
		}
		[CRepr]
		public struct ID3D11Query : ID3D11Asynchronous
		{
			public const new Guid IID = .(0xd6c00747, 0x87b7, 0x425e, 0xb8, 0x4d, 0x44, 0xd1, 0x08, 0x56, 0x0a, 0xfd);
			
			public function void(ID3D11Query *self, D3D11_QUERY_DESC* pDesc) GetDesc;
		}
		[CRepr]
		public struct ID3D11Predicate : ID3D11Query
		{
			public const new Guid IID = .(0x9eb576dd, 0x9f77, 0x4d86, 0x81, 0xaa, 0x8b, 0xab, 0x5f, 0xe4, 0x90, 0xe2);
			
		}
		[CRepr]
		public struct ID3D11Counter : ID3D11Asynchronous
		{
			public const new Guid IID = .(0x6e8c49fb, 0xa371, 0x4770, 0xb4, 0x40, 0x29, 0x08, 0x60, 0x22, 0xb7, 0x41);
			
			public function void(ID3D11Counter *self, D3D11_COUNTER_DESC* pDesc) GetDesc;
		}
		[CRepr]
		public struct ID3D11ClassInstance : ID3D11DeviceChild
		{
			public const new Guid IID = .(0xa6cd7faa, 0xb0b7, 0x4a2f, 0x94, 0x36, 0x86, 0x62, 0xa6, 0x57, 0x97, 0xcb);
			
			public function void(ID3D11ClassInstance *self, ID3D11ClassLinkage** ppLinkage) GetClassLinkage;
			public function void(ID3D11ClassInstance *self, D3D11_CLASS_INSTANCE_DESC* pDesc) GetDesc;
			public function void(ID3D11ClassInstance *self, uint8* pInstanceName, uint* pBufferLength) GetInstanceName;
			public function void(ID3D11ClassInstance *self, uint8* pTypeName, uint* pBufferLength) GetTypeName;
		}
		[CRepr]
		public struct ID3D11ClassLinkage : ID3D11DeviceChild
		{
			public const new Guid IID = .(0xddf57cba, 0x9543, 0x46e4, 0xa1, 0x2b, 0xf2, 0x07, 0xa0, 0xfe, 0x7f, 0xed);
			
			public function HRESULT(ID3D11ClassLinkage *self, PSTR pClassInstanceName, uint32 InstanceIndex, ID3D11ClassInstance** ppInstance) GetClassInstance;
			public function HRESULT(ID3D11ClassLinkage *self, PSTR pClassTypeName, uint32 ConstantBufferOffset, uint32 ConstantVectorOffset, uint32 TextureOffset, uint32 SamplerOffset, ID3D11ClassInstance** ppInstance) CreateClassInstance;
		}
		[CRepr]
		public struct ID3D11CommandList : ID3D11DeviceChild
		{
			public const new Guid IID = .(0xa24bc4d1, 0x769e, 0x43f7, 0x80, 0x13, 0x98, 0xff, 0x56, 0x6c, 0x18, 0xe2);
			
			public function uint32(ID3D11CommandList *self) GetContextFlags;
		}
		[CRepr]
		public struct ID3D11DeviceContext : ID3D11DeviceChild
		{
			public const new Guid IID = .(0xc0bfa96c, 0xe089, 0x44fb, 0x8e, 0xaf, 0x26, 0xf8, 0x79, 0x61, 0x90, 0xda);
			
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumBuffers, ID3D11Buffer** ppConstantBuffers) VSSetConstantBuffers;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumViews, ID3D11ShaderResourceView** ppShaderResourceViews) PSSetShaderResources;
			public function void(ID3D11DeviceContext *self, ID3D11PixelShader* pPixelShader, ID3D11ClassInstance** ppClassInstances, uint32 NumClassInstances) PSSetShader;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumSamplers, ID3D11SamplerState** ppSamplers) PSSetSamplers;
			public function void(ID3D11DeviceContext *self, ID3D11VertexShader* pVertexShader, ID3D11ClassInstance** ppClassInstances, uint32 NumClassInstances) VSSetShader;
			public function void(ID3D11DeviceContext *self, uint32 IndexCount, uint32 StartIndexLocation, int32 BaseVertexLocation) DrawIndexed;
			public function void(ID3D11DeviceContext *self, uint32 VertexCount, uint32 StartVertexLocation) Draw;
			public function HRESULT(ID3D11DeviceContext *self, ID3D11Resource* pResource, uint32 Subresource, D3D11_MAP MapType, uint32 MapFlags, D3D11_MAPPED_SUBRESOURCE* pMappedResource) Map;
			public function void(ID3D11DeviceContext *self, ID3D11Resource* pResource, uint32 Subresource) Unmap;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumBuffers, ID3D11Buffer** ppConstantBuffers) PSSetConstantBuffers;
			public function void(ID3D11DeviceContext *self, ID3D11InputLayout* pInputLayout) IASetInputLayout;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumBuffers, ID3D11Buffer** ppVertexBuffers, uint32* pStrides, uint32* pOffsets) IASetVertexBuffers;
			public function void(ID3D11DeviceContext *self, ID3D11Buffer* pIndexBuffer, DXGI_FORMAT Format, uint32 Offset) IASetIndexBuffer;
			public function void(ID3D11DeviceContext *self, uint32 IndexCountPerInstance, uint32 InstanceCount, uint32 StartIndexLocation, int32 BaseVertexLocation, uint32 StartInstanceLocation) DrawIndexedInstanced;
			public function void(ID3D11DeviceContext *self, uint32 VertexCountPerInstance, uint32 InstanceCount, uint32 StartVertexLocation, uint32 StartInstanceLocation) DrawInstanced;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumBuffers, ID3D11Buffer** ppConstantBuffers) GSSetConstantBuffers;
			public function void(ID3D11DeviceContext *self, ID3D11GeometryShader* pShader, ID3D11ClassInstance** ppClassInstances, uint32 NumClassInstances) GSSetShader;
			public function void(ID3D11DeviceContext *self, D3D_PRIMITIVE_TOPOLOGY Topology) IASetPrimitiveTopology;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumViews, ID3D11ShaderResourceView** ppShaderResourceViews) VSSetShaderResources;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumSamplers, ID3D11SamplerState** ppSamplers) VSSetSamplers;
			public function void(ID3D11DeviceContext *self, ID3D11Asynchronous* pAsync) Begin;
			public function void(ID3D11DeviceContext *self, ID3D11Asynchronous* pAsync) End;
			public function HRESULT(ID3D11DeviceContext *self, ID3D11Asynchronous* pAsync, void* pData, uint32 DataSize, uint32 GetDataFlags) GetData;
			public function void(ID3D11DeviceContext *self, ID3D11Predicate* pPredicate, BOOL PredicateValue) SetPredication;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumViews, ID3D11ShaderResourceView** ppShaderResourceViews) GSSetShaderResources;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumSamplers, ID3D11SamplerState** ppSamplers) GSSetSamplers;
			public function void(ID3D11DeviceContext *self, uint32 NumViews, ID3D11RenderTargetView** ppRenderTargetViews, ID3D11DepthStencilView* pDepthStencilView) OMSetRenderTargets;
			public function void(ID3D11DeviceContext *self, uint32 NumRTVs, ID3D11RenderTargetView** ppRenderTargetViews, ID3D11DepthStencilView* pDepthStencilView, uint32 UAVStartSlot, uint32 NumUAVs, ID3D11UnorderedAccessView** ppUnorderedAccessViews, uint32* pUAVInitialCounts) OMSetRenderTargetsAndUnorderedAccessViews;
			public function void(ID3D11DeviceContext *self, ID3D11BlendState* pBlendState, float* BlendFactor, uint32 SampleMask) OMSetBlendState;
			public function void(ID3D11DeviceContext *self, ID3D11DepthStencilState* pDepthStencilState, uint32 StencilRef) OMSetDepthStencilState;
			public function void(ID3D11DeviceContext *self, uint32 NumBuffers, ID3D11Buffer** ppSOTargets, uint32* pOffsets) SOSetTargets;
			public function void(ID3D11DeviceContext *self) DrawAuto;
			public function void(ID3D11DeviceContext *self, ID3D11Buffer* pBufferForArgs, uint32 AlignedByteOffsetForArgs) DrawIndexedInstancedIndirect;
			public function void(ID3D11DeviceContext *self, ID3D11Buffer* pBufferForArgs, uint32 AlignedByteOffsetForArgs) DrawInstancedIndirect;
			public function void(ID3D11DeviceContext *self, uint32 ThreadGroupCountX, uint32 ThreadGroupCountY, uint32 ThreadGroupCountZ) Dispatch;
			public function void(ID3D11DeviceContext *self, ID3D11Buffer* pBufferForArgs, uint32 AlignedByteOffsetForArgs) DispatchIndirect;
			public function void(ID3D11DeviceContext *self, ID3D11RasterizerState* pRasterizerState) RSSetState;
			public function void(ID3D11DeviceContext *self, uint32 NumViewports, D3D11_VIEWPORT* pViewports) RSSetViewports;
			public function void(ID3D11DeviceContext *self, uint32 NumRects, RECT* pRects) RSSetScissorRects;
			public function void(ID3D11DeviceContext *self, ID3D11Resource* pDstResource, uint32 DstSubresource, uint32 DstX, uint32 DstY, uint32 DstZ, ID3D11Resource* pSrcResource, uint32 SrcSubresource, D3D11_BOX* pSrcBox) CopySubresourceRegion;
			public function void(ID3D11DeviceContext *self, ID3D11Resource* pDstResource, ID3D11Resource* pSrcResource) CopyResource;
			public function void(ID3D11DeviceContext *self, ID3D11Resource* pDstResource, uint32 DstSubresource, D3D11_BOX* pDstBox, void* pSrcData, uint32 SrcRowPitch, uint32 SrcDepthPitch) UpdateSubresource;
			public function void(ID3D11DeviceContext *self, ID3D11Buffer* pDstBuffer, uint32 DstAlignedByteOffset, ID3D11UnorderedAccessView* pSrcView) CopyStructureCount;
			public function void(ID3D11DeviceContext *self, ID3D11RenderTargetView* pRenderTargetView, float* ColorRGBA) ClearRenderTargetView;
			public function void(ID3D11DeviceContext *self, ID3D11UnorderedAccessView* pUnorderedAccessView, uint32* Values) ClearUnorderedAccessViewUint;
			public function void(ID3D11DeviceContext *self, ID3D11UnorderedAccessView* pUnorderedAccessView, float* Values) ClearUnorderedAccessViewFloat;
			public function void(ID3D11DeviceContext *self, ID3D11DepthStencilView* pDepthStencilView, uint32 ClearFlags, float Depth, uint8 Stencil) ClearDepthStencilView;
			public function void(ID3D11DeviceContext *self, ID3D11ShaderResourceView* pShaderResourceView) GenerateMips;
			public function void(ID3D11DeviceContext *self, ID3D11Resource* pResource, float MinLOD) SetResourceMinLOD;
			public function float(ID3D11DeviceContext *self, ID3D11Resource* pResource) GetResourceMinLOD;
			public function void(ID3D11DeviceContext *self, ID3D11Resource* pDstResource, uint32 DstSubresource, ID3D11Resource* pSrcResource, uint32 SrcSubresource, DXGI_FORMAT Format) ResolveSubresource;
			public function void(ID3D11DeviceContext *self, ID3D11CommandList* pCommandList, BOOL RestoreContextState) ExecuteCommandList;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumViews, ID3D11ShaderResourceView** ppShaderResourceViews) HSSetShaderResources;
			public function void(ID3D11DeviceContext *self, ID3D11HullShader* pHullShader, ID3D11ClassInstance** ppClassInstances, uint32 NumClassInstances) HSSetShader;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumSamplers, ID3D11SamplerState** ppSamplers) HSSetSamplers;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumBuffers, ID3D11Buffer** ppConstantBuffers) HSSetConstantBuffers;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumViews, ID3D11ShaderResourceView** ppShaderResourceViews) DSSetShaderResources;
			public function void(ID3D11DeviceContext *self, ID3D11DomainShader* pDomainShader, ID3D11ClassInstance** ppClassInstances, uint32 NumClassInstances) DSSetShader;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumSamplers, ID3D11SamplerState** ppSamplers) DSSetSamplers;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumBuffers, ID3D11Buffer** ppConstantBuffers) DSSetConstantBuffers;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumViews, ID3D11ShaderResourceView** ppShaderResourceViews) CSSetShaderResources;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumUAVs, ID3D11UnorderedAccessView** ppUnorderedAccessViews, uint32* pUAVInitialCounts) CSSetUnorderedAccessViews;
			public function void(ID3D11DeviceContext *self, ID3D11ComputeShader* pComputeShader, ID3D11ClassInstance** ppClassInstances, uint32 NumClassInstances) CSSetShader;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumSamplers, ID3D11SamplerState** ppSamplers) CSSetSamplers;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumBuffers, ID3D11Buffer** ppConstantBuffers) CSSetConstantBuffers;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumBuffers, ID3D11Buffer** ppConstantBuffers) VSGetConstantBuffers;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumViews, ID3D11ShaderResourceView** ppShaderResourceViews) PSGetShaderResources;
			public function void(ID3D11DeviceContext *self, ID3D11PixelShader** ppPixelShader, ID3D11ClassInstance** ppClassInstances, uint32* pNumClassInstances) PSGetShader;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumSamplers, ID3D11SamplerState** ppSamplers) PSGetSamplers;
			public function void(ID3D11DeviceContext *self, ID3D11VertexShader** ppVertexShader, ID3D11ClassInstance** ppClassInstances, uint32* pNumClassInstances) VSGetShader;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumBuffers, ID3D11Buffer** ppConstantBuffers) PSGetConstantBuffers;
			public function void(ID3D11DeviceContext *self, ID3D11InputLayout** ppInputLayout) IAGetInputLayout;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumBuffers, ID3D11Buffer** ppVertexBuffers, uint32* pStrides, uint32* pOffsets) IAGetVertexBuffers;
			public function void(ID3D11DeviceContext *self, ID3D11Buffer** pIndexBuffer, DXGI_FORMAT* Format, uint32* Offset) IAGetIndexBuffer;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumBuffers, ID3D11Buffer** ppConstantBuffers) GSGetConstantBuffers;
			public function void(ID3D11DeviceContext *self, ID3D11GeometryShader** ppGeometryShader, ID3D11ClassInstance** ppClassInstances, uint32* pNumClassInstances) GSGetShader;
			public function void(ID3D11DeviceContext *self, D3D_PRIMITIVE_TOPOLOGY* pTopology) IAGetPrimitiveTopology;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumViews, ID3D11ShaderResourceView** ppShaderResourceViews) VSGetShaderResources;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumSamplers, ID3D11SamplerState** ppSamplers) VSGetSamplers;
			public function void(ID3D11DeviceContext *self, ID3D11Predicate** ppPredicate, BOOL* pPredicateValue) GetPredication;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumViews, ID3D11ShaderResourceView** ppShaderResourceViews) GSGetShaderResources;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumSamplers, ID3D11SamplerState** ppSamplers) GSGetSamplers;
			public function void(ID3D11DeviceContext *self, uint32 NumViews, ID3D11RenderTargetView** ppRenderTargetViews, ID3D11DepthStencilView** ppDepthStencilView) OMGetRenderTargets;
			public function void(ID3D11DeviceContext *self, uint32 NumRTVs, ID3D11RenderTargetView** ppRenderTargetViews, ID3D11DepthStencilView** ppDepthStencilView, uint32 UAVStartSlot, uint32 NumUAVs, ID3D11UnorderedAccessView** ppUnorderedAccessViews) OMGetRenderTargetsAndUnorderedAccessViews;
			public function void(ID3D11DeviceContext *self, ID3D11BlendState** ppBlendState, float* BlendFactor, uint32* pSampleMask) OMGetBlendState;
			public function void(ID3D11DeviceContext *self, ID3D11DepthStencilState** ppDepthStencilState, uint32* pStencilRef) OMGetDepthStencilState;
			public function void(ID3D11DeviceContext *self, uint32 NumBuffers, ID3D11Buffer** ppSOTargets) SOGetTargets;
			public function void(ID3D11DeviceContext *self, ID3D11RasterizerState** ppRasterizerState) RSGetState;
			public function void(ID3D11DeviceContext *self, uint32* pNumViewports, D3D11_VIEWPORT* pViewports) RSGetViewports;
			public function void(ID3D11DeviceContext *self, uint32* pNumRects, RECT* pRects) RSGetScissorRects;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumViews, ID3D11ShaderResourceView** ppShaderResourceViews) HSGetShaderResources;
			public function void(ID3D11DeviceContext *self, ID3D11HullShader** ppHullShader, ID3D11ClassInstance** ppClassInstances, uint32* pNumClassInstances) HSGetShader;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumSamplers, ID3D11SamplerState** ppSamplers) HSGetSamplers;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumBuffers, ID3D11Buffer** ppConstantBuffers) HSGetConstantBuffers;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumViews, ID3D11ShaderResourceView** ppShaderResourceViews) DSGetShaderResources;
			public function void(ID3D11DeviceContext *self, ID3D11DomainShader** ppDomainShader, ID3D11ClassInstance** ppClassInstances, uint32* pNumClassInstances) DSGetShader;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumSamplers, ID3D11SamplerState** ppSamplers) DSGetSamplers;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumBuffers, ID3D11Buffer** ppConstantBuffers) DSGetConstantBuffers;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumViews, ID3D11ShaderResourceView** ppShaderResourceViews) CSGetShaderResources;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumUAVs, ID3D11UnorderedAccessView** ppUnorderedAccessViews) CSGetUnorderedAccessViews;
			public function void(ID3D11DeviceContext *self, ID3D11ComputeShader** ppComputeShader, ID3D11ClassInstance** ppClassInstances, uint32* pNumClassInstances) CSGetShader;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumSamplers, ID3D11SamplerState** ppSamplers) CSGetSamplers;
			public function void(ID3D11DeviceContext *self, uint32 StartSlot, uint32 NumBuffers, ID3D11Buffer** ppConstantBuffers) CSGetConstantBuffers;
			public function void(ID3D11DeviceContext *self) ClearState;
			public function void(ID3D11DeviceContext *self) Flush;
			public function D3D11_DEVICE_CONTEXT_TYPE(ID3D11DeviceContext *self) GetType;
			public function uint32(ID3D11DeviceContext *self) GetContextFlags;
			public function HRESULT(ID3D11DeviceContext *self, BOOL RestoreDeferredContextState, ID3D11CommandList** ppCommandList) FinishCommandList;
		}
		[CRepr]
		public struct ID3D11VideoDecoder : ID3D11DeviceChild
		{
			public const new Guid IID = .(0x3c9c5b51, 0x995d, 0x48d1, 0x9b, 0x8d, 0xfa, 0x5c, 0xae, 0xde, 0xd6, 0x5c);
			
			public function HRESULT(ID3D11VideoDecoder *self, D3D11_VIDEO_DECODER_DESC* pVideoDesc, D3D11_VIDEO_DECODER_CONFIG* pConfig) GetCreationParameters;
			public function HRESULT(ID3D11VideoDecoder *self, HANDLE* pDriverHandle) GetDriverHandle;
		}
		[CRepr]
		public struct ID3D11VideoProcessorEnumerator : ID3D11DeviceChild
		{
			public const new Guid IID = .(0x31627037, 0x53ab, 0x4200, 0x90, 0x61, 0x05, 0xfa, 0xa9, 0xab, 0x45, 0xf9);
			
			public function HRESULT(ID3D11VideoProcessorEnumerator *self, D3D11_VIDEO_PROCESSOR_CONTENT_DESC* pContentDesc) GetVideoProcessorContentDesc;
			public function HRESULT(ID3D11VideoProcessorEnumerator *self, DXGI_FORMAT Format, uint32* pFlags) CheckVideoProcessorFormat;
			public function HRESULT(ID3D11VideoProcessorEnumerator *self, D3D11_VIDEO_PROCESSOR_CAPS* pCaps) GetVideoProcessorCaps;
			public function HRESULT(ID3D11VideoProcessorEnumerator *self, uint32 TypeIndex, D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS* pCaps) GetVideoProcessorRateConversionCaps;
			public function HRESULT(ID3D11VideoProcessorEnumerator *self, uint32 TypeIndex, uint32 CustomRateIndex, D3D11_VIDEO_PROCESSOR_CUSTOM_RATE* pRate) GetVideoProcessorCustomRate;
			public function HRESULT(ID3D11VideoProcessorEnumerator *self, D3D11_VIDEO_PROCESSOR_FILTER Filter, D3D11_VIDEO_PROCESSOR_FILTER_RANGE* pRange) GetVideoProcessorFilterRange;
		}
		[CRepr]
		public struct ID3D11VideoProcessor : ID3D11DeviceChild
		{
			public const new Guid IID = .(0x1d7b0652, 0x185f, 0x41c6, 0x85, 0xce, 0x0c, 0x5b, 0xe3, 0xd4, 0xae, 0x6c);
			
			public function void(ID3D11VideoProcessor *self, D3D11_VIDEO_PROCESSOR_CONTENT_DESC* pDesc) GetContentDesc;
			public function void(ID3D11VideoProcessor *self, D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS* pCaps) GetRateConversionCaps;
		}
		[CRepr]
		public struct ID3D11AuthenticatedChannel : ID3D11DeviceChild
		{
			public const new Guid IID = .(0x3015a308, 0xdcbd, 0x47aa, 0xa7, 0x47, 0x19, 0x24, 0x86, 0xd1, 0x4d, 0x4a);
			
			public function HRESULT(ID3D11AuthenticatedChannel *self, uint32* pCertificateSize) GetCertificateSize;
			public function HRESULT(ID3D11AuthenticatedChannel *self, uint32 CertificateSize, uint8* pCertificate) GetCertificate;
			public function void(ID3D11AuthenticatedChannel *self, HANDLE* pChannelHandle) GetChannelHandle;
		}
		[CRepr]
		public struct ID3D11CryptoSession : ID3D11DeviceChild
		{
			public const new Guid IID = .(0x9b32f9ad, 0xbdcc, 0x40a6, 0xa3, 0x9d, 0xd5, 0xc8, 0x65, 0x84, 0x57, 0x20);
			
			public function void(ID3D11CryptoSession *self, Guid* pCryptoType) GetCryptoType;
			public function void(ID3D11CryptoSession *self, Guid* pDecoderProfile) GetDecoderProfile;
			public function HRESULT(ID3D11CryptoSession *self, uint32* pCertificateSize) GetCertificateSize;
			public function HRESULT(ID3D11CryptoSession *self, uint32 CertificateSize, uint8* pCertificate) GetCertificate;
			public function void(ID3D11CryptoSession *self, HANDLE* pCryptoSessionHandle) GetCryptoSessionHandle;
		}
		[CRepr]
		public struct ID3D11VideoDecoderOutputView : ID3D11View
		{
			public const new Guid IID = .(0xc2931aea, 0x2a85, 0x4f20, 0x86, 0x0f, 0xfb, 0xa1, 0xfd, 0x25, 0x6e, 0x18);
			
			public function void(ID3D11VideoDecoderOutputView *self, D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC* pDesc) GetDesc;
		}
		[CRepr]
		public struct ID3D11VideoProcessorInputView : ID3D11View
		{
			public const new Guid IID = .(0x11ec5a5f, 0x51dc, 0x4945, 0xab, 0x34, 0x6e, 0x8c, 0x21, 0x30, 0x0e, 0xa5);
			
			public function void(ID3D11VideoProcessorInputView *self, D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC* pDesc) GetDesc;
		}
		[CRepr]
		public struct ID3D11VideoProcessorOutputView : ID3D11View
		{
			public const new Guid IID = .(0xa048285e, 0x25a9, 0x4527, 0xbd, 0x93, 0xd6, 0x8b, 0x68, 0xc4, 0x42, 0x54);
			
			public function void(ID3D11VideoProcessorOutputView *self, D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC* pDesc) GetDesc;
		}
		[CRepr]
		public struct ID3D11VideoContext : ID3D11DeviceChild
		{
			public const new Guid IID = .(0x61f21c45, 0x3c0e, 0x4a74, 0x9c, 0xea, 0x67, 0x10, 0x0d, 0x9a, 0xd5, 0xe4);
			
			public function HRESULT(ID3D11VideoContext *self, ID3D11VideoDecoder* pDecoder, D3D11_VIDEO_DECODER_BUFFER_TYPE Type, uint32* pBufferSize, void** ppBuffer) GetDecoderBuffer;
			public function HRESULT(ID3D11VideoContext *self, ID3D11VideoDecoder* pDecoder, D3D11_VIDEO_DECODER_BUFFER_TYPE Type) ReleaseDecoderBuffer;
			public function HRESULT(ID3D11VideoContext *self, ID3D11VideoDecoder* pDecoder, ID3D11VideoDecoderOutputView* pView, uint32 ContentKeySize, void* pContentKey) DecoderBeginFrame;
			public function HRESULT(ID3D11VideoContext *self, ID3D11VideoDecoder* pDecoder) DecoderEndFrame;
			public function HRESULT(ID3D11VideoContext *self, ID3D11VideoDecoder* pDecoder, uint32 NumBuffers, D3D11_VIDEO_DECODER_BUFFER_DESC* pBufferDesc) SubmitDecoderBuffers;
			public function int32(ID3D11VideoContext *self, ID3D11VideoDecoder* pDecoder, D3D11_VIDEO_DECODER_EXTENSION* pExtensionData) DecoderExtension;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, BOOL Enable, RECT* pRect) VideoProcessorSetOutputTargetRect;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, BOOL YCbCr, D3D11_VIDEO_COLOR* pColor) VideoProcessorSetOutputBackgroundColor;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, D3D11_VIDEO_PROCESSOR_COLOR_SPACE* pColorSpace) VideoProcessorSetOutputColorSpace;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE AlphaFillMode, uint32 StreamIndex) VideoProcessorSetOutputAlphaFillMode;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, BOOL Enable, SIZE Size) VideoProcessorSetOutputConstriction;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, BOOL Enable) VideoProcessorSetOutputStereoMode;
			public function int32(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, Guid* pExtensionGuid, uint32 DataSize, void* pData) VideoProcessorSetOutputExtension;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, BOOL* Enabled, RECT* pRect) VideoProcessorGetOutputTargetRect;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, BOOL* pYCbCr, D3D11_VIDEO_COLOR* pColor) VideoProcessorGetOutputBackgroundColor;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, D3D11_VIDEO_PROCESSOR_COLOR_SPACE* pColorSpace) VideoProcessorGetOutputColorSpace;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE* pAlphaFillMode, uint32* pStreamIndex) VideoProcessorGetOutputAlphaFillMode;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, BOOL* pEnabled, SIZE* pSize) VideoProcessorGetOutputConstriction;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, BOOL* pEnabled) VideoProcessorGetOutputStereoMode;
			public function int32(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, Guid* pExtensionGuid, uint32 DataSize, void* pData) VideoProcessorGetOutputExtension;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, uint32 StreamIndex, D3D11_VIDEO_FRAME_FORMAT FrameFormat) VideoProcessorSetStreamFrameFormat;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, uint32 StreamIndex, D3D11_VIDEO_PROCESSOR_COLOR_SPACE* pColorSpace) VideoProcessorSetStreamColorSpace;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, uint32 StreamIndex, D3D11_VIDEO_PROCESSOR_OUTPUT_RATE OutputRate, BOOL RepeatFrame, DXGI_RATIONAL* pCustomRate) VideoProcessorSetStreamOutputRate;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, uint32 StreamIndex, BOOL Enable, RECT* pRect) VideoProcessorSetStreamSourceRect;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, uint32 StreamIndex, BOOL Enable, RECT* pRect) VideoProcessorSetStreamDestRect;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, uint32 StreamIndex, BOOL Enable, float Alpha) VideoProcessorSetStreamAlpha;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, uint32 StreamIndex, uint32 Count, uint32* pEntries) VideoProcessorSetStreamPalette;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, uint32 StreamIndex, BOOL Enable, DXGI_RATIONAL* pSourceAspectRatio, DXGI_RATIONAL* pDestinationAspectRatio) VideoProcessorSetStreamPixelAspectRatio;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, uint32 StreamIndex, BOOL Enable, float Lower, float Upper) VideoProcessorSetStreamLumaKey;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, uint32 StreamIndex, BOOL Enable, D3D11_VIDEO_PROCESSOR_STEREO_FORMAT Format, BOOL LeftViewFrame0, BOOL BaseViewFrame0, D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE FlipMode, int32 MonoOffset) VideoProcessorSetStreamStereoFormat;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, uint32 StreamIndex, BOOL Enable) VideoProcessorSetStreamAutoProcessingMode;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, uint32 StreamIndex, D3D11_VIDEO_PROCESSOR_FILTER Filter, BOOL Enable, int32 Level) VideoProcessorSetStreamFilter;
			public function int32(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, uint32 StreamIndex, Guid* pExtensionGuid, uint32 DataSize, void* pData) VideoProcessorSetStreamExtension;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, uint32 StreamIndex, D3D11_VIDEO_FRAME_FORMAT* pFrameFormat) VideoProcessorGetStreamFrameFormat;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, uint32 StreamIndex, D3D11_VIDEO_PROCESSOR_COLOR_SPACE* pColorSpace) VideoProcessorGetStreamColorSpace;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, uint32 StreamIndex, D3D11_VIDEO_PROCESSOR_OUTPUT_RATE* pOutputRate, BOOL* pRepeatFrame, DXGI_RATIONAL* pCustomRate) VideoProcessorGetStreamOutputRate;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, uint32 StreamIndex, BOOL* pEnabled, RECT* pRect) VideoProcessorGetStreamSourceRect;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, uint32 StreamIndex, BOOL* pEnabled, RECT* pRect) VideoProcessorGetStreamDestRect;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, uint32 StreamIndex, BOOL* pEnabled, float* pAlpha) VideoProcessorGetStreamAlpha;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, uint32 StreamIndex, uint32 Count, uint32* pEntries) VideoProcessorGetStreamPalette;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, uint32 StreamIndex, BOOL* pEnabled, DXGI_RATIONAL* pSourceAspectRatio, DXGI_RATIONAL* pDestinationAspectRatio) VideoProcessorGetStreamPixelAspectRatio;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, uint32 StreamIndex, BOOL* pEnabled, float* pLower, float* pUpper) VideoProcessorGetStreamLumaKey;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, uint32 StreamIndex, BOOL* pEnable, D3D11_VIDEO_PROCESSOR_STEREO_FORMAT* pFormat, BOOL* pLeftViewFrame0, BOOL* pBaseViewFrame0, D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE* pFlipMode, int32* MonoOffset) VideoProcessorGetStreamStereoFormat;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, uint32 StreamIndex, BOOL* pEnabled) VideoProcessorGetStreamAutoProcessingMode;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, uint32 StreamIndex, D3D11_VIDEO_PROCESSOR_FILTER Filter, BOOL* pEnabled, int32* pLevel) VideoProcessorGetStreamFilter;
			public function int32(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, uint32 StreamIndex, Guid* pExtensionGuid, uint32 DataSize, void* pData) VideoProcessorGetStreamExtension;
			public function HRESULT(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, ID3D11VideoProcessorOutputView* pView, uint32 OutputFrame, uint32 StreamCount, D3D11_VIDEO_PROCESSOR_STREAM* pStreams) VideoProcessorBlt;
			public function HRESULT(ID3D11VideoContext *self, ID3D11CryptoSession* pCryptoSession, uint32 DataSize, void* pData) NegotiateCryptoSessionKeyExchange;
			public function void(ID3D11VideoContext *self, ID3D11CryptoSession* pCryptoSession, ID3D11Texture2D* pSrcSurface, ID3D11Texture2D* pDstSurface, uint32 IVSize, void* pIV) EncryptionBlt;
			public function void(ID3D11VideoContext *self, ID3D11CryptoSession* pCryptoSession, ID3D11Texture2D* pSrcSurface, ID3D11Texture2D* pDstSurface, D3D11_ENCRYPTED_BLOCK_INFO* pEncryptedBlockInfo, uint32 ContentKeySize, void* pContentKey, uint32 IVSize, void* pIV) DecryptionBlt;
			public function void(ID3D11VideoContext *self, ID3D11CryptoSession* pCryptoSession, uint32 RandomNumberSize, void* pRandomNumber) StartSessionKeyRefresh;
			public function void(ID3D11VideoContext *self, ID3D11CryptoSession* pCryptoSession) FinishSessionKeyRefresh;
			public function HRESULT(ID3D11VideoContext *self, ID3D11CryptoSession* pCryptoSession, uint32 KeySize, void* pReadbackKey) GetEncryptionBltKey;
			public function HRESULT(ID3D11VideoContext *self, ID3D11AuthenticatedChannel* pChannel, uint32 DataSize, void* pData) NegotiateAuthenticatedChannelKeyExchange;
			public function HRESULT(ID3D11VideoContext *self, ID3D11AuthenticatedChannel* pChannel, uint32 InputSize, void* pInput, uint32 OutputSize, void* pOutput) QueryAuthenticatedChannel;
			public function HRESULT(ID3D11VideoContext *self, ID3D11AuthenticatedChannel* pChannel, uint32 InputSize, void* pInput, D3D11_AUTHENTICATED_CONFIGURE_OUTPUT* pOutput) ConfigureAuthenticatedChannel;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, uint32 StreamIndex, BOOL Enable, D3D11_VIDEO_PROCESSOR_ROTATION Rotation) VideoProcessorSetStreamRotation;
			public function void(ID3D11VideoContext *self, ID3D11VideoProcessor* pVideoProcessor, uint32 StreamIndex, BOOL* pEnable, D3D11_VIDEO_PROCESSOR_ROTATION* pRotation) VideoProcessorGetStreamRotation;
		}
		[CRepr]
		public struct ID3D11VideoDevice : IUnknown
		{
			public const new Guid IID = .(0x10ec4d5b, 0x975a, 0x4689, 0xb9, 0xe4, 0xd0, 0xaa, 0xc3, 0x0f, 0xe3, 0x33);
			
			public function HRESULT(ID3D11VideoDevice *self, D3D11_VIDEO_DECODER_DESC* pVideoDesc, D3D11_VIDEO_DECODER_CONFIG* pConfig, ID3D11VideoDecoder** ppDecoder) CreateVideoDecoder;
			public function HRESULT(ID3D11VideoDevice *self, ID3D11VideoProcessorEnumerator* pEnum, uint32 RateConversionIndex, ID3D11VideoProcessor** ppVideoProcessor) CreateVideoProcessor;
			public function HRESULT(ID3D11VideoDevice *self, D3D11_AUTHENTICATED_CHANNEL_TYPE ChannelType, ID3D11AuthenticatedChannel** ppAuthenticatedChannel) CreateAuthenticatedChannel;
			public function HRESULT(ID3D11VideoDevice *self, Guid* pCryptoType, Guid* pDecoderProfile, Guid* pKeyExchangeType, ID3D11CryptoSession** ppCryptoSession) CreateCryptoSession;
			public function HRESULT(ID3D11VideoDevice *self, ID3D11Resource* pResource, D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC* pDesc, ID3D11VideoDecoderOutputView** ppVDOVView) CreateVideoDecoderOutputView;
			public function HRESULT(ID3D11VideoDevice *self, ID3D11Resource* pResource, ID3D11VideoProcessorEnumerator* pEnum, D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC* pDesc, ID3D11VideoProcessorInputView** ppVPIView) CreateVideoProcessorInputView;
			public function HRESULT(ID3D11VideoDevice *self, ID3D11Resource* pResource, ID3D11VideoProcessorEnumerator* pEnum, D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC* pDesc, ID3D11VideoProcessorOutputView** ppVPOView) CreateVideoProcessorOutputView;
			public function HRESULT(ID3D11VideoDevice *self, D3D11_VIDEO_PROCESSOR_CONTENT_DESC* pDesc, ID3D11VideoProcessorEnumerator** ppEnum) CreateVideoProcessorEnumerator;
			public function uint32(ID3D11VideoDevice *self) GetVideoDecoderProfileCount;
			public function HRESULT(ID3D11VideoDevice *self, uint32 Index, Guid* pDecoderProfile) GetVideoDecoderProfile;
			public function HRESULT(ID3D11VideoDevice *self, Guid* pDecoderProfile, DXGI_FORMAT Format, BOOL* pSupported) CheckVideoDecoderFormat;
			public function HRESULT(ID3D11VideoDevice *self, D3D11_VIDEO_DECODER_DESC* pDesc, uint32* pCount) GetVideoDecoderConfigCount;
			public function HRESULT(ID3D11VideoDevice *self, D3D11_VIDEO_DECODER_DESC* pDesc, uint32 Index, D3D11_VIDEO_DECODER_CONFIG* pConfig) GetVideoDecoderConfig;
			public function HRESULT(ID3D11VideoDevice *self, Guid* pCryptoType, Guid* pDecoderProfile, D3D11_VIDEO_CONTENT_PROTECTION_CAPS* pCaps) GetContentProtectionCaps;
			public function HRESULT(ID3D11VideoDevice *self, Guid* pCryptoType, Guid* pDecoderProfile, uint32 Index, Guid* pKeyExchangeType) CheckCryptoKeyExchange;
			public function HRESULT(ID3D11VideoDevice *self, Guid* guid, uint32 DataSize, void* pData) SetPrivateData;
			public function HRESULT(ID3D11VideoDevice *self, Guid* guid, IUnknown* pData) SetPrivateDataInterface;
		}
		[CRepr]
		public struct ID3D11Device : IUnknown
		{
			public const new Guid IID = .(0xdb6f6ddb, 0xac77, 0x4e88, 0x82, 0x53, 0x81, 0x9d, 0xf9, 0xbb, 0xf1, 0x40);
			
			public function HRESULT(ID3D11Device *self, D3D11_BUFFER_DESC* pDesc, D3D11_SUBRESOURCE_DATA* pInitialData, ID3D11Buffer** ppBuffer) CreateBuffer;
			public function HRESULT(ID3D11Device *self, D3D11_TEXTURE1D_DESC* pDesc, D3D11_SUBRESOURCE_DATA* pInitialData, ID3D11Texture1D** ppTexture1D) CreateTexture1D;
			public function HRESULT(ID3D11Device *self, D3D11_TEXTURE2D_DESC* pDesc, D3D11_SUBRESOURCE_DATA* pInitialData, ID3D11Texture2D** ppTexture2D) CreateTexture2D;
			public function HRESULT(ID3D11Device *self, D3D11_TEXTURE3D_DESC* pDesc, D3D11_SUBRESOURCE_DATA* pInitialData, ID3D11Texture3D** ppTexture3D) CreateTexture3D;
			public function HRESULT(ID3D11Device *self, ID3D11Resource* pResource, D3D11_SHADER_RESOURCE_VIEW_DESC* pDesc, ID3D11ShaderResourceView** ppSRView) CreateShaderResourceView;
			public function HRESULT(ID3D11Device *self, ID3D11Resource* pResource, D3D11_UNORDERED_ACCESS_VIEW_DESC* pDesc, ID3D11UnorderedAccessView** ppUAView) CreateUnorderedAccessView;
			public function HRESULT(ID3D11Device *self, ID3D11Resource* pResource, D3D11_RENDER_TARGET_VIEW_DESC* pDesc, ID3D11RenderTargetView** ppRTView) CreateRenderTargetView;
			public function HRESULT(ID3D11Device *self, ID3D11Resource* pResource, D3D11_DEPTH_STENCIL_VIEW_DESC* pDesc, ID3D11DepthStencilView** ppDepthStencilView) CreateDepthStencilView;
			public function HRESULT(ID3D11Device *self, D3D11_INPUT_ELEMENT_DESC* pInputElementDescs, uint32 NumElements, void* pShaderBytecodeWithInputSignature, uint BytecodeLength, ID3D11InputLayout** ppInputLayout) CreateInputLayout;
			public function HRESULT(ID3D11Device *self, void* pShaderBytecode, uint BytecodeLength, ID3D11ClassLinkage* pClassLinkage, ID3D11VertexShader** ppVertexShader) CreateVertexShader;
			public function HRESULT(ID3D11Device *self, void* pShaderBytecode, uint BytecodeLength, ID3D11ClassLinkage* pClassLinkage, ID3D11GeometryShader** ppGeometryShader) CreateGeometryShader;
			public function HRESULT(ID3D11Device *self, void* pShaderBytecode, uint BytecodeLength, D3D11_SO_DECLARATION_ENTRY* pSODeclaration, uint32 NumEntries, uint32* pBufferStrides, uint32 NumStrides, uint32 RasterizedStream, ID3D11ClassLinkage* pClassLinkage, ID3D11GeometryShader** ppGeometryShader) CreateGeometryShaderWithStreamOutput;
			public function HRESULT(ID3D11Device *self, void* pShaderBytecode, uint BytecodeLength, ID3D11ClassLinkage* pClassLinkage, ID3D11PixelShader** ppPixelShader) CreatePixelShader;
			public function HRESULT(ID3D11Device *self, void* pShaderBytecode, uint BytecodeLength, ID3D11ClassLinkage* pClassLinkage, ID3D11HullShader** ppHullShader) CreateHullShader;
			public function HRESULT(ID3D11Device *self, void* pShaderBytecode, uint BytecodeLength, ID3D11ClassLinkage* pClassLinkage, ID3D11DomainShader** ppDomainShader) CreateDomainShader;
			public function HRESULT(ID3D11Device *self, void* pShaderBytecode, uint BytecodeLength, ID3D11ClassLinkage* pClassLinkage, ID3D11ComputeShader** ppComputeShader) CreateComputeShader;
			public function HRESULT(ID3D11Device *self, ID3D11ClassLinkage** ppLinkage) CreateClassLinkage;
			public function HRESULT(ID3D11Device *self, D3D11_BLEND_DESC* pBlendStateDesc, ID3D11BlendState** ppBlendState) CreateBlendState;
			public function HRESULT(ID3D11Device *self, D3D11_DEPTH_STENCIL_DESC* pDepthStencilDesc, ID3D11DepthStencilState** ppDepthStencilState) CreateDepthStencilState;
			public function HRESULT(ID3D11Device *self, D3D11_RASTERIZER_DESC* pRasterizerDesc, ID3D11RasterizerState** ppRasterizerState) CreateRasterizerState;
			public function HRESULT(ID3D11Device *self, D3D11_SAMPLER_DESC* pSamplerDesc, ID3D11SamplerState** ppSamplerState) CreateSamplerState;
			public function HRESULT(ID3D11Device *self, D3D11_QUERY_DESC* pQueryDesc, ID3D11Query** ppQuery) CreateQuery;
			public function HRESULT(ID3D11Device *self, D3D11_QUERY_DESC* pPredicateDesc, ID3D11Predicate** ppPredicate) CreatePredicate;
			public function HRESULT(ID3D11Device *self, D3D11_COUNTER_DESC* pCounterDesc, ID3D11Counter** ppCounter) CreateCounter;
			public function HRESULT(ID3D11Device *self, uint32 ContextFlags, ID3D11DeviceContext** ppDeferredContext) CreateDeferredContext;
			public function HRESULT(ID3D11Device *self, HANDLE hResource, Guid* ReturnedInterface, void** ppResource) OpenSharedResource;
			public function HRESULT(ID3D11Device *self, DXGI_FORMAT Format, uint32* pFormatSupport) CheckFormatSupport;
			public function HRESULT(ID3D11Device *self, DXGI_FORMAT Format, uint32 SampleCount, uint32* pNumQualityLevels) CheckMultisampleQualityLevels;
			public function void(ID3D11Device *self, D3D11_COUNTER_INFO* pCounterInfo) CheckCounterInfo;
			public function HRESULT(ID3D11Device *self, D3D11_COUNTER_DESC* pDesc, D3D11_COUNTER_TYPE* pType, uint32* pActiveCounters, uint8* szName, uint32* pNameLength, uint8* szUnits, uint32* pUnitsLength, uint8* szDescription, uint32* pDescriptionLength) CheckCounter;
			public function HRESULT(ID3D11Device *self, D3D11_FEATURE Feature, void* pFeatureSupportData, uint32 FeatureSupportDataSize) CheckFeatureSupport;
			public function HRESULT(ID3D11Device *self, Guid* guid, uint32* pDataSize, void* pData) GetPrivateData;
			public function HRESULT(ID3D11Device *self, Guid* guid, uint32 DataSize, void* pData) SetPrivateData;
			public function HRESULT(ID3D11Device *self, Guid* guid, IUnknown* pData) SetPrivateDataInterface;
			public function D3D_FEATURE_LEVEL(ID3D11Device *self) GetFeatureLevel;
			public function uint32(ID3D11Device *self) GetCreationFlags;
			public function HRESULT(ID3D11Device *self) GetDeviceRemovedReason;
			public function void(ID3D11Device *self, ID3D11DeviceContext** ppImmediateContext) GetImmediateContext;
			public function HRESULT(ID3D11Device *self, uint32 RaiseFlags) SetExceptionMode;
			public function uint32(ID3D11Device *self) GetExceptionMode;
		}
		[CRepr]
		public struct ID3D11Debug : IUnknown
		{
			public const new Guid IID = .(0x79cf2233, 0x7536, 0x4948, 0x9d, 0x36, 0x1e, 0x46, 0x92, 0xdc, 0x57, 0x60);
			
			public function HRESULT(ID3D11Debug *self, uint32 Mask) SetFeatureMask;
			public function uint32(ID3D11Debug *self) GetFeatureMask;
			public function HRESULT(ID3D11Debug *self, uint32 Milliseconds) SetPresentPerRenderOpDelay;
			public function uint32(ID3D11Debug *self) GetPresentPerRenderOpDelay;
			public function HRESULT(ID3D11Debug *self, IDXGISwapChain* pSwapChain) SetSwapChain;
			public function HRESULT(ID3D11Debug *self, IDXGISwapChain** ppSwapChain) GetSwapChain;
			public function HRESULT(ID3D11Debug *self, ID3D11DeviceContext* pContext) ValidateContext;
			public function HRESULT(ID3D11Debug *self, D3D11_RLDO_FLAGS Flags) ReportLiveDeviceObjects;
			public function HRESULT(ID3D11Debug *self, ID3D11DeviceContext* pContext) ValidateContextForDispatch;
		}
		[CRepr]
		public struct ID3D11SwitchToRef : IUnknown
		{
			public const new Guid IID = .(0x1ef337e3, 0x58e7, 0x4f83, 0xa6, 0x92, 0xdb, 0x22, 0x1f, 0x5e, 0xd4, 0x7e);
			
			public function BOOL(ID3D11SwitchToRef *self, BOOL UseRef) SetUseRef;
			public function BOOL(ID3D11SwitchToRef *self) GetUseRef;
		}
		[CRepr]
		public struct ID3D11TracingDevice : IUnknown
		{
			public const new Guid IID = .(0x1911c771, 0x1587, 0x413e, 0xa7, 0xe0, 0xfb, 0x26, 0xc3, 0xde, 0x02, 0x68);
			
			public function HRESULT(ID3D11TracingDevice *self, uint32 ResourceTypeFlags, uint32 Options) SetShaderTrackingOptionsByType;
			public function HRESULT(ID3D11TracingDevice *self, IUnknown* pShader, uint32 Options) SetShaderTrackingOptions;
		}
		[CRepr]
		public struct ID3D11RefTrackingOptions : IUnknown
		{
			public const new Guid IID = .(0x193dacdf, 0x0db2, 0x4c05, 0xa5, 0x5c, 0xef, 0x06, 0xca, 0xc5, 0x6f, 0xd9);
			
			public function HRESULT(ID3D11RefTrackingOptions *self, uint32 uOptions) SetTrackingOptions;
		}
		[CRepr]
		public struct ID3D11RefDefaultTrackingOptions : IUnknown
		{
			public const new Guid IID = .(0x03916615, 0xc644, 0x418c, 0x9b, 0xf4, 0x75, 0xdb, 0x5b, 0xe6, 0x3c, 0xa0);
			
			public function HRESULT(ID3D11RefDefaultTrackingOptions *self, uint32 ResourceTypeFlags, uint32 Options) SetTrackingOptions;
		}
		[CRepr]
		public struct ID3D11InfoQueue : IUnknown
		{
			public const new Guid IID = .(0x6543dbb6, 0x1b48, 0x42f5, 0xab, 0x82, 0xe9, 0x7e, 0xc7, 0x43, 0x26, 0xf6);
			
			public function HRESULT(ID3D11InfoQueue *self, uint64 MessageCountLimit) SetMessageCountLimit;
			public function void(ID3D11InfoQueue *self) ClearStoredMessages;
			public function HRESULT(ID3D11InfoQueue *self, uint64 MessageIndex, D3D11_MESSAGE* pMessage, uint* pMessageByteLength) GetMessage;
			public function uint64(ID3D11InfoQueue *self) GetNumMessagesAllowedByStorageFilter;
			public function uint64(ID3D11InfoQueue *self) GetNumMessagesDeniedByStorageFilter;
			public function uint64(ID3D11InfoQueue *self) GetNumStoredMessages;
			public function uint64(ID3D11InfoQueue *self) GetNumStoredMessagesAllowedByRetrievalFilter;
			public function uint64(ID3D11InfoQueue *self) GetNumMessagesDiscardedByMessageCountLimit;
			public function uint64(ID3D11InfoQueue *self) GetMessageCountLimit;
			public function HRESULT(ID3D11InfoQueue *self, D3D11_INFO_QUEUE_FILTER* pFilter) AddStorageFilterEntries;
			public function HRESULT(ID3D11InfoQueue *self, D3D11_INFO_QUEUE_FILTER* pFilter, uint* pFilterByteLength) GetStorageFilter;
			public function void(ID3D11InfoQueue *self) ClearStorageFilter;
			public function HRESULT(ID3D11InfoQueue *self) PushEmptyStorageFilter;
			public function HRESULT(ID3D11InfoQueue *self) PushCopyOfStorageFilter;
			public function HRESULT(ID3D11InfoQueue *self, D3D11_INFO_QUEUE_FILTER* pFilter) PushStorageFilter;
			public function void(ID3D11InfoQueue *self) PopStorageFilter;
			public function uint32(ID3D11InfoQueue *self) GetStorageFilterStackSize;
			public function HRESULT(ID3D11InfoQueue *self, D3D11_INFO_QUEUE_FILTER* pFilter) AddRetrievalFilterEntries;
			public function HRESULT(ID3D11InfoQueue *self, D3D11_INFO_QUEUE_FILTER* pFilter, uint* pFilterByteLength) GetRetrievalFilter;
			public function void(ID3D11InfoQueue *self) ClearRetrievalFilter;
			public function HRESULT(ID3D11InfoQueue *self) PushEmptyRetrievalFilter;
			public function HRESULT(ID3D11InfoQueue *self) PushCopyOfRetrievalFilter;
			public function HRESULT(ID3D11InfoQueue *self, D3D11_INFO_QUEUE_FILTER* pFilter) PushRetrievalFilter;
			public function void(ID3D11InfoQueue *self) PopRetrievalFilter;
			public function uint32(ID3D11InfoQueue *self) GetRetrievalFilterStackSize;
			public function HRESULT(ID3D11InfoQueue *self, D3D11_MESSAGE_CATEGORY Category, D3D11_MESSAGE_SEVERITY Severity, D3D11_MESSAGE_ID ID, PSTR pDescription) AddMessage;
			public function HRESULT(ID3D11InfoQueue *self, D3D11_MESSAGE_SEVERITY Severity, PSTR pDescription) AddApplicationMessage;
			public function HRESULT(ID3D11InfoQueue *self, D3D11_MESSAGE_CATEGORY Category, BOOL bEnable) SetBreakOnCategory;
			public function HRESULT(ID3D11InfoQueue *self, D3D11_MESSAGE_SEVERITY Severity, BOOL bEnable) SetBreakOnSeverity;
			public function HRESULT(ID3D11InfoQueue *self, D3D11_MESSAGE_ID ID, BOOL bEnable) SetBreakOnID;
			public function BOOL(ID3D11InfoQueue *self, D3D11_MESSAGE_CATEGORY Category) GetBreakOnCategory;
			public function BOOL(ID3D11InfoQueue *self, D3D11_MESSAGE_SEVERITY Severity) GetBreakOnSeverity;
			public function BOOL(ID3D11InfoQueue *self, D3D11_MESSAGE_ID ID) GetBreakOnID;
			public function void(ID3D11InfoQueue *self, BOOL bMute) SetMuteDebugOutput;
			public function BOOL(ID3D11InfoQueue *self) GetMuteDebugOutput;
		}
		[CRepr]
		public struct ID3D11BlendState1 : ID3D11BlendState
		{
			public const new Guid IID = .(0xcc86fabe, 0xda55, 0x401d, 0x85, 0xe7, 0xe3, 0xc9, 0xde, 0x28, 0x77, 0xe9);
			
			public function void(ID3D11BlendState1 *self, D3D11_BLEND_DESC1* pDesc) GetDesc1;
		}
		[CRepr]
		public struct ID3D11RasterizerState1 : ID3D11RasterizerState
		{
			public const new Guid IID = .(0x1217d7a6, 0x5039, 0x418c, 0xb0, 0x42, 0x9c, 0xbe, 0x25, 0x6a, 0xfd, 0x6e);
			
			public function void(ID3D11RasterizerState1 *self, D3D11_RASTERIZER_DESC1* pDesc) GetDesc1;
		}
		[CRepr]
		public struct ID3DDeviceContextState : ID3D11DeviceChild
		{
			public const new Guid IID = .(0x5c1e0d8a, 0x7c23, 0x48f9, 0x8c, 0x59, 0xa9, 0x29, 0x58, 0xce, 0xff, 0x11);
			
		}
		[CRepr]
		public struct ID3D11DeviceContext1 : ID3D11DeviceContext
		{
			public const new Guid IID = .(0xbb2c6faa, 0xb5fb, 0x4082, 0x8e, 0x6b, 0x38, 0x8b, 0x8c, 0xfa, 0x90, 0xe1);
			
			public function void(ID3D11DeviceContext1 *self, ID3D11Resource* pDstResource, uint32 DstSubresource, uint32 DstX, uint32 DstY, uint32 DstZ, ID3D11Resource* pSrcResource, uint32 SrcSubresource, D3D11_BOX* pSrcBox, uint32 CopyFlags) CopySubresourceRegion1;
			public function void(ID3D11DeviceContext1 *self, ID3D11Resource* pDstResource, uint32 DstSubresource, D3D11_BOX* pDstBox, void* pSrcData, uint32 SrcRowPitch, uint32 SrcDepthPitch, uint32 CopyFlags) UpdateSubresource1;
			public function void(ID3D11DeviceContext1 *self, ID3D11Resource* pResource) DiscardResource;
			public function void(ID3D11DeviceContext1 *self, ID3D11View* pResourceView) DiscardView;
			public function void(ID3D11DeviceContext1 *self, uint32 StartSlot, uint32 NumBuffers, ID3D11Buffer** ppConstantBuffers, uint32* pFirstConstant, uint32* pNumConstants) VSSetConstantBuffers1;
			public function void(ID3D11DeviceContext1 *self, uint32 StartSlot, uint32 NumBuffers, ID3D11Buffer** ppConstantBuffers, uint32* pFirstConstant, uint32* pNumConstants) HSSetConstantBuffers1;
			public function void(ID3D11DeviceContext1 *self, uint32 StartSlot, uint32 NumBuffers, ID3D11Buffer** ppConstantBuffers, uint32* pFirstConstant, uint32* pNumConstants) DSSetConstantBuffers1;
			public function void(ID3D11DeviceContext1 *self, uint32 StartSlot, uint32 NumBuffers, ID3D11Buffer** ppConstantBuffers, uint32* pFirstConstant, uint32* pNumConstants) GSSetConstantBuffers1;
			public function void(ID3D11DeviceContext1 *self, uint32 StartSlot, uint32 NumBuffers, ID3D11Buffer** ppConstantBuffers, uint32* pFirstConstant, uint32* pNumConstants) PSSetConstantBuffers1;
			public function void(ID3D11DeviceContext1 *self, uint32 StartSlot, uint32 NumBuffers, ID3D11Buffer** ppConstantBuffers, uint32* pFirstConstant, uint32* pNumConstants) CSSetConstantBuffers1;
			public function void(ID3D11DeviceContext1 *self, uint32 StartSlot, uint32 NumBuffers, ID3D11Buffer** ppConstantBuffers, uint32* pFirstConstant, uint32* pNumConstants) VSGetConstantBuffers1;
			public function void(ID3D11DeviceContext1 *self, uint32 StartSlot, uint32 NumBuffers, ID3D11Buffer** ppConstantBuffers, uint32* pFirstConstant, uint32* pNumConstants) HSGetConstantBuffers1;
			public function void(ID3D11DeviceContext1 *self, uint32 StartSlot, uint32 NumBuffers, ID3D11Buffer** ppConstantBuffers, uint32* pFirstConstant, uint32* pNumConstants) DSGetConstantBuffers1;
			public function void(ID3D11DeviceContext1 *self, uint32 StartSlot, uint32 NumBuffers, ID3D11Buffer** ppConstantBuffers, uint32* pFirstConstant, uint32* pNumConstants) GSGetConstantBuffers1;
			public function void(ID3D11DeviceContext1 *self, uint32 StartSlot, uint32 NumBuffers, ID3D11Buffer** ppConstantBuffers, uint32* pFirstConstant, uint32* pNumConstants) PSGetConstantBuffers1;
			public function void(ID3D11DeviceContext1 *self, uint32 StartSlot, uint32 NumBuffers, ID3D11Buffer** ppConstantBuffers, uint32* pFirstConstant, uint32* pNumConstants) CSGetConstantBuffers1;
			public function void(ID3D11DeviceContext1 *self, ID3DDeviceContextState* pState, ID3DDeviceContextState** ppPreviousState) SwapDeviceContextState;
			public function void(ID3D11DeviceContext1 *self, ID3D11View* pView, float* Color, RECT* pRect, uint32 NumRects) ClearView;
			public function void(ID3D11DeviceContext1 *self, ID3D11View* pResourceView, RECT* pRects, uint32 NumRects) DiscardView1;
		}
		[CRepr]
		public struct ID3D11VideoContext1 : ID3D11VideoContext
		{
			public const new Guid IID = .(0xa7f026da, 0xa5f8, 0x4487, 0xa5, 0x64, 0x15, 0xe3, 0x43, 0x57, 0x65, 0x1e);
			
			public function HRESULT(ID3D11VideoContext1 *self, ID3D11VideoDecoder* pDecoder, uint32 NumBuffers, D3D11_VIDEO_DECODER_BUFFER_DESC1* pBufferDesc) SubmitDecoderBuffers1;
			public function HRESULT(ID3D11VideoContext1 *self, ID3D11CryptoSession* pCryptoSession, uint32 PrivateInputSize, void* pPrivatInputData, uint64* pPrivateOutputData) GetDataForNewHardwareKey;
			public function HRESULT(ID3D11VideoContext1 *self, ID3D11CryptoSession* pCryptoSession, D3D11_CRYPTO_SESSION_STATUS* pStatus) CheckCryptoSessionStatus;
			public function HRESULT(ID3D11VideoContext1 *self, ID3D11VideoDecoder* pDecoder, DXGI_COLOR_SPACE_TYPE InputColorSpace, D3D11_VIDEO_SAMPLE_DESC* pOutputDesc, uint32 ReferenceFrameCount) DecoderEnableDownsampling;
			public function HRESULT(ID3D11VideoContext1 *self, ID3D11VideoDecoder* pDecoder, D3D11_VIDEO_SAMPLE_DESC* pOutputDesc) DecoderUpdateDownsampling;
			public function void(ID3D11VideoContext1 *self, ID3D11VideoProcessor* pVideoProcessor, DXGI_COLOR_SPACE_TYPE ColorSpace) VideoProcessorSetOutputColorSpace1;
			public function void(ID3D11VideoContext1 *self, ID3D11VideoProcessor* pVideoProcessor, BOOL ShaderUsage) VideoProcessorSetOutputShaderUsage;
			public function void(ID3D11VideoContext1 *self, ID3D11VideoProcessor* pVideoProcessor, DXGI_COLOR_SPACE_TYPE* pColorSpace) VideoProcessorGetOutputColorSpace1;
			public function void(ID3D11VideoContext1 *self, ID3D11VideoProcessor* pVideoProcessor, BOOL* pShaderUsage) VideoProcessorGetOutputShaderUsage;
			public function void(ID3D11VideoContext1 *self, ID3D11VideoProcessor* pVideoProcessor, uint32 StreamIndex, DXGI_COLOR_SPACE_TYPE ColorSpace) VideoProcessorSetStreamColorSpace1;
			public function void(ID3D11VideoContext1 *self, ID3D11VideoProcessor* pVideoProcessor, uint32 StreamIndex, BOOL Enable, BOOL FlipHorizontal, BOOL FlipVertical) VideoProcessorSetStreamMirror;
			public function void(ID3D11VideoContext1 *self, ID3D11VideoProcessor* pVideoProcessor, uint32 StreamIndex, DXGI_COLOR_SPACE_TYPE* pColorSpace) VideoProcessorGetStreamColorSpace1;
			public function void(ID3D11VideoContext1 *self, ID3D11VideoProcessor* pVideoProcessor, uint32 StreamIndex, BOOL* pEnable, BOOL* pFlipHorizontal, BOOL* pFlipVertical) VideoProcessorGetStreamMirror;
			public function HRESULT(ID3D11VideoContext1 *self, ID3D11VideoProcessor* pVideoProcessor, uint32 OutputWidth, uint32 OutputHeight, DXGI_FORMAT OutputFormat, uint32 StreamCount, D3D11_VIDEO_PROCESSOR_STREAM_BEHAVIOR_HINT* pStreams, uint32* pBehaviorHints) VideoProcessorGetBehaviorHints;
		}
		[CRepr]
		public struct ID3D11VideoDevice1 : ID3D11VideoDevice
		{
			public const new Guid IID = .(0x29da1d51, 0x1321, 0x4454, 0x80, 0x4b, 0xf5, 0xfc, 0x9f, 0x86, 0x1f, 0x0f);
			
			public function HRESULT(ID3D11VideoDevice1 *self, Guid* pCryptoType, Guid* pDecoderProfile, Guid* pKeyExchangeType, uint32* pPrivateInputSize, uint32* pPrivateOutputSize) GetCryptoSessionPrivateDataSize;
			public function HRESULT(ID3D11VideoDevice1 *self, Guid* pDecoderProfile, uint32 SampleWidth, uint32 SampleHeight, DXGI_RATIONAL* pFrameRate, uint32 BitRate, Guid* pCryptoType, uint32* pDecoderCaps) GetVideoDecoderCaps;
			public function HRESULT(ID3D11VideoDevice1 *self, D3D11_VIDEO_DECODER_DESC* pInputDesc, DXGI_COLOR_SPACE_TYPE InputColorSpace, D3D11_VIDEO_DECODER_CONFIG* pInputConfig, DXGI_RATIONAL* pFrameRate, D3D11_VIDEO_SAMPLE_DESC* pOutputDesc, BOOL* pSupported, BOOL* pRealTimeHint) CheckVideoDecoderDownsampling;
			public function HRESULT(ID3D11VideoDevice1 *self, D3D11_VIDEO_DECODER_DESC* pInputDesc, DXGI_COLOR_SPACE_TYPE InputColorSpace, D3D11_VIDEO_DECODER_CONFIG* pInputConfig, DXGI_RATIONAL* pFrameRate, D3D11_VIDEO_SAMPLE_DESC* pRecommendedOutputDesc) RecommendVideoDecoderDownsampleParameters;
		}
		[CRepr]
		public struct ID3D11VideoProcessorEnumerator1 : ID3D11VideoProcessorEnumerator
		{
			public const new Guid IID = .(0x465217f2, 0x5568, 0x43cf, 0xb5, 0xb9, 0xf6, 0x1d, 0x54, 0x53, 0x1c, 0xa1);
			
			public function HRESULT(ID3D11VideoProcessorEnumerator1 *self, DXGI_FORMAT InputFormat, DXGI_COLOR_SPACE_TYPE InputColorSpace, DXGI_FORMAT OutputFormat, DXGI_COLOR_SPACE_TYPE OutputColorSpace, BOOL* pSupported) CheckVideoProcessorFormatConversion;
		}
		[CRepr]
		public struct ID3D11Device1 : ID3D11Device
		{
			public const new Guid IID = .(0xa04bfb29, 0x08ef, 0x43d6, 0xa4, 0x9c, 0xa9, 0xbd, 0xbd, 0xcb, 0xe6, 0x86);
			
			public function void(ID3D11Device1 *self, ID3D11DeviceContext1** ppImmediateContext) GetImmediateContext1;
			public function HRESULT(ID3D11Device1 *self, uint32 ContextFlags, ID3D11DeviceContext1** ppDeferredContext) CreateDeferredContext1;
			public function HRESULT(ID3D11Device1 *self, D3D11_BLEND_DESC1* pBlendStateDesc, ID3D11BlendState1** ppBlendState) CreateBlendState1;
			public function HRESULT(ID3D11Device1 *self, D3D11_RASTERIZER_DESC1* pRasterizerDesc, ID3D11RasterizerState1** ppRasterizerState) CreateRasterizerState1;
			public function HRESULT(ID3D11Device1 *self, uint32 Flags, D3D_FEATURE_LEVEL* pFeatureLevels, uint32 FeatureLevels, uint32 SDKVersion, Guid* EmulatedInterface, D3D_FEATURE_LEVEL* pChosenFeatureLevel, ID3DDeviceContextState** ppContextState) CreateDeviceContextState;
			public function HRESULT(ID3D11Device1 *self, HANDLE hResource, Guid* returnedInterface, void** ppResource) OpenSharedResource1;
			public function HRESULT(ID3D11Device1 *self, PWSTR lpName, uint32 dwDesiredAccess, Guid* returnedInterface, void** ppResource) OpenSharedResourceByName;
		}
		[CRepr]
		public struct ID3DUserDefinedAnnotation : IUnknown
		{
			public const new Guid IID = .(0xb2daad8b, 0x03d4, 0x4dbf, 0x95, 0xeb, 0x32, 0xab, 0x4b, 0x63, 0xd0, 0xab);
			
			public function int32(ID3DUserDefinedAnnotation *self, PWSTR Name) BeginEvent;
			public function int32(ID3DUserDefinedAnnotation *self) EndEvent;
			public function void(ID3DUserDefinedAnnotation *self, PWSTR Name) SetMarker;
			public function BOOL(ID3DUserDefinedAnnotation *self) GetStatus;
		}
		[CRepr]
		public struct ID3D11DeviceContext2 : ID3D11DeviceContext1
		{
			public const new Guid IID = .(0x420d5b32, 0xb90c, 0x4da4, 0xbe, 0xf0, 0x35, 0x9f, 0x6a, 0x24, 0xa8, 0x3a);
			
			public function HRESULT(ID3D11DeviceContext2 *self, ID3D11Resource* pTiledResource, uint32 NumTiledResourceRegions, D3D11_TILED_RESOURCE_COORDINATE* pTiledResourceRegionStartCoordinates, D3D11_TILE_REGION_SIZE* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint32 NumRanges, uint32* pRangeFlags, uint32* pTilePoolStartOffsets, uint32* pRangeTileCounts, uint32 Flags) UpdateTileMappings;
			public function HRESULT(ID3D11DeviceContext2 *self, ID3D11Resource* pDestTiledResource, D3D11_TILED_RESOURCE_COORDINATE* pDestRegionStartCoordinate, ID3D11Resource* pSourceTiledResource, D3D11_TILED_RESOURCE_COORDINATE* pSourceRegionStartCoordinate, D3D11_TILE_REGION_SIZE* pTileRegionSize, uint32 Flags) CopyTileMappings;
			public function void(ID3D11DeviceContext2 *self, ID3D11Resource* pTiledResource, D3D11_TILED_RESOURCE_COORDINATE* pTileRegionStartCoordinate, D3D11_TILE_REGION_SIZE* pTileRegionSize, ID3D11Buffer* pBuffer, uint64 BufferStartOffsetInBytes, uint32 Flags) CopyTiles;
			public function void(ID3D11DeviceContext2 *self, ID3D11Resource* pDestTiledResource, D3D11_TILED_RESOURCE_COORDINATE* pDestTileRegionStartCoordinate, D3D11_TILE_REGION_SIZE* pDestTileRegionSize, void* pSourceTileData, uint32 Flags) UpdateTiles;
			public function HRESULT(ID3D11DeviceContext2 *self, ID3D11Buffer* pTilePool, uint64 NewSizeInBytes) ResizeTilePool;
			public function void(ID3D11DeviceContext2 *self, ID3D11DeviceChild* pTiledResourceOrViewAccessBeforeBarrier, ID3D11DeviceChild* pTiledResourceOrViewAccessAfterBarrier) TiledResourceBarrier;
			public function BOOL(ID3D11DeviceContext2 *self) IsAnnotationEnabled;
			public function void(ID3D11DeviceContext2 *self, PWSTR pLabel, int32 Data) SetMarkerInt;
			public function void(ID3D11DeviceContext2 *self, PWSTR pLabel, int32 Data) BeginEventInt;
			public function void(ID3D11DeviceContext2 *self) EndEvent;
		}
		[CRepr]
		public struct ID3D11Device2 : ID3D11Device1
		{
			public const new Guid IID = .(0x9d06dffa, 0xd1e5, 0x4d07, 0x83, 0xa8, 0x1b, 0xb1, 0x23, 0xf2, 0xf8, 0x41);
			
			public function void(ID3D11Device2 *self, ID3D11DeviceContext2** ppImmediateContext) GetImmediateContext2;
			public function HRESULT(ID3D11Device2 *self, uint32 ContextFlags, ID3D11DeviceContext2** ppDeferredContext) CreateDeferredContext2;
			public function void(ID3D11Device2 *self, ID3D11Resource* pTiledResource, uint32* pNumTilesForEntireResource, D3D11_PACKED_MIP_DESC* pPackedMipDesc, D3D11_TILE_SHAPE* pStandardTileShapeForNonPackedMips, uint32* pNumSubresourceTilings, uint32 FirstSubresourceTilingToGet, D3D11_SUBRESOURCE_TILING* pSubresourceTilingsForNonPackedMips) GetResourceTiling;
			public function HRESULT(ID3D11Device2 *self, DXGI_FORMAT Format, uint32 SampleCount, uint32 Flags, uint32* pNumQualityLevels) CheckMultisampleQualityLevels1;
		}
		[CRepr]
		public struct ID3D11Texture2D1 : ID3D11Texture2D
		{
			public const new Guid IID = .(0x51218251, 0x1e33, 0x4617, 0x9c, 0xcb, 0x4d, 0x3a, 0x43, 0x67, 0xe7, 0xbb);
			
			public function void(ID3D11Texture2D1 *self, D3D11_TEXTURE2D_DESC1* pDesc) GetDesc1;
		}
		[CRepr]
		public struct ID3D11Texture3D1 : ID3D11Texture3D
		{
			public const new Guid IID = .(0x0c711683, 0x2853, 0x4846, 0x9b, 0xb0, 0xf3, 0xe6, 0x06, 0x39, 0xe4, 0x6a);
			
			public function void(ID3D11Texture3D1 *self, D3D11_TEXTURE3D_DESC1* pDesc) GetDesc1;
		}
		[CRepr]
		public struct ID3D11RasterizerState2 : ID3D11RasterizerState1
		{
			public const new Guid IID = .(0x6fbd02fb, 0x209f, 0x46c4, 0xb0, 0x59, 0x2e, 0xd1, 0x55, 0x86, 0xa6, 0xac);
			
			public function void(ID3D11RasterizerState2 *self, D3D11_RASTERIZER_DESC2* pDesc) GetDesc2;
		}
		[CRepr]
		public struct ID3D11ShaderResourceView1 : ID3D11ShaderResourceView
		{
			public const new Guid IID = .(0x91308b87, 0x9040, 0x411d, 0x8c, 0x67, 0xc3, 0x92, 0x53, 0xce, 0x38, 0x02);
			
			public function void(ID3D11ShaderResourceView1 *self, D3D11_SHADER_RESOURCE_VIEW_DESC1* pDesc1) GetDesc1;
		}
		[CRepr]
		public struct ID3D11RenderTargetView1 : ID3D11RenderTargetView
		{
			public const new Guid IID = .(0xffbe2e23, 0xf011, 0x418a, 0xac, 0x56, 0x5c, 0xee, 0xd7, 0xc5, 0xb9, 0x4b);
			
			public function void(ID3D11RenderTargetView1 *self, D3D11_RENDER_TARGET_VIEW_DESC1* pDesc1) GetDesc1;
		}
		[CRepr]
		public struct ID3D11UnorderedAccessView1 : ID3D11UnorderedAccessView
		{
			public const new Guid IID = .(0x7b3b6153, 0xa886, 0x4544, 0xab, 0x37, 0x65, 0x37, 0xc8, 0x50, 0x04, 0x03);
			
			public function void(ID3D11UnorderedAccessView1 *self, D3D11_UNORDERED_ACCESS_VIEW_DESC1* pDesc1) GetDesc1;
		}
		[CRepr]
		public struct ID3D11Query1 : ID3D11Query
		{
			public const new Guid IID = .(0x631b4766, 0x36dc, 0x461d, 0x8d, 0xb6, 0xc4, 0x7e, 0x13, 0xe6, 0x09, 0x16);
			
			public function void(ID3D11Query1 *self, D3D11_QUERY_DESC1* pDesc1) GetDesc1;
		}
		[CRepr]
		public struct ID3D11DeviceContext3 : ID3D11DeviceContext2
		{
			public const new Guid IID = .(0xb4e3c01d, 0xe79e, 0x4637, 0x91, 0xb2, 0x51, 0x0e, 0x9f, 0x4c, 0x9b, 0x8f);
			
			public function void(ID3D11DeviceContext3 *self, D3D11_CONTEXT_TYPE ContextType, HANDLE hEvent) Flush1;
			public function void(ID3D11DeviceContext3 *self, BOOL HwProtectionEnable) SetHardwareProtectionState;
			public function void(ID3D11DeviceContext3 *self, BOOL* pHwProtectionEnable) GetHardwareProtectionState;
		}
		[CRepr]
		public struct ID3D11Fence : ID3D11DeviceChild
		{
			public const new Guid IID = .(0xaffde9d1, 0x1df7, 0x4bb7, 0x8a, 0x34, 0x0f, 0x46, 0x25, 0x1d, 0xab, 0x80);
			
			public function HRESULT(ID3D11Fence *self, SECURITY_ATTRIBUTES* pAttributes, uint32 dwAccess, PWSTR lpName, HANDLE* pHandle) CreateSharedHandle;
			public function uint64(ID3D11Fence *self) GetCompletedValue;
			public function HRESULT(ID3D11Fence *self, uint64 Value, HANDLE hEvent) SetEventOnCompletion;
		}
		[CRepr]
		public struct ID3D11DeviceContext4 : ID3D11DeviceContext3
		{
			public const new Guid IID = .(0x917600da, 0xf58c, 0x4c33, 0x98, 0xd8, 0x3e, 0x15, 0xb3, 0x90, 0xfa, 0x24);
			
			public function HRESULT(ID3D11DeviceContext4 *self, ID3D11Fence* pFence, uint64 Value) Signal;
			public function HRESULT(ID3D11DeviceContext4 *self, ID3D11Fence* pFence, uint64 Value) Wait;
		}
		[CRepr]
		public struct ID3D11Device3 : ID3D11Device2
		{
			public const new Guid IID = .(0xa05c8c37, 0xd2c6, 0x4732, 0xb3, 0xa0, 0x9c, 0xe0, 0xb0, 0xdc, 0x9a, 0xe6);
			
			public function HRESULT(ID3D11Device3 *self, D3D11_TEXTURE2D_DESC1* pDesc1, D3D11_SUBRESOURCE_DATA* pInitialData, ID3D11Texture2D1** ppTexture2D) CreateTexture2D1;
			public function HRESULT(ID3D11Device3 *self, D3D11_TEXTURE3D_DESC1* pDesc1, D3D11_SUBRESOURCE_DATA* pInitialData, ID3D11Texture3D1** ppTexture3D) CreateTexture3D1;
			public function HRESULT(ID3D11Device3 *self, D3D11_RASTERIZER_DESC2* pRasterizerDesc, ID3D11RasterizerState2** ppRasterizerState) CreateRasterizerState2;
			public function HRESULT(ID3D11Device3 *self, ID3D11Resource* pResource, D3D11_SHADER_RESOURCE_VIEW_DESC1* pDesc1, ID3D11ShaderResourceView1** ppSRView1) CreateShaderResourceView1;
			public function HRESULT(ID3D11Device3 *self, ID3D11Resource* pResource, D3D11_UNORDERED_ACCESS_VIEW_DESC1* pDesc1, ID3D11UnorderedAccessView1** ppUAView1) CreateUnorderedAccessView1;
			public function HRESULT(ID3D11Device3 *self, ID3D11Resource* pResource, D3D11_RENDER_TARGET_VIEW_DESC1* pDesc1, ID3D11RenderTargetView1** ppRTView1) CreateRenderTargetView1;
			public function HRESULT(ID3D11Device3 *self, D3D11_QUERY_DESC1* pQueryDesc1, ID3D11Query1** ppQuery1) CreateQuery1;
			public function void(ID3D11Device3 *self, ID3D11DeviceContext3** ppImmediateContext) GetImmediateContext3;
			public function HRESULT(ID3D11Device3 *self, uint32 ContextFlags, ID3D11DeviceContext3** ppDeferredContext) CreateDeferredContext3;
			public function void(ID3D11Device3 *self, ID3D11Resource* pDstResource, uint32 DstSubresource, D3D11_BOX* pDstBox, void* pSrcData, uint32 SrcRowPitch, uint32 SrcDepthPitch) WriteToSubresource;
			public function void(ID3D11Device3 *self, void* pDstData, uint32 DstRowPitch, uint32 DstDepthPitch, ID3D11Resource* pSrcResource, uint32 SrcSubresource, D3D11_BOX* pSrcBox) ReadFromSubresource;
		}
		[CRepr]
		public struct ID3D11Device4 : ID3D11Device3
		{
			public const new Guid IID = .(0x8992ab71, 0x02e6, 0x4b8d, 0xba, 0x48, 0xb0, 0x56, 0xdc, 0xda, 0x42, 0xc4);
			
			public function HRESULT(ID3D11Device4 *self, HANDLE hEvent, uint32* pdwCookie) RegisterDeviceRemovedEvent;
			public function void(ID3D11Device4 *self, uint32 dwCookie) UnregisterDeviceRemoved;
		}
		[CRepr]
		public struct ID3D11Device5 : ID3D11Device4
		{
			public const new Guid IID = .(0x8ffde202, 0xa0e7, 0x45df, 0x9e, 0x01, 0xe8, 0x37, 0x80, 0x1b, 0x5e, 0xa0);
			
			public function HRESULT(ID3D11Device5 *self, HANDLE hFence, Guid* ReturnedInterface, void** ppFence) OpenSharedFence;
			public function HRESULT(ID3D11Device5 *self, uint64 InitialValue, D3D11_FENCE_FLAG Flags, Guid* ReturnedInterface, void** ppFence) CreateFence;
		}
		[CRepr]
		public struct ID3D11Multithread : IUnknown
		{
			public const new Guid IID = .(0x9b7e4e00, 0x342c, 0x4106, 0xa1, 0x9f, 0x4f, 0x27, 0x04, 0xf6, 0x89, 0xf0);
			
			public function void(ID3D11Multithread *self) Enter;
			public function void(ID3D11Multithread *self) Leave;
			public function BOOL(ID3D11Multithread *self, BOOL bMTProtect) SetMultithreadProtected;
			public function BOOL(ID3D11Multithread *self) GetMultithreadProtected;
		}
		[CRepr]
		public struct ID3D11VideoContext2 : ID3D11VideoContext1
		{
			public const new Guid IID = .(0xc4e7374c, 0x6243, 0x4d1b, 0xae, 0x87, 0x52, 0xb4, 0xf7, 0x40, 0xe2, 0x61);
			
			public function void(ID3D11VideoContext2 *self, ID3D11VideoProcessor* pVideoProcessor, DXGI_HDR_METADATA_TYPE Type, uint32 Size, void* pHDRMetaData) VideoProcessorSetOutputHDRMetaData;
			public function void(ID3D11VideoContext2 *self, ID3D11VideoProcessor* pVideoProcessor, DXGI_HDR_METADATA_TYPE* pType, uint32 Size, void* pMetaData) VideoProcessorGetOutputHDRMetaData;
			public function void(ID3D11VideoContext2 *self, ID3D11VideoProcessor* pVideoProcessor, uint32 StreamIndex, DXGI_HDR_METADATA_TYPE Type, uint32 Size, void* pHDRMetaData) VideoProcessorSetStreamHDRMetaData;
			public function void(ID3D11VideoContext2 *self, ID3D11VideoProcessor* pVideoProcessor, uint32 StreamIndex, DXGI_HDR_METADATA_TYPE* pType, uint32 Size, void* pMetaData) VideoProcessorGetStreamHDRMetaData;
		}
		[CRepr]
		public struct ID3D11VideoDevice2 : ID3D11VideoDevice1
		{
			public const new Guid IID = .(0x59c0cb01, 0x35f0, 0x4a70, 0x8f, 0x67, 0x87, 0x90, 0x5c, 0x90, 0x6a, 0x53);
			
			public function HRESULT(ID3D11VideoDevice2 *self, D3D11_FEATURE_VIDEO Feature, void* pFeatureSupportData, uint32 FeatureSupportDataSize) CheckFeatureSupport;
			public function HRESULT(ID3D11VideoDevice2 *self, ID3D11CryptoSession* pCryptoSession, D3D11_CRYPTO_SESSION_KEY_EXCHANGE_FLAGS flags, uint32 DataSize, void* pData) NegotiateCryptoSessionKeyExchangeMT;
		}
		[CRepr]
		public struct ID3D11VideoContext3 : ID3D11VideoContext2
		{
			public const new Guid IID = .(0xa9e2faa0, 0xcb39, 0x418f, 0xa0, 0xb7, 0xd8, 0xaa, 0xd4, 0xde, 0x67, 0x2e);
			
			public function HRESULT(ID3D11VideoContext3 *self, ID3D11VideoDecoder* pDecoder, ID3D11VideoDecoderOutputView* pView, uint32 ContentKeySize, void* pContentKey, uint32 NumComponentHistograms, uint32* pHistogramOffsets, ID3D11Buffer** ppHistogramBuffers) DecoderBeginFrame1;
			public function HRESULT(ID3D11VideoContext3 *self, ID3D11VideoDecoder* pDecoder, uint32 NumBuffers, D3D11_VIDEO_DECODER_BUFFER_DESC2* pBufferDesc) SubmitDecoderBuffers2;
		}
		[CRepr]
		public struct ID3D11ShaderReflectionType
		{
			public const new Guid IID = .(0x6e6ffa6a, 0x9bae, 0x4613, 0xa5, 0x1e, 0x91, 0x65, 0x2d, 0x50, 0x8c, 0x21);
			
			public function HRESULT(ID3D11ShaderReflectionType *self, D3D11_SHADER_TYPE_DESC* pDesc) GetDesc;
			public function ID3D11ShaderReflectionType*(ID3D11ShaderReflectionType *self, uint32 Index) GetMemberTypeByIndex;
			public function ID3D11ShaderReflectionType*(ID3D11ShaderReflectionType *self, PSTR Name) GetMemberTypeByName;
			public function PSTR(ID3D11ShaderReflectionType *self, uint32 Index) GetMemberTypeName;
			public function HRESULT(ID3D11ShaderReflectionType *self, ID3D11ShaderReflectionType* pType) IsEqual;
			public function ID3D11ShaderReflectionType*(ID3D11ShaderReflectionType *self) GetSubType;
			public function ID3D11ShaderReflectionType*(ID3D11ShaderReflectionType *self) GetBaseClass;
			public function uint32(ID3D11ShaderReflectionType *self) GetNumInterfaces;
			public function ID3D11ShaderReflectionType*(ID3D11ShaderReflectionType *self, uint32 uIndex) GetInterfaceByIndex;
			public function HRESULT(ID3D11ShaderReflectionType *self, ID3D11ShaderReflectionType* pType) IsOfType;
			public function HRESULT(ID3D11ShaderReflectionType *self, ID3D11ShaderReflectionType* pBase) ImplementsInterface;
		}
		[CRepr]
		public struct ID3D11ShaderReflectionVariable
		{
			public const new Guid IID = .(0x51f23923, 0xf3e5, 0x4bd1, 0x91, 0xcb, 0x60, 0x61, 0x77, 0xd8, 0xdb, 0x4c);
			
			public function HRESULT(ID3D11ShaderReflectionVariable *self, D3D11_SHADER_VARIABLE_DESC* pDesc) GetDesc;
			public function ID3D11ShaderReflectionType*(ID3D11ShaderReflectionVariable *self) GetType;
			public function ID3D11ShaderReflectionConstantBuffer*(ID3D11ShaderReflectionVariable *self) GetBuffer;
			public function uint32(ID3D11ShaderReflectionVariable *self, uint32 uArrayIndex) GetInterfaceSlot;
		}
		[CRepr]
		public struct ID3D11ShaderReflectionConstantBuffer
		{
			public const new Guid IID = .(0xeb62d63d, 0x93dd, 0x4318, 0x8a, 0xe8, 0xc6, 0xf8, 0x3a, 0xd3, 0x71, 0xb8);
			
			public function HRESULT(ID3D11ShaderReflectionConstantBuffer *self, D3D11_SHADER_BUFFER_DESC* pDesc) GetDesc;
			public function ID3D11ShaderReflectionVariable*(ID3D11ShaderReflectionConstantBuffer *self, uint32 Index) GetVariableByIndex;
			public function ID3D11ShaderReflectionVariable*(ID3D11ShaderReflectionConstantBuffer *self, PSTR Name) GetVariableByName;
		}
		[CRepr]
		public struct ID3D11ShaderReflection : IUnknown
		{
			public const new Guid IID = .(0x8d536ca1, 0x0cca, 0x4956, 0xa8, 0x37, 0x78, 0x69, 0x63, 0x75, 0x55, 0x84);
			
			public function HRESULT(ID3D11ShaderReflection *self, D3D11_SHADER_DESC* pDesc) GetDesc;
			public function ID3D11ShaderReflectionConstantBuffer*(ID3D11ShaderReflection *self, uint32 Index) GetConstantBufferByIndex;
			public function ID3D11ShaderReflectionConstantBuffer*(ID3D11ShaderReflection *self, PSTR Name) GetConstantBufferByName;
			public function HRESULT(ID3D11ShaderReflection *self, uint32 ResourceIndex, D3D11_SHADER_INPUT_BIND_DESC* pDesc) GetResourceBindingDesc;
			public function HRESULT(ID3D11ShaderReflection *self, uint32 ParameterIndex, D3D11_SIGNATURE_PARAMETER_DESC* pDesc) GetInputParameterDesc;
			public function HRESULT(ID3D11ShaderReflection *self, uint32 ParameterIndex, D3D11_SIGNATURE_PARAMETER_DESC* pDesc) GetOutputParameterDesc;
			public function HRESULT(ID3D11ShaderReflection *self, uint32 ParameterIndex, D3D11_SIGNATURE_PARAMETER_DESC* pDesc) GetPatchConstantParameterDesc;
			public function ID3D11ShaderReflectionVariable*(ID3D11ShaderReflection *self, PSTR Name) GetVariableByName;
			public function HRESULT(ID3D11ShaderReflection *self, PSTR Name, D3D11_SHADER_INPUT_BIND_DESC* pDesc) GetResourceBindingDescByName;
			public function uint32(ID3D11ShaderReflection *self) GetMovInstructionCount;
			public function uint32(ID3D11ShaderReflection *self) GetMovcInstructionCount;
			public function uint32(ID3D11ShaderReflection *self) GetConversionInstructionCount;
			public function uint32(ID3D11ShaderReflection *self) GetBitwiseInstructionCount;
			public function D3D_PRIMITIVE(ID3D11ShaderReflection *self) GetGSInputPrimitive;
			public function BOOL(ID3D11ShaderReflection *self) IsSampleFrequencyShader;
			public function uint32(ID3D11ShaderReflection *self) GetNumInterfaceSlots;
			public function HRESULT(ID3D11ShaderReflection *self, D3D_FEATURE_LEVEL* pLevel) GetMinFeatureLevel;
			public function uint32(ID3D11ShaderReflection *self, uint32* pSizeX, uint32* pSizeY, uint32* pSizeZ) GetThreadGroupSize;
			public function uint64(ID3D11ShaderReflection *self) GetRequiresFlags;
		}
		[CRepr]
		public struct ID3D11LibraryReflection : IUnknown
		{
			public const new Guid IID = .(0x54384f1b, 0x5b3e, 0x4bb7, 0xae, 0x01, 0x60, 0xba, 0x30, 0x97, 0xcb, 0xb6);
			
			public function HRESULT(ID3D11LibraryReflection *self, D3D11_LIBRARY_DESC* pDesc) GetDesc;
			public function ID3D11FunctionReflection*(ID3D11LibraryReflection *self, int32 FunctionIndex) GetFunctionByIndex;
		}
		[CRepr]
		public struct ID3D11FunctionReflection
		{
			public const new Guid IID = .(0x207bcecb, 0xd683, 0x4a06, 0xa8, 0xa3, 0x9b, 0x14, 0x9b, 0x9f, 0x73, 0xa4);
			
			public function HRESULT(ID3D11FunctionReflection *self, D3D11_FUNCTION_DESC* pDesc) GetDesc;
			public function ID3D11ShaderReflectionConstantBuffer*(ID3D11FunctionReflection *self, uint32 BufferIndex) GetConstantBufferByIndex;
			public function ID3D11ShaderReflectionConstantBuffer*(ID3D11FunctionReflection *self, PSTR Name) GetConstantBufferByName;
			public function HRESULT(ID3D11FunctionReflection *self, uint32 ResourceIndex, D3D11_SHADER_INPUT_BIND_DESC* pDesc) GetResourceBindingDesc;
			public function ID3D11ShaderReflectionVariable*(ID3D11FunctionReflection *self, PSTR Name) GetVariableByName;
			public function HRESULT(ID3D11FunctionReflection *self, PSTR Name, D3D11_SHADER_INPUT_BIND_DESC* pDesc) GetResourceBindingDescByName;
			public function ID3D11FunctionParameterReflection*(ID3D11FunctionReflection *self, int32 ParameterIndex) GetFunctionParameter;
		}
		[CRepr]
		public struct ID3D11FunctionParameterReflection
		{
			public const new Guid IID = .(0x42757488, 0x334f, 0x47fe, 0x98, 0x2e, 0x1a, 0x65, 0xd0, 0x8c, 0xc4, 0x62);
			
			public function HRESULT(ID3D11FunctionParameterReflection *self, D3D11_PARAMETER_DESC* pDesc) GetDesc;
		}
		[CRepr]
		public struct ID3D11ModuleInstance : IUnknown
		{
			public const new Guid IID = .(0x469e07f7, 0x045a, 0x48d5, 0xaa, 0x12, 0x68, 0xa4, 0x78, 0xcd, 0xf7, 0x5d);
			
			public function HRESULT(ID3D11ModuleInstance *self, uint32 uSrcSlot, uint32 uDstSlot, uint32 cbDstOffset) BindConstantBuffer;
			public function HRESULT(ID3D11ModuleInstance *self, PSTR pName, uint32 uDstSlot, uint32 cbDstOffset) BindConstantBufferByName;
			public function HRESULT(ID3D11ModuleInstance *self, uint32 uSrcSlot, uint32 uDstSlot, uint32 uCount) BindResource;
			public function HRESULT(ID3D11ModuleInstance *self, PSTR pName, uint32 uDstSlot, uint32 uCount) BindResourceByName;
			public function HRESULT(ID3D11ModuleInstance *self, uint32 uSrcSlot, uint32 uDstSlot, uint32 uCount) BindSampler;
			public function HRESULT(ID3D11ModuleInstance *self, PSTR pName, uint32 uDstSlot, uint32 uCount) BindSamplerByName;
			public function HRESULT(ID3D11ModuleInstance *self, uint32 uSrcSlot, uint32 uDstSlot, uint32 uCount) BindUnorderedAccessView;
			public function HRESULT(ID3D11ModuleInstance *self, PSTR pName, uint32 uDstSlot, uint32 uCount) BindUnorderedAccessViewByName;
			public function HRESULT(ID3D11ModuleInstance *self, uint32 uSrcSrvSlot, uint32 uDstUavSlot, uint32 uCount) BindResourceAsUnorderedAccessView;
			public function HRESULT(ID3D11ModuleInstance *self, PSTR pSrvName, uint32 uDstUavSlot, uint32 uCount) BindResourceAsUnorderedAccessViewByName;
		}
		[CRepr]
		public struct ID3D11Module : IUnknown
		{
			public const new Guid IID = .(0xcac701ee, 0x80fc, 0x4122, 0x82, 0x42, 0x10, 0xb3, 0x9c, 0x8c, 0xec, 0x34);
			
			public function HRESULT(ID3D11Module *self, PSTR pNamespace, ID3D11ModuleInstance** ppModuleInstance) CreateInstance;
		}
		[CRepr]
		public struct ID3D11Linker : IUnknown
		{
			public const new Guid IID = .(0x59a6cd0e, 0xe10d, 0x4c1f, 0x88, 0xc0, 0x63, 0xab, 0xa1, 0xda, 0xf3, 0x0e);
			
			public function HRESULT(ID3D11Linker *self, ID3D11ModuleInstance* pEntry, PSTR pEntryName, PSTR pTargetName, uint32 uFlags, ID3DBlob** ppShaderBlob, ID3DBlob** ppErrorBuffer) Link;
			public function HRESULT(ID3D11Linker *self, ID3D11ModuleInstance* pLibraryMI) UseLibrary;
			public function HRESULT(ID3D11Linker *self, uint32 uCBufferSlot, uint32 uCBufferEntry) AddClipPlaneFromCBuffer;
		}
		[CRepr]
		public struct ID3D11LinkingNode : IUnknown
		{
			public const new Guid IID = .(0xd80dd70c, 0x8d2f, 0x4751, 0x94, 0xa1, 0x03, 0xc7, 0x9b, 0x35, 0x56, 0xdb);
			
		}
		[CRepr]
		public struct ID3D11FunctionLinkingGraph : IUnknown
		{
			public const new Guid IID = .(0x54133220, 0x1ce8, 0x43d3, 0x82, 0x36, 0x98, 0x55, 0xc5, 0xce, 0xec, 0xff);
			
			public function HRESULT(ID3D11FunctionLinkingGraph *self, ID3D11ModuleInstance** ppModuleInstance, ID3DBlob** ppErrorBuffer) CreateModuleInstance;
			public function HRESULT(ID3D11FunctionLinkingGraph *self, D3D11_PARAMETER_DESC* pInputParameters, uint32 cInputParameters, ID3D11LinkingNode** ppInputNode) SetInputSignature;
			public function HRESULT(ID3D11FunctionLinkingGraph *self, D3D11_PARAMETER_DESC* pOutputParameters, uint32 cOutputParameters, ID3D11LinkingNode** ppOutputNode) SetOutputSignature;
			public function HRESULT(ID3D11FunctionLinkingGraph *self, PSTR pModuleInstanceNamespace, ID3D11Module* pModuleWithFunctionPrototype, PSTR pFunctionName, ID3D11LinkingNode** ppCallNode) CallFunction;
			public function HRESULT(ID3D11FunctionLinkingGraph *self, ID3D11LinkingNode* pSrcNode, int32 SrcParameterIndex, ID3D11LinkingNode* pDstNode, int32 DstParameterIndex) PassValue;
			public function HRESULT(ID3D11FunctionLinkingGraph *self, ID3D11LinkingNode* pSrcNode, int32 SrcParameterIndex, PSTR pSrcSwizzle, ID3D11LinkingNode* pDstNode, int32 DstParameterIndex, PSTR pDstSwizzle) PassValueWithSwizzle;
			public function HRESULT(ID3D11FunctionLinkingGraph *self, ID3DBlob** ppErrorBuffer) GetLastError;
			public function HRESULT(ID3D11FunctionLinkingGraph *self, uint32 uFlags, ID3DBlob** ppBuffer) GenerateHlsl;
		}
		[CRepr]
		public struct ID3D11ShaderTrace : IUnknown
		{
			public const new Guid IID = .(0x36b013e6, 0x2811, 0x4845, 0xba, 0xa7, 0xd6, 0x23, 0xfe, 0x0d, 0xf1, 0x04);
			
			public function HRESULT(ID3D11ShaderTrace *self, uint64* pTestCount) TraceReady;
			public function void(ID3D11ShaderTrace *self) ResetTrace;
			public function HRESULT(ID3D11ShaderTrace *self, D3D11_TRACE_STATS* pTraceStats) GetTraceStats;
			public function HRESULT(ID3D11ShaderTrace *self, uint32 stampIndex) PSSelectStamp;
			public function HRESULT(ID3D11ShaderTrace *self, D3D11_TRACE_REGISTER* pRegister, D3D11_TRACE_VALUE* pValue) GetInitialRegisterContents;
			public function HRESULT(ID3D11ShaderTrace *self, uint32 stepIndex, D3D11_TRACE_STEP* pTraceStep) GetStep;
			public function HRESULT(ID3D11ShaderTrace *self, uint32 stepIndex, uint32 writtenRegisterIndex, D3D11_TRACE_REGISTER* pRegister, D3D11_TRACE_VALUE* pValue) GetWrittenRegister;
			public function HRESULT(ID3D11ShaderTrace *self, uint32 stepIndex, uint32 readRegisterIndex, D3D11_TRACE_REGISTER* pRegister, D3D11_TRACE_VALUE* pValue) GetReadRegister;
		}
		[CRepr]
		public struct ID3D11ShaderTraceFactory : IUnknown
		{
			public const new Guid IID = .(0x1fbad429, 0x66ab, 0x41cc, 0x96, 0x17, 0x66, 0x7a, 0xc1, 0x0e, 0x44, 0x59);
			
			public function HRESULT(ID3D11ShaderTraceFactory *self, IUnknown* pShader, D3D11_SHADER_TRACE_DESC* pTraceDesc, ID3D11ShaderTrace** ppShaderTrace) CreateShaderTrace;
		}
		[CRepr]
		public struct ID3DX11Scan : IUnknown
		{
			public const new Guid IID = .(0x5089b68f, 0xe71d, 0x4d38, 0xbe, 0x8e, 0xf3, 0x63, 0xb9, 0x5a, 0x94, 0x05);
			
			public function HRESULT(ID3DX11Scan *self, D3DX11_SCAN_DIRECTION Direction) SetScanDirection;
			public function HRESULT(ID3DX11Scan *self, D3DX11_SCAN_DATA_TYPE ElementType, D3DX11_SCAN_OPCODE OpCode, uint32 ElementScanSize, ID3D11UnorderedAccessView* pSrc, ID3D11UnorderedAccessView* pDst) Scan;
			public function HRESULT(ID3DX11Scan *self, D3DX11_SCAN_DATA_TYPE ElementType, D3DX11_SCAN_OPCODE OpCode, uint32 ElementScanSize, uint32 ElementScanPitch, uint32 ScanCount, ID3D11UnorderedAccessView* pSrc, ID3D11UnorderedAccessView* pDst) Multiscan;
		}
		[CRepr]
		public struct ID3DX11SegmentedScan : IUnknown
		{
			public const new Guid IID = .(0xa915128c, 0xd954, 0x4c79, 0xbf, 0xe1, 0x64, 0xdb, 0x92, 0x31, 0x94, 0xd6);
			
			public function HRESULT(ID3DX11SegmentedScan *self, D3DX11_SCAN_DIRECTION Direction) SetScanDirection;
			public function HRESULT(ID3DX11SegmentedScan *self, D3DX11_SCAN_DATA_TYPE ElementType, D3DX11_SCAN_OPCODE OpCode, uint32 ElementScanSize, ID3D11UnorderedAccessView* pSrc, ID3D11UnorderedAccessView* pSrcElementFlags, ID3D11UnorderedAccessView* pDst) SegScan;
		}
		[CRepr]
		public struct ID3DX11FFT : IUnknown
		{
			public const new Guid IID = .(0xb3f7a938, 0x4c93, 0x4310, 0xa6, 0x75, 0xb3, 0x0d, 0x6d, 0xe5, 0x05, 0x53);
			
			public function HRESULT(ID3DX11FFT *self, float ForwardScale) SetForwardScale;
			public function float(ID3DX11FFT *self) GetForwardScale;
			public function HRESULT(ID3DX11FFT *self, float InverseScale) SetInverseScale;
			public function float(ID3DX11FFT *self) GetInverseScale;
			public function HRESULT(ID3DX11FFT *self, uint32 NumTempBuffers, ID3D11UnorderedAccessView** ppTempBuffers, uint32 NumPrecomputeBuffers, ID3D11UnorderedAccessView** ppPrecomputeBufferSizes) AttachBuffersAndPrecompute;
			public function HRESULT(ID3DX11FFT *self, ID3D11UnorderedAccessView* pInputBuffer, ID3D11UnorderedAccessView** ppOutputBuffer) ForwardTransform;
			public function HRESULT(ID3DX11FFT *self, ID3D11UnorderedAccessView* pInputBuffer, ID3D11UnorderedAccessView** ppOutputBuffer) InverseTransform;
		}
		
		// --- Functions ---
		
		[Import("d3d11.dll"), CLink, CallingConvention(.Stdcall)]
		public static extern HRESULT D3D11CreateDevice(IDXGIAdapter* pAdapter, D3D_DRIVER_TYPE DriverType, HINSTANCE Software, D3D11_CREATE_DEVICE_FLAG Flags, D3D_FEATURE_LEVEL* pFeatureLevels, uint32 FeatureLevels, uint32 SDKVersion, ID3D11Device** ppDevice, D3D_FEATURE_LEVEL* pFeatureLevel, ID3D11DeviceContext** ppImmediateContext);
		[Import("d3d11.dll"), CLink, CallingConvention(.Stdcall)]
		public static extern HRESULT D3D11CreateDeviceAndSwapChain(IDXGIAdapter* pAdapter, D3D_DRIVER_TYPE DriverType, HINSTANCE Software, D3D11_CREATE_DEVICE_FLAG Flags, D3D_FEATURE_LEVEL* pFeatureLevels, uint32 FeatureLevels, uint32 SDKVersion, DXGI_SWAP_CHAIN_DESC* pSwapChainDesc, IDXGISwapChain** ppSwapChain, ID3D11Device** ppDevice, D3D_FEATURE_LEVEL* pFeatureLevel, ID3D11DeviceContext** ppImmediateContext);
		[Import("d3dcompiler_47.dll"), CLink, CallingConvention(.Stdcall)]
		public static extern HRESULT D3DDisassemble11Trace(void* pSrcData, uint SrcDataSize, ID3D11ShaderTrace* pTrace, uint32 StartStep, uint32 NumSteps, uint32 Flags, ID3DBlob** ppDisassembly);
		[Import("d3dcsx.dll"), CLink, CallingConvention(.Stdcall)]
		public static extern HRESULT D3DX11CreateScan(ID3D11DeviceContext* pDeviceContext, uint32 MaxElementScanSize, uint32 MaxScanCount, ID3DX11Scan** ppScan);
		[Import("d3dcsx.dll"), CLink, CallingConvention(.Stdcall)]
		public static extern HRESULT D3DX11CreateSegmentedScan(ID3D11DeviceContext* pDeviceContext, uint32 MaxElementScanSize, ID3DX11SegmentedScan** ppScan);
		[Import("d3dcsx.dll"), CLink, CallingConvention(.Stdcall)]
		public static extern HRESULT D3DX11CreateFFT(ID3D11DeviceContext* pDeviceContext, D3DX11_FFT_DESC* pDesc, uint32 Flags, D3DX11_FFT_BUFFER_INFO* pBufferInfo, ID3DX11FFT** ppFFT);
		[Import("d3dcsx.dll"), CLink, CallingConvention(.Stdcall)]
		public static extern HRESULT D3DX11CreateFFT1DReal(ID3D11DeviceContext* pDeviceContext, uint32 X, uint32 Flags, D3DX11_FFT_BUFFER_INFO* pBufferInfo, ID3DX11FFT** ppFFT);
		[Import("d3dcsx.dll"), CLink, CallingConvention(.Stdcall)]
		public static extern HRESULT D3DX11CreateFFT1DComplex(ID3D11DeviceContext* pDeviceContext, uint32 X, uint32 Flags, D3DX11_FFT_BUFFER_INFO* pBufferInfo, ID3DX11FFT** ppFFT);
		[Import("d3dcsx.dll"), CLink, CallingConvention(.Stdcall)]
		public static extern HRESULT D3DX11CreateFFT2DReal(ID3D11DeviceContext* pDeviceContext, uint32 X, uint32 Y, uint32 Flags, D3DX11_FFT_BUFFER_INFO* pBufferInfo, ID3DX11FFT** ppFFT);
		[Import("d3dcsx.dll"), CLink, CallingConvention(.Stdcall)]
		public static extern HRESULT D3DX11CreateFFT2DComplex(ID3D11DeviceContext* pDeviceContext, uint32 X, uint32 Y, uint32 Flags, D3DX11_FFT_BUFFER_INFO* pBufferInfo, ID3DX11FFT** ppFFT);
		[Import("d3dcsx.dll"), CLink, CallingConvention(.Stdcall)]
		public static extern HRESULT D3DX11CreateFFT3DReal(ID3D11DeviceContext* pDeviceContext, uint32 X, uint32 Y, uint32 Z, uint32 Flags, D3DX11_FFT_BUFFER_INFO* pBufferInfo, ID3DX11FFT** ppFFT);
		[Import("d3dcsx.dll"), CLink, CallingConvention(.Stdcall)]
		public static extern HRESULT D3DX11CreateFFT3DComplex(ID3D11DeviceContext* pDeviceContext, uint32 X, uint32 Y, uint32 Z, uint32 Flags, D3DX11_FFT_BUFFER_INFO* pBufferInfo, ID3DX11FFT** ppFFT);
		
	}
}
